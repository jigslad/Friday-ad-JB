{% block search_html %}
<div class="row">
      <div class="columns">
            {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'class': 'outline'}}) }}
               {{ form_errors(form) }}

                <div class="row">
                    <div class="large-3 columns {% if form.from_date.vars.errors|length %} error{% endif %}">
                        <div class="relative">
                            <span class="datepicker-icon event_start"></span>
                            {{ form_widget(form.from_date, {'attr': {'placeholder': 'Date from'}}) }}
                            {{ form_errors(form.from_date) }}
                        </div>
                    </div>
                    <div class="large-3 columns {% if form.to_date.vars.errors|length %} error{% endif %}">
                        <div class="relative">
                            <span class="datepicker-icon event_start"></span>
                            {{ form_widget(form.to_date, {'attr': {'placeholder': 'Date to'}}) }}
                            {{ form_errors(form.to_date) }}
                         </div>
                    </div>
                    <div class="large-3 columns">
                        {{ form_widget(form.date_filter_type) }}
                    </div>
                    <div class="large-3 columns">
                        {{ form_widget(form.admin_user_email, {'attr': {'placeholder': 'Admin user email'}}) }}
                        {{ form_errors(form.admin_user_email) }}
                    </div>
                </div>

                <hr class="hr_margin">
                
                <div class="row">
                    <div class="large-6 columns">
                        {{ form_widget(form.role_id, {'attr': {'class':'form-control', 'placeholder': 'Role Id'}}) }}
                    </div>
                    <div class="large-3 columns">
                        {{ form_widget(form.ad_id, {'attr': {'class':'form-control', 'placeholder': 'Advert Reference'}}) }}
                    </div>
                    <div class="large-3 columns">
                        {{ form_widget(form.ti_ad_id, {'attr': {'class':'form-control', 'placeholder': 'Old Trade-It adref'}}) }}
                    </div>
                </div>
            
                <hr class="hr_margin">
                
                <div class="row">
                    <div class="large-6 columns">
                        {{ form_widget(form.category_1, {'attr': {'class':'form-control', 'placeholder': 'Category 1'}}) }}
                    </div>
                    <div class="large-6 columns">
                        {{ form_widget(form.category_2, {'attr': {'class':'form-control', 'placeholder': 'Category 2'}}) }}
                    </div>
                </div>
                <div class="row">
                    <div class="large-6 columns">
                        {{ form_widget(form.category_3, {'attr': {'class':'form-control', 'placeholder': 'Category 3'}}) }}
                    </div>
                    <div class="large-6 columns">
                        {{ form_widget(form.category_4, {'attr': {'class':'form-control', 'placeholder': 'Category 4'}}) }}
                    </div>
                </div>
                    
                <hr class="hr_margin">                
               
                <div class="row">
                	<div class="large-4 columns" style="vertical-align:top;">
                        {{ form_widget(form.location_group__location_group_id, {'attr': {'class':'form-control'}}) }}
                    </div>
                    <div class="large-4 columns">
                        {{ form_widget(form.county_id, {'attr': {'class':'form-control'}}) }}
                    </div>
                    <div class="large-4 columns" style="width:33%;padding-right:18px">
                        {{ form_widget(form.town_id, {'attr': {'class':'form-control'}}) }}
                    </div>                        
                </div>
                               
                <hr class="hr_margin">
                
                 <div class="search_box">
                    <div class="row">
                        <div class="large-3 columns">
                            {{ form_widget(form.print_edition_id, {'attr': {'class':'form-control', 'placeholder': 'Advert Reference'}}) }}
                        </div>
                        <div class="large-3 columns">
                            {{ form_widget(form.paid_ads, {'attr': {'class':'form-control'}}) }}
                            {{ form_label(form.paid_ads) }}<br />
                            {{ form_widget(form.admin_ads, {'attr': {'class':'form-control'}}) }}
                            {{ form_label(form.admin_ads) }}<br />
                            {{ form_widget(form.is_paa_lite, {'attr': {'class':'form-control'}}) }}
                            {{ form_label(form.is_paa_lite) }}
                        </div>
                        <div class="large-6 columns"></div>
                    </div>
                </div>
                        
                
                <hr class="hr_margin">

                <div class="row">
                    <div class="large-12 columns {% if form.report_columns.vars.errors|length %} error{% endif %}">
                        <h4>{{'Display columns'|trans}}</h4>
                        
                        <div class="row" id="ad_report_columns">
                            {% set choicesIdArray = form.report_columns.vars.choices|keys %}
                            {% set columns = 4 %}
                            {% set ctr = 0 %}
                            {% set totalItems = form.report_columns.vars.choices|length %}
                            {% set itemsPerCol = (totalItems/columns)|round(0, 'floor') %}
                            {% set extraColumn = (totalItems % columns) %}
                            {% set colCounter = {} %}
                            {% for i in 0..columns-1 %}
                                {% if loop.index0 < extraColumn %}
                                    {% set colCounter = colCounter|merge({0: itemsPerCol + 1}) %}
                                {% else  %}
                                    {% set colCounter = colCounter|merge({0: itemsPerCol}) %}
                                {% endif %}
                            {% endfor %}
                            {% for i in 0..columns-1 %}
                                <div class="large-3 columns">
                                    <ul class="checkbox-list">
                                        {% for k in 0..colCounter[i]-1 %}
                                            {% if choicesIdArray[ctr] is defined %}
                                                {% set choice = form.report_columns.vars.choices[ctr] %}
                                                <li>
                                                    <input type="checkbox" value="{{ choice.value }}" name="{{ form.report_columns.vars.full_name }}[]" id="{{ form.report_columns.vars.id }}_{{ choice.value }}" {% if searchParams['report_columns'] is defined and choice.value in searchParams['report_columns'] %}checked="checked"{% endif %} />
                                                    <label for="{{ form.report_columns.vars.id }}_{{ choice.value }}">{{ choice.label|raw }}</label>
                                                </li>
    
                                            {% endif %}
                                            {% set ctr = ctr + 1 %}
                                        {% endfor %}
                                    </ul>
                                </div>
                            {% endfor %}
                        </div>
                        {% do attribute(form, 'report_columns').setRendered %}
                        {{ form_errors(form.report_columns) }}
                    </div>
                </div>

                <hr class="hr_margin">
                
                <div class="row">
                    <div class="large-6 columns">
                        {{ form_widget(form.csv_name, {'attr': {'class':'form-control', 'placeholder': 'Search filter name'}}) }}
                        {{ form_errors(form.csv_name) }}
                    </div>
                    <div class="large-6 columns">
                        {{ form_widget(form.csv_email, {'attr': {'class':'form-control', 'placeholder': 'Email address (Csv file will be emailed once generated)'}}) }}
                        {{ form_errors(form.csv_email) }}
                    </div>
                </div>
                <hr class="hr_margin">

                <div class="row">
                    <div class="large-12 columns">
                        {{ form_widget(form.search, {'attr': {'class':'small button'}}) }}
                        {{ form_widget(form.reset, {'attr': {'class':'small button'}}) }}
                        {% if adReportCsvList %}
                            {{ form_widget(form.download_csv, {'attr': {'class':'small button'}}) }}
                        {% else %}
                            {% do attribute(form, 'download_csv').setRendered %}
                        {% endif %}
                    </div>
                </div>

            {{ form_end(form) }}
       </div>
  </div>
  <div id="adReportCsvListModal" class="reveal-modal small" data-reveal></div>
{% endblock %}

{% block search_script -%}
{{ include('FaCoreBundle:Default:blockJs.html.twig') }}
<script language="javascript" type="text/javascript">
//<![CDATA[
    $('.datepicker-icon').click(function(e){
        $(this).next('input.fdatepicker').focus();
    });
    $('#fa_item_report_reset').click(function(e){
        window.location.href = "{{ path('fa_report_ad') }}";
    });
    $('#fa_item_report_download_csv').click(function(e){
        showAdReportCsvList();
    });

    (function($) {
        var re = /([^&=]+)=?([^&]*)/g;
        var decode = function(str) {
            return decodeURIComponent(str.replace(/\+/g, ' '));
        };
        $.parseParams = function(query) {
            var params = {}, e;
            if (query) {
                if (query.substr(0, 1) == '?') {
                    query = query.substr(1);
                }

                while (e = re.exec(query)) {
                    var k = decode(e[1]);
                    var v = decode(e[2]);
                    if (params[k] !== undefined) {
                        if (!$.isArray(params[k])) {
                            params[k] = [params[k]];
                        }
                        params[k].push(v);
                    } else {
                        params[k] = v;
                    }
                }
            }
            return params;
        };
    })(jQuery);
    
    $(document).ready(function(){
        enableDisableDisallowedFields();
        $("#fa_item_report_category_1").change(function(){
            loadCategoryByLevel($(this).val(), 2)
            loadCategoryByLevel('', 3)
            loadCategoryByLevel('', 4)
        });
        
        $("#fa_item_report_category_2").change(function(){
            loadCategoryByLevel($(this).val(), 3)
            loadCategoryByLevel('', 4)
        });
        
        $("#fa_item_report_category_3").change(function(){
            loadCategoryByLevel($(this).val(), 4)
        });
        
        $("form[name='fa_item_report']").submit(function()
        {
            var category4   = $("#fa_item_report_category_4").val();
            var category3   = $("#fa_item_report_category_3").val();
            var category2   = $("#fa_item_report_category_2").val();
            var category1   = $("#fa_item_report_category_1").val();
            var category_id = ''; 
    
            if (category4)
                category_id = category4;
            else if (category3)
                category_id = category3;
            else if (category2)
                category_id = category2;
            else if (category1)
                category_id = category1;
    
            $("#fa_item_report_category_id").val(category_id);
    
           return true;
        });
    });
    
    function loadCategoryByLevel(id, level)
    {
        var category_selector = $('#fa_item_report_category_'+level);
        category_selector.html('<option value="">Select Category '+level+'</option>');
    
        if (id) {
            var data = {
                id: id
            };
            $.ajax({
                type: 'post',
                url: (level == 4) ? '{{ path("category_ajax_get_nested_node_json") }}' : '{{ path("category_ajax_get_node_json") }}',
                data: data,
                success: function(data) {
                    for (var i=0, total = data.length; i < total; i++) {
                        category_selector.append('<option value="' + data[i].id + '">' + data[i].text + '</option>');
                    }
                }
            });
        }
    }

	if($("#fa_item_report_location_group__location_group_id").val()!='') {
		var groupId = $("#fa_item_report_location_group__location_group_id").val();
    	getDomicileTownByGroupOnLoad(groupId);
	} else {
		$('#fa_item_report_county_id').find('option').remove().end();
		$('#fa_item_report_town_id').find('option').remove().end();
	}

	if($("#fa_item_report_location_group__county_id").val()!='') {
		var countyId = $("#fa_item_report_location_group__county_id").val();
		$('#fa_item_report_location_group__county_id').val(countyId).trigger('change');
	}

     function getDomicileTownByGroupOnLoad(groupId) {
    	var countyvars = townvars = [], hash;
	    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
	    for(var i = 0; i < hashes.length; i++)
	    {			
	        hash = hashes[i].split('=');
			var variable_decode = decodeURIComponent(hash[0]);
			var county_name = 'fa_item_report[county_id]';
			var town_name = 'fa_item_report[town_id]';
			
			if(variable_decode.indexOf(town_name) != -1) {
	        	townvars.push(hash[1]);    	        
	        }
			if(variable_decode.indexOf(county_name) != -1) {
	        	countyvars.push(hash[1]);
	        }
	    }

         var data = {
            id: groupId,
            locationGroupId: groupId,
            locationField: 'domicile'
        };
     
        $.ajax({
            type: 'post',
            url: '{{ path("location_group_by_id_ajax_get_node_json") }}',
            data: data,
            success: function(data) {
                var county_selector = $('#fa_item_report_county_id');
                var town_selector = $('#fa_item_report_town_id');
                var county_selector_val = countyvars;
                var town_selector_val = townvars;
                var domiciledata = data.domicile;
                var towndata = data.town;

                county_selector.html('');town_selector.html('');
                county_selector.html('<option value="">Select County</option>');
                town_selector.html('<option value="">Select Town</option>');
                countselected = townselected = [];
                
                for (var di=0, domiciletotal = domiciledata.length; di < domiciletotal; di++) {
                	countselected[di] = '';
                	for (var dj=0, domicilejtotal = county_selector_val.length; dj < domicilejtotal; dj++) {
                    	if(domiciledata[di].id == county_selector_val[dj]) {
                    		countselected[di] = 'selected="selected"';
                        }
                	}                	
                    county_selector.append('<option value="' + domiciledata[di].id + '" '+countselected[di]+'>' + domiciledata[di].text + '</option>');
                }
                
                for (var i=0, towntotal = towndata.length; i < towntotal; i++) {
                	townselected[i] = '';

                	for (var j=0, townjtotal = town_selector_val.length; j < townjtotal; j++) {
                    	if(towndata[i].id == town_selector_val[j]) {
                    		townselected[i] = 'selected="selected"';
                        }
                	}
                    town_selector.append('<option value="' + towndata[i].id + '"  '+townselected[i]+'>' + towndata[i].text + '</option>');
                }
            }
        });
    }

    $("#fa_item_report_location_group__location_group_id").change(function(){
        var data = {
            id: $(this).val(),
            locationGroupId: $(this).val(),
            locationField: 'domicile'
        };
     
        $.ajax({
            type: 'post',
            url: '{{ path("location_group_by_id_ajax_get_node_json") }}',
            data: data,
            success: function(data) {
                var $county_selector = $('#fa_item_report_county_id');
                var $town_selector = $('#fa_item_report_town_id');
                var domiciledata = data.domicile;
                var towndata = data.town;
                $county_selector.html('');$town_selector.html('');
                $county_selector.html('<option value="">Select County</option>');
                $town_selector.html('<option value="">Select Town</option>');
                for (var i=0, domiciletotal = domiciledata.length; i < domiciletotal; i++) {
                    $county_selector.append('<option value="' + domiciledata[i].id + '" selected="selected">' + domiciledata[i].text + '</option>');
                }
                for (var i=0, towntotal = towndata.length; i < towntotal; i++) {
                    $town_selector.append('<option value="' + towndata[i].id + '"  selected="selected">' + towndata[i].text + '</option>');
                }
            }
        });
    });
    
   $("#fa_item_report_county_id").change(function(){
        var data = {
            id: $(this).val(),
            locationGroupId: $('#fa_item_report_location_group__location_group_id').val(),
        };
     
        $.ajax({
            type: 'post',
            url: '{{ path("location_town_by_county_ajax_get_node_json") }}',
            data: data,
            success: function(data) {
            	var towndata = data.town;
                var $town_selector = $('#fa_item_report_town_id');
                $town_selector.html('');
                $town_selector.html('<option value="">Select Town</option>');

                for (var i=0, total = towndata.length; i < total; i++) {
                    $town_selector.append('<option value="' + towndata[i].id + '"  selected="selected">' + towndata[i].text + '</option>');
                }
            }
        });
    });
   
   $("#fa_item_report_county_id").prepend('<option value="">{{ 'Select County'|trans }}</option>');
    $("#fa_item_report_town_id").prepend('<option value="">{{ 'Select Town'|trans }}</option>');
    
    $('#ad_report_columns input[type=checkbox]').change(function() {
        enableDisableDisallowedFields()
    });
    function showAdReportCsvList()
    {
        blockPage();
        $.ajax({
            type: "GET",
            url : '{{ path('ajax_fa_report_ad_csv_list') }}',
        })
        .always(function(response) {
            unblockPage();
        })
        .done(function(response) {
            if (response.htmlContent.length) {
                $('#adReportCsvListModal').html(response.htmlContent);
                $('#adReportCsvListModal').foundation('reveal', 'open');
            }
        });
    }
    
    function deleteCsvFile(fileName)
    {
        blockElement('#adReportCsvListModal');
        $.ajax({
            type: "GET",
            url : '{{ path('ajax_fa_report_ad_csv_delete') }}',
            data: {'fileName': fileName}
        })
        .always(function(response) {
            unblockElement('#adReportCsvListModal');
        })
        .done(function(response) {
            if (response.htmlContent.length) {
                $('#adReportCsvListModal').html(response.htmlContent);
            }
            if (response.error.length) {
                $(decorateMessage(response.error, 'alert')).insertBefore('#cvs_list_ul');
            }
        });
    }
    
    function enableDisableDisallowedFields()
    {
        {% set reportFieldsArray = staticCall('Fa\\Bundle\\ReportBundle\\Repository\\AdReportDailyRepository', 'getAdReportFields')|keys %}
        {% set reportFieldsArray = unset_value_from_array(reportFieldsArray, 'total_ads') %}
        var disallowedFieldsString = '{{reportFieldsArray|join(',')}}';
        var disallowedFieldsArray  = disallowedFieldsString.split(',');
        var flag = $('#fa_item_report_report_columns_total_ads').is(':checked');
        for(i = 0; i < disallowedFieldsArray.length; i++) {
            var fieldValue = disallowedFieldsArray[i];
            var inputId = 'fa_item_report_report_columns_'+fieldValue;

            if (flag == 0) {
                  $('#'+inputId).attr("disabled", false);
                  $('label[for="'+inputId+'"]').removeClass('disable-text');
                  
                  if ($('#ad_report_columns input:checked').length) {
                      $('#fa_item_report_report_columns_total_ads').attr("checked", false);
                      $('#fa_item_report_report_columns_total_ads').attr("disabled", true);
                      $('label[for="fa_item_report_report_columns_total_ads"]').addClass('disable-text');
                  } else {
                      $('#fa_item_report_report_columns_total_ads').attr("disabled", false);
                      $('label[for="fa_item_report_report_columns_total_ads"]').removeClass('disable-text');
                  }
            } else if (flag == 1) {
                  $('#'+inputId).attr("checked", false);
                  $('#'+inputId).attr("disabled", true);
                  $('label[for="'+inputId+'"]').addClass('disable-text');
            }
        }
    }
//]]>
</script>
{% endblock %}