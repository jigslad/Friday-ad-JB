{% extends 'FaFrontendBundle::layout.html.twig' %}
{% set container = fetch_container_instance() %}
{% set seoManager = container.get('fa.seo.manager') %}
{% set seoToolRepository = fetch_repository('FaContentBundle:SeoTool') %}
{% set categoryRepository = fetch_repository('FaEntityBundle:Category') %}

{% set seoPageRule = {} %}
{% set seoFields = {} %}
{% set customized_url = app.request.get('customized_page')  %}
{% set catSrchString = null %}
{% set recommendedSlotsCount = recommendedSlotResult|length %}
{% set recommendedSlotsLimit = fetch_repository('FaCoreBundle:Config').getSponsoredLimit() %}

{% if (recommendedSlotsCount > 0) and (resultCount > recommendedSlotsLimit|number_format) %}
    {% set displayRecommendedSlot = 1 %}
{% else %}
    {% set displayRecommendedSlot = 0 %}
{% endif %}

{% set totalAdCount = (pagination.getNbResults())?(pagination.getNbResults()|length):0 %}

{% set businessExposureUsersCount = (businessExposureUsersDetails is defined )?(businessExposureUsersDetails|length) :0%}
{% set topAdCount = (topAdResult is defined)?topAdResult|length:0 %}

{% set selCatName = '' %}
{% set selCatSlug = '' %}
{% set selCatNoIndex = '' %}
{% set selCatNoFollow = '' %}
{% set selNoIndex = '' %}
{% set selNoFollow = '' %}

{% if searchParams is defined and searchParams.item__category_id is defined and searchParams.item__category_id is not null %}    
    {% set selCatDet = categoryRepository.getCategoryArrayById(searchParams.item__category_id) %}
    {% if selCatDet is defined %}
        {% set selCatName = selCatDet['name'] %}
        {% set selCatSlug = selCatDet['slug'] %}
        {% set selCatNoIndex = selCatDet['no_index'] %}
        {% set selCatNoFollow = selCatDet['no_follow'] %}
        {% set selNoIndex = (selCatNoIndex==1)?'noindex':'index' %}
        {% set selNoFollow = (selCatNoFollow==1)?'nofollow':'follow' %}
    {% endif %}
    {% if customized_url|length %}
        {% set seoPageRule = seoToolRepository.getSeoPageRuleDetailForListResult(constant('Fa\\Bundle\\ContentBundle\\Repository\\SeoToolRepository::ADVERT_LIST_PAGE'), customized_url['target_url'], container) %}
    {% else %}
        {% set seoPageRule = seoToolRepository.getSeoPageRuleDetailForListResult(constant('Fa\\Bundle\\ContentBundle\\Repository\\SeoToolRepository::ADVERT_LIST_PAGE'), searchParams.item__category_id, container) %}
    {% endif %}
{% endif %}

{% if not seoPageRule|length %}
    {% set seoPageRule = seoToolRepository.getSeoPageRuleDetailForListResult(constant('Fa\\Bundle\\ContentBundle\\Repository\\SeoToolRepository::ADVERT_LIST_PAGE'), null, container) %}
{% endif %}

{% if (objSeoToolOverride|length) %}
    {% if isClassicCarPage is defined and isClassicCarPage==1 %}
         {% set seoPageRule = seoPageRule|merge({'h1_tag': objSeoToolOverride.getH1Tag()|replace({'{Manufacturer}': ((selCatName!='Cars')?selCatName:'')}), 'page_title': (objSeoToolOverride.getPageTitle()~' - '~resultCount) |replace({'{Manufacturer}':((selCatName!='Cars')?selCatName:'')}), 'meta_description': objSeoToolOverride.getMetaDescription()|replace({'{Manufacturer}': ((selCatName!='Cars')?selCatName:'')}), 'meta_keywords':  ((selCatName!='Cars')?selCatName:'')~' Classic cars for sale - '~resultCount~' results', 'no_index': 0, 'no_follow': 0, 'canonical_url': app.request.uri}) %} 
    {% else %}
    {% set seoPageRule = seoPageRule|merge({'h1_tag': objSeoToolOverride.getH1Tag(), 'page_title': objSeoToolOverride.getPageTitle(), 'meta_description': objSeoToolOverride.getMetaDescription(), 'no_index': objSeoToolOverride.getNoIndex(), 'no_follow': objSeoToolOverride.getNoFollow(), 'canonical_url': objSeoToolOverride.getCanonicalUrl()}) %}
{% endif %}
{% endif %}

{% if seoPageRule|length %}
    {% set seoFields = staticCall('Fa\\Bundle\\CoreBundle\\Manager\\CommonManager', 'getSeoFields', [seoPageRule]) %}
{% endif %}
{% if app.request.queryString or '/search' in app.request.uri %}
    {% set isUrlIndexable = false %}
{% else %}
    {% set isUrlIndexable = fetch_repository('FaEntityBundle:CategoryDimension').isUrlIndexableBySearchParams(searchParams, container) %}
{% endif %}

{% block meta_robots %}
    {% set metaRobotsArray = {} %}
    {% if not pagination.getNbResults() %}
        noindex, follow
        {% set metaRobotsArray = {0: 'noindex', 1: 'follow'} %}
    {% elseif extendedResultCount>0 and app.request.get('page') > defaultPages %}
        noindex, follow
        {% set metaRobotsArray = {0: 'noindex', 1: 'follow'} %}
    {% elseif 'motors/cars-under-1000' in app.request.uri or 'motors/cars-under-500' in app.request.uri  or 'motors/left-hand-drive-cars/' in app.request.uri %}
    	index, follow
        {% set metaRobotsArray = {0: 'index', 1: 'follow'} %}
    {% elseif isClassicCarPage is defined and isClassicCarPage==1 %}
        index, follow
        {% set metaRobotsArray = {0: 'index', 1: 'follow'} %}
    {% elseif 'item__distance=0' in app.request.queryString %}
        noindex, follow
        {% set metaRobotsArray = {0: 'noindex', 1: 'follow'} %}
    {% elseif selCatNoIndex==1 or selCatNoFollow==1 %}
    	{{selNoIndex}}, {{ selNoFollow }} 
    	{% set metaRobotsArray = {0: selNoIndex, 1: selNoFollow} %}
    {% elseif 'item__distance=0' not in app.request.queryString %}
        {% if customized_url|length %}
            {% if seoFields.meta_robots is defined %}
                {{seoFields.meta_robots}}
                {% set metaRobotsArray = seoFields.meta_robots|split(', ') %}
             {% else %}
                index, follow
                {% set metaRobotsArray = {0: 'index', 1: 'follow'} %}
            {% endif %}
        {% else %}
            {% if isUrlIndexable == false %}
                noindex, follow
                {% set metaRobotsArray = {0: 'noindex', 1: 'follow'} %}
            {% else %}
                {% if seoFields.meta_robots is defined %}
                    {{seoFields.meta_robots}}
                    {% set metaRobotsArray = seoFields.meta_robots|split(', ') %}
                {% endif %}
            {% endif %}
        {% endif %}
    {% endif %}
    {{ set_variables('metaRobots', {'metaRobotsArray': metaRobotsArray}) }}
{% endblock %}

{% block page_title %}
    {% if seoFields.page_title is defined %}
        {{ seoManager.parseSeoStringForAdList(seoFields.page_title, searchParams, cookieLocationDetails) }}
    {% elseif app.request.queryString %}
        {% if searchParams is defined and searchParams.item__category_id is defined and searchParams.item__category_id is not null %}
            {{ fa_entity_cache_manager.getEntityNameById('FaEntityBundle:Category', searchParams.item__category_id)}} | Friday-Ad
        {% else %}
            Friday-Ad
        {% endif %}    
    {% endif %}
{% endblock %}

{% block meta_description %}
    {% if seoFields.meta_description is defined %}
            {{ seoManager.parseSeoStringForAdList(seoFields.meta_description, searchParams, cookieLocationDetails) }}
    {% elseif app.request.queryString %}
        {% if searchParams is defined and searchParams.item__category_id is defined and searchParams.item__category_id is not null %}
            {{'%resultCount% results in %category%'|trans({'%resultCount%': resultCount, '%category%': fa_entity_cache_manager.getEntityNameById('FaEntityBundle:Category', searchParams.item__category_id)}, 'frontend-search-result')}}
        {% else %}
            {{'%resultCount% results'|trans({'%resultCount%': resultCount}, 'frontend-search-result')}}
        {% endif %}
    {% endif %}
{% endblock %}

{% block meta_keywords %}
    {% if seoFields.meta_keywords is defined %}
        {{ seoManager.parseSeoStringForAdList(seoFields.meta_keywords, searchParams, cookieLocationDetails) }}
    {% elseif app.request.queryString %}
        no-keywords
    {% endif %}
{% endblock %}

{% block canonical_url %}
    {% set metaRobotsArray = get_variables('metaRobots').metaRobotsArray %}
    {% if not metaRobotsArray|length or (metaRobotsArray|length and metaRobotsArray[0] is defined and metaRobotsArray[0] != 'noindex') or (metaRobotsArray|length and metaRobotsArray[0] is defined and metaRobotsArray[0] == 'index' and metaRobotsArray[1] is defined and metaRobotsArray[1] != 'nofollow') %}
        {% if seoFields.canonical_url is defined %}
            {% set seoCanonicalUrl = replace_case_insensitive('{Location}', app.request.get('location'), seoFields.canonical_url) %}
            {{ seoManager.parseSeoStringForAdList(seoCanonicalUrl, searchParams, cookieLocationDetails,true) }}
        {% else %}
            {{ app.request.uri|replace({('?'~app.request.queryString) : ''})}}
        {% endif %}
    {% else %}
        {{ app.request.uri|replace({('?'~app.request.queryString) : ''})}}
    {% endif %}
{% endblock %}
    
{% block breadcrumb_script %}
	{% set location_id = null %}
    {% if cookieLocationDetails['location'] is defined %}
        {% set location_id = cookieLocationDetails['location'] %}
    {% endif %}
    {% set locality_id = null %}
    {% if cookieLocationDetails['locality_id'] is defined %}
        {% set locality_id = cookieLocationDetails['locality_id'] %}
    {% endif %}

    {% if location_id and location_id != constant('Fa\\Bundle\\EntityBundle\\Repository\\LocationRepository::COUNTY_ID') %} 
        {% set HomePagePath = container.getParameter('base_url')~path('location_home_page', {'location': app.request.get('location')}) %} 
    {% else %}
        {% set HomePagePath =  container.getParameter('base_url')~path('fa_frontend_homepage') %}  
    {% endif %}

    {% set locationName = '' %}
    {% if location_id == 2 %}
        {% set locationName = 'Homepage' %}
    {% else %}
        {% set locationName = app.request.get('location')|capitalize %}
    {% endif %}

	<script type="application/ld+json">
	{
  		"@context": "https://schema.org",
  		"@type": "BreadcrumbList",
  		"itemListElement": [{
    	"@type": "ListItem",
    	"position": 1,
    	"name": "{{locationName}}",
    	"item": "{{HomePagePath}}"
  	},
    {% set categoryPath = {} %}
    {% if searchParams is defined and searchParams.item__category_id is defined and searchParams.item__category_id is not null %}
        {% set categoryPath = fetch_repository('FaEntityBundle:Category').getCategoryPathArrayById(searchParams.item__category_id, false, fetch_container_instance()) %}
        {% if categoryPath|length > 0 %}  
			{% set breadcrumbCatCnt = 2 %}      	
            {% for categoryId, categoryName in categoryPath %}
                {% set catLinkParam = { 'item__location': location_id, 'item__category_id': categoryId} %}
                {% set catListUrl = container.getParameter('base_url')~container.get('fa_ad.manager.ad_routing').getListingUrl(catLinkParam) %}
{
    	"@type": "ListItem",
    	"position": {{breadcrumbCatCnt}},
    	"name": "{{categoryName}}",
    	"item": "{{catListUrl}}"
  	}{% if breadcrumbCatCnt <= categoryPath|length %},{% endif %}    
				{% set breadcrumbCatCnt = breadcrumbCatCnt + 1 %}
            {% endfor %}
        {% endif %}
    {% endif %}
     ]
	}
</script>
{% endblock %}

{% block scripttop %}
    {% stylesheets filter="uglifycss" output="bundles/css/compiled/srchlist.css"
            "build/css/owl-carousel.css"
            "build/css/featured-ads.css"
            "build/css/sponsored-slots.css"
            "build/css/upgrade-featured.css"
        %}    	        
    {% endstylesheets %}
    <link rel="stylesheet" href="{{ asset('/bundles/css/compiled/srchlist.css') }}"/>
    {% if (profileExposureUserAds is defined and profileUserId is defined and profileUserDetail is defined and profileUserDetail|length) or (businessExposureUsersDetails is defined and businessExposureUsersDetails|length) %}
        {# CSS for owl carousel - taken from Fa/Bundle/AdBundle/Resources/views/AdList/owl-carousel-2-css.html.twig and inline CSS for listing page #}
        {% stylesheets filter='uglifycss' output='bundles/css/compiled/search-result.css'
            'bundles/fafrontend/css/ad-list.css'
        %}
            <link rel="stylesheet" href="{{ static_asset_url(asset_url) }}" />
        {% endstylesheets %}
    {% endif %}
{% endblock %}

{% block body %}
<style>
ul.fourlocationlist { margin: 10px auto 0px auto;text-align:center; }
ul.fourlocationlist li { display:inline; list-style-type: none; }
ul.fourlocationlist li + li:before { content: "|";padding:0 10px; }

.boost-ribbon { display:none; }
.boosted_ad .boost-ribbon { display:block;background:url(/bundles/fafrontend/images/featured-arrow.svg) no-repeat;width:25px;height:25px;position:absolute;right:0px;top:0px;text-indent:100%;overflow:hidden;white-space:nowrap;z-index:1}
.boosted_ad .boost-ribbon span {right: -21px;position: relative;top: 6px;color: #ffffff;}

.businessExposureCarousel { margin:30px 0px 50px; }
#shop-user-item-slider .owl-stage { transform:none !important; }
.bus-shop-user-item-slider { padding:0px 0px; }
.bus-shop-user-item-slider .owl-item .item {width:100%;border:0;}
.bus-shop-user-item-slider .list-img {width:164px;height:123px}
.bus-shop-user-item-slider .list-img img {max-width:164px;max-height:123px}
.bus-shop-user-item-slider .list-price {float:none;text-align:left;margin:10px 0 0 0}
.bus-shop-user-item-slider h3 {float:none;font-size:14px !important;overflow:hidden;height: 45px !important;padding: 0px 10px !important; }

.bus-shop-user-item-slider .owl-prev, .bus-shop-user-item-slider .owl-next {top:40%;position:absolute;width:40px}
.bus-shop-user-item-slider .owl-item .item {margin:auto}
.bus-shop-user-item-slider .owl-item .busad-item { width:164px;float:left;border:1px solid #eee;margin:0px 15px; }
.bus-shop-user-item-slider .owl-item .busad-item:first-child { margin-left:15px; }
.bus-shop-user-item-slider .owl-item .busad-item:last-child { margin-right:1px; }
.businessExposureCarousel .fa-slider .owl-controls .owl-buttons div { background:transparent !important; }
.businessExposureCarousel .fa-slider .owl-controls .owl-buttons div img { top:60% !important }
.bus-det-box h2 { height: 50px;overflow: hidden;line-height: 24px !important;font-size: 16px !important;}
.bus-abt-us-div { height:220px; max-height:230px; overflow:hidden;padding-left:30px;padding-right:30px; }
.bus-shop-user-item-slider item:hover h3.featured-single, .fa-slider .owl-item .item:hover h3.featured-single { color:#313133 !important; }
#busshop-user-single-item-slider .bus-abt-us-div p { margin-bottom:0px;line-height:20px }
.bus-shop-user-item-slider h3.featured-single { font-family:'Bree Serif',serif;height:auto;font-size:18px;font-weight:400 }
.listing .list-img.list-placeholder { border: 1px solid #EAEFF0 !important; background-color:#FFFFFF !important; }

@media only screen and (min-width:960px) and (max-width:1151px) {
	.bus-shop-user-item-slider .busad-item .list-img, .bus-shop-user-item-slider .busad-item .list-img img {width:145px;}
	.bus-shop-user-item-slider .owl-item .busad-item { width:145px; margin:0px 10px; }
	.bus-shop-user-item-slider .owl-item .busad-item:first-child { margin-left:20px; }
	.bus-shop-user-item-slider .owl-item .busad-item:last-child { margin-right:0px; }
}
@media only screen and (min-width:760px) and (max-width:959px) {
	.bus-shop-user-item-slider .owl-item .busad-item { margin:0px 8px; }
	.bus-shop-user-item-slider .owl-item .busad-item:first-child { margin-left:8px; }
	.bus-shop-user-item-slider .owl-item .busad-item:last-child { margin-right:0px; }
}
@media only screen and (min-width:641px) and (max-width:759px) {
	.bus-shop-user-item-slider .busad-item .list-img, .bus-shop-user-item-slider .busad-item .list-img img {width:130px;}
	.bus-shop-user-item-slider .owl-item .busad-item { width:130px; margin:0px 8px; }
	.bus-shop-user-item-slider .owl-item .busad-item:first-child { margin-left:15px; }
	.bus-shop-user-item-slider .owl-item .busad-item:last-child { margin-right:0px; }
	.bus-det-box h2 {  width:100%;text-align:center !important;margin: 0px 0px !important; float: none !important;height: 50px; overflow: auto; text-overflow: initial;white-space:normal; }
}
@media only screen and (min-width:320px) and (max-width:640px) {
	.bus-shop-user-item-slider .busad-item .list-img, .bus-shop-user-item-slider .busad-item .list-img img {width:130px;}
	.bus-shop-user-item-slider .owl-item .busad-item { width:130px; margin:0px 8px; }
	.bus-shop-user-item-slider .owl-item .busad-item:first-child { margin-left:15px; }
	.bus-shop-user-item-slider .owl-item .busad-item:last-child { margin-right:0px; }

   .bus-shop-user-item-slider .bus-det-box { width: 75%;text-align: center;margin: auto !important;float: none !important; }
   .bus-shop-user-item-slider .exposure-logo,
   .bus-shop-user-item-slider .exposure-logo-thumb,
   .bus-shop-user-item-slider .exposure-logo-thumb .profile-placeholder {
 	  width:175px !important;height:120px !important;margin:0 auto !important;float:none !important;
   }
   .bus-det-box h2 {  width: 175px;margin: 10px auto 0px; float: none !important;height: auto; overflow: auto; text-overflow: initial;white-space:normal;}
}

#fa_left_search_item__distance-button { width:100% !important; }
.buildersbay-list-logo { background:url(/bundles/fafrontend/images/Builders-Bay.png) 100% 100% no-repeat;width: 124px;height: 40px; }
.mcn-logo { background:url(/bundles/fafrontend/images/MCN-logo-1.png) 100% 100% no-repeat;width: 124px;height: 58px; }
.studentjob-list-logo { background:url(/bundles/fafrontend/images/studentjob.png) 100% 100% no-repeat;width: 124px;height: 124px; }
</style>
{% if displayRecommendedSlot is defined and displayRecommendedSlot==1 %}
    {# CSS for recommended slots - taken from src/Fa/Bundle/AdBundle/Resources/views/AdList/recommended_slot_css.html.twig #}
    {% stylesheets filter='uglifycss' output='bundles/css/compiled/recommended-slots.css'
        'bundles/fafrontend/css/recommended-slots.css'
    %}
        <link rel="stylesheet" href="{{ static_asset_url(asset_url) }}" />
    {% endstylesheets %}
{% endif %}

 {% set showAdultAlert = 0 %}
 {% set ADULT_CATEGORY_ID = constant('Fa\\Bundle\\EntityBundle\\Repository\\CategoryRepository::ADULT_ID') %}
{% set entityCacheManager = container.get('fa.entity.cache.manager') %}
{{ include('FaAdBundle:AdList:searchResultHeader.html.twig') }}
{% set mobileDetectManager = container.get('fa.mobile.detect.manager') %}
{% if searchParams is defined and searchParams.item__category_id is defined and searchParams.item__category_id is not null %}
    {% set categorySrchPath = categoryRepository.getCategoryPathArrayById(searchParams.item__category_id, false, container) %}
    {% for categoryId,categoryName in categorySrchPath %}
        {% set catSrchString = catSrchString ~ '-' ~ categoryName %}
        {% if (categoryId == ADULT_CATEGORY_ID) %}
            {% set showAdultAlert = 1 %}
        {% endif %}
    {% endfor %}
    {{ set_variables('SrchCatDetails', {'catSrchString':catSrchString}) }}
{% endif %}
<div class="banner-wrapper clearfix">
    <div class="left-banner">
        {% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_MARGIN_LEFT') %}
        {{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId, 'otherParams':{'class':'hide-for-small-only'}}) }}
    </div>
    <div class="row relative results-main banner-mid-column">
        {% set uri = app.request.uri %}
        {% set uriHash = md5(uri) %}
        {% if mobileDetectManager.isMobile() and not mobileDetectManager.isTablet() %}
            {% set leftSideCacheKey = uriHash~'_mobile' %}
        {% else %}
            {% set leftSideCacheKey = uriHash %}
        {% endif %}
        <div class="large-6 columns" id="left_search">
            <div class="search-filters">
                <a href="javascript:void(0);" rel="nofollow" class="search-close" onclick="return showLeftSearch(false);">search-close</a>
                {% if isShopPage is not defined %}
                    {{ include('FaAdBundle:AdList:saveSearch.html.twig') }}
                {% endif %}
                    {{ render(controller('FaAdBundle:AdList:leftSearch', { 'searchParams': searchParams is defined ? searchParams : {} , 'locationFacets': locationFacets, 'facetResult': facetResult, 'searchQueryString': app.request.queryString, 'customized_url': customized_url, 'cookieLocationDetails': cookieLocationDetails is defined ? cookieLocationDetails : {}} )) }}
            </div>
            <div class="reset-search clearfix">
                {% if isShopPage is defined and isShopPage %}
                    {% set profileAdsUrl = container.get('fa_ad.manager.ad_routing').getProfilePageAdsUrl(searchParams['item__user_id']) %}
                    <a href="{{ profileAdsUrl }}" title="{{ 'Reset search'|trans({}, 'frontend-left-search') }}">{{ 'Reset search'|trans({}, 'frontend-left-search') }}</a>
                {% else %}
                    <a href="javascript:void(0)" rel="nofollow" id="reset_search" title="{{ 'Reset search'|trans({}, 'frontend-left-search') }}">{{ 'Reset search'|trans({}, 'frontend-left-search') }}</a>
                {% endif %}
            </div>

            {% if seoFields|length and seoFields['popular_search'] is defined and seoFields['popular_search'] and seoFields['seo_tool_id'] is defined and seoFields['seo_tool_id'] %}
                {{ include('FaAdBundle:AdList:leftPopularSearchLinks.html.twig', {'mapFlag': 0}) }}
                <br>
            {% endif %}

            {% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_SR_BELOW_FILTERBOX') %}
            {{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId}) }}
            <div id='dsk-box-ad-b'></div>
        </div>

        <div id="listingDiv" class="large-18 columns">
            {#{% if not mobileDetectManager.isMobile() or not mobileDetectManager.isTablet() %}
                {% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_SR_ABOVE_RESULTS') %}
                {{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId}) }}
            {% endif %}#}
            {% if pagination.getNbResults() %}
                {% if isShopPage is not defined %}
                    {{ include('FaAdBundle:AdList:saveSearch.html.twig') }}
                {% endif %}
            {% endif %}
            
            {% set slotallocated = [] %}
            {% if displayRecommendedSlot==1 and recommendedSlotsCount > 0 and totalAdCount > 0 and (recommendedSlotResult[1] is defined and recommendedSlotResult[1]|length >0) %}
                {{ include('FaAdBundle:AdList:showRecommendedSlots.html.twig', {'slotIndex': 1 }) }}
                {% set slotallocated = slotallocated|merge([1]) %}
            {% endif %}

            {% if businessTopExposureUsersDetailsWithoutAd is defined  %}
                {#{ include('FaAdBundle:AdList:businessTopExposureSingleBlock.html.twig', {}) }#}
            {% endif %}
            
            {% set adCounter = 0 %}
            {% set adCount = 0 %}
            {% set bannerStatus = true %}
            {% set busUserIndex = 0 %}
            
             
            {% if pagination.getNbResults() %}
                {% set adFavoriteRepository   = fetch_repository('FaAdBundle:AdFavorite') %}
                {% set adRepository   = fetch_repository('FaAdBundle:Ad') %}
                {% if app.user %}
                    {% set userId = app.user.getId() %}
                {% else %}
                    {% set userId = app.session.getId() %}
                {% endif %}
                
                {% if userLiveBasicAd is defined and userLiveBasicAd and userLiveBasicAd|length %}
                    {% for ad in userLiveBasicAd %}
                        {{ include('FaAdBundle:AdList:listDetail.html.twig', {'isLiveBasicAd': 1, 'isTopAd': 1}) }}
                    {% endfor %}
                    <div id="upgradeBasicAdToFeaturedModal" class="reveal-modal tiny remove-item-modal upgrade-modal" data-reveal></div>
                {% endif %}
                
                {% set adFavoriteAdIds = adFavoriteRepository.getFavoriteAdByUserId(userId, container) %}

                {% if topAdResult is defined and topAdResult|length %}
                    {% for ad in topAdResult %}
                        {% set adCount = adCount + 1 %}
                        {{ include('FaAdBundle:AdList:listDetail.html.twig', {'isTopAd': 1}) }}
                    {% endfor %}
                {% endif %}
                
                {% if mobileDetectManager.isMobile() and not mobileDetectManager.isTablet() %}
                	 {% if (adCount >= 2) %}
                	 	{% set bannerStatus = false %}	
	                	{% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_SR_MOBILE_ABOVE_RESULTS') %}
	                	{{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId}) }}
                         <div id='mob-box-ad-a' class="p-b-20"></div>
	                  {% endif %}
	             {% endif %} 
                {% set slotAdCount = 0 %}{% set setExtendedHeading = 0 %}
                {% set FeaturedAdCount = 0 %}
                {% set getPagNum = (app.request.get('page'))?(app.request.get('page')):1 %}
                {% set realAdCnt = (getPagNum-1)*20 %}
                {% for ad in pagination.getCurrentPageResults() %}
                    {% set adCount = adCount + 1 %}
                    {% set realAdCnt = realAdCnt + 1 %}
                    {% set slotAdCount = slotAdCount + 1 %}
					{% set displayBusinessExposureBlock = 0 %}
					{% set displayBusinessExposureSingleBlock = 0 %}
					{% set FeaturedAdCount = FeaturedAdCount + 1 %}
					
                    {% if ((realAdCnt > resultCount) and (setExtendedHeading==0)) %}
                        <div data-alert="" class="alert-box info radius">
                           <span class="alert-icon">&nbsp;</span>
                           We found  {{extendedResultCount}} {{ fa_entity_cache_manager.getEntityNameById('FaEntityBundle:Category', searchParams.item__category_id) }} ads within  {{extendedRadius}} miles of {{ app.request.get('location') | replace({'-':' '}) | title }}
                        </div>
                        {% set setExtendedHeading = 1 %}
                    {% endif %}

                    {% if displayRecommendedSlot==1 and recommendedSlotsCount > 0 %}
                        {% if slotAdCount== 4  and (recommendedSlotResult[2] is defined and recommendedSlotResult[2]|length >0) %}
                            {{ include('FaAdBundle:AdList:showRecommendedSlots.html.twig', {'slotIndex': 2 }) }}
                            {% set slotallocated = slotallocated|merge([2]) %}
                        {% elseif slotAdCount== 7  and (recommendedSlotResult[3] is defined and recommendedSlotResult[3]|length >0) %}
                            {{ include('FaAdBundle:AdList:showRecommendedSlots.html.twig', {'slotIndex': 3 }) }}
                            {% set slotallocated = slotallocated|merge([3]) %}
                        {% elseif slotAdCount== 10  and (recommendedSlotResult[4] is defined and recommendedSlotResult[4]|length >0) %}
                            {{ include('FaAdBundle:AdList:showRecommendedSlots.html.twig', {'slotIndex': 4 }) }}
                            {% set slotallocated = slotallocated|merge([4]) %}
                        {% elseif slotAdCount== 13  and (recommendedSlotResult[5] is defined and recommendedSlotResult[5]|length >0) %}
                            {{ include('FaAdBundle:AdList:showRecommendedSlots.html.twig', {'slotIndex': 5 }) }}
                            {% set slotallocated = slotallocated|merge([5]) %}
                        {% elseif slotAdCount== 16  and (recommendedSlotResult[6] is defined and recommendedSlotResult[6]|length >0) %}
                            {{ include('FaAdBundle:AdList:showRecommendedSlots.html.twig', {'slotIndex': 6 }) }}
                            {% set slotallocated = slotallocated|merge([6]) %}
                        {% elseif slotAdCount== 18  and (recommendedSlotResult[7] is defined and recommendedSlotResult[7]|length >0) %}
                            {{ include('FaAdBundle:AdList:showRecommendedSlots.html.twig', {'slotIndex': 7 }) }}
                            {% set slotallocated = slotallocated|merge([7]) %}
                        {% elseif slotAdCount== 20  and (recommendedSlotResult[8] is defined and recommendedSlotResult[8]|length >0) %}
                            {{ include('FaAdBundle:AdList:showRecommendedSlots.html.twig', {'slotIndex': 8 }) }}
                            {% set slotallocated = slotallocated|merge([8]) %}
                        {% endif %}
                    {% endif %} 
                    
                {% if businessExposureUsersDetails is defined and businessExposureUsersDetails|length > 0 and totalAdCount > 0  %}                       
                
                {% if FeaturedAdCount==5 or FeaturedAdCount==15 %} 
                        {% set displayBusinessExposureBlock = 1 %}
                    {% elseif FeaturedAdCount==10 %} 
                    	{% set displayBusinessExposureSingleBlock = 1 %}
                    {% endif %}
                    {% if displayBusinessExposureBlock ==1 and businessExposureUsersDetails is defined and  businessExposureUsersDetails|length > 0 %} 
                        {{ include('FaAdBundle:AdList:businessExposureSliderBlock.html.twig', {'blockposition': FeaturedAdCount }) }}
                	{% endif %}
                	{% if displayBusinessExposureSingleBlock ==1 and businessExposureUsersDetails is defined and  businessExposureUsersDetails|length > 0 %} 
                        {{ include('FaAdBundle:AdList:businessExposureSingleBlock.html.twig') }}
                	{% endif %}
                {% endif %}
                    

                    {{ include('FaAdBundle:AdList:listDetail.html.twig') }}
                    {% set adCounter = adCounter + 1 %}

                    {% if pagination.getNbPages() == pagination.getCurrentPage() %}
                        {% set toPage = pagination.getNbResults() %}
                    {% else %}
                        {% set toPage = pagination.getCurrentPage() * pagination.getMaxPerPage() %}
                    {% endif %}
                    {% set fromPage = 0 %}
                    {% if pagination.getNbResults() %}
                       {% set fromPage = ((pagination.getCurrentPage() - 1) * pagination.getMaxPerPage()) %}
                    {% endif %}
                    {% set totalAdsOnPage = (toPage - fromPage) %}

                    {% if mobileDetectManager.isMobile() and not mobileDetectManager.isTablet() %}
                    	 {% if (adCounter == 2 	and totalAdsOnPage > 2 and bannerStatus) %}
		                	{% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_SR_MOBILE_ABOVE_RESULTS') %}
		                	{{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId}) }}
                             <div id='mob-box-ad-b' class="p-b-20"></div>
		                  {% endif %}
		             {% endif %}                    

                    {% if not mobileDetectManager.isMobile() or mobileDetectManager.isTablet() %}
                        {% if (adCounter == 5 and totalAdsOnPage > 5) or (totalAdsOnPage <= 5 and totalAdsOnPage == adCounter) %}
                            <div class="mb20">
                                {{ include('FaAdBundle:AdList:profileExposureBlock.html.twig', {}) }}
                            </div>
                        {% endif %}
                    {% endif %}

                    {% if adCounter == 5 and pagination.getNbResults() > 5 %}
                        {% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_SR_IN_RESULTS_TOP') %}
                        {{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId}) }}
                        <div id='dsk-box-ad-c'></div>
                    {% endif %}

                    {% if mobileDetectManager.isMobile() and not mobileDetectManager.isTablet() %}
                        {% if (adCounter == 10 and totalAdsOnPage > 10) or (totalAdsOnPage <= 10 and totalAdsOnPage == adCounter) %}
                            <div class="mb20">
                                {{ include('FaAdBundle:AdList:profileExposureBlock.html.twig', {}) }}
                            </div>
                        {% endif %}
                    {% endif %}

                    {% if adCounter == 10 and pagination.getNbResults() > 10 %}
                        {% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_SR_IN_RESULTS_BOTTOM') %}
                        {{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId}) }}

                        {% if mobileDetectManager.isMobile() and not mobileDetectManager.isTablet() %}
                            {% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_SR_MOBILE_IN_RESULTS') %}
                            {{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId}) }}
                        {% endif %}
                        <div id='dsk-box-ad-d'></div>
                        <div id='mob-box-ad-c' class="p-b-20"></div>
                    {% endif %}
                {% endfor %}

                {% if displayRecommendedSlot==1 and recommendedSlotsCount > 0 %}
                    {% for recommendedSlotSingle in recommendedSlotResult %}
                      {% if recommendedSlotSingle['creative_group'] not in slotallocated %}
                        {{ include('FaAdBundle:AdList:showRecommendedSlots.html.twig', {'slotIndex': recommendedSlotSingle['creative_group'] }) }}
                        {% set slotallocated = slotallocated|merge([recommendedSlotSingle['creative_group']]) %}
                      {% endif %}
                    {% endfor %}
                {% endif %}

            
            {% else %}
                <div data-alert class="alert-box info radius mt10">
                    <span class="alert-icon">&nbsp;</span>
                    Sorry, we haven't found adverts matching your criteria in {{ app.request.get('location')| replace({'-':' '}) | title }}: <span style="font-weight:normal">Try modifying your keyword or filters selected.</span>
                </div>
            {% endif %}

            


            <span id="createAlertBlockSpan">
                {{ render(controller('FaAdBundle:AdList:createAlertBlock')) }}
            </span>

            <div class="pagination-centered">
                {{ include('FaFrontendBundle:Default:googlePager.html.twig', {'pagination': pagination, 'addToEndPage': 1, 'seoPager': true}) }}
            </div>
            
            {% if totalAdCount==0 %}
                {% if fourLocationsDetails|length > 0 %}
                    <div class="listing">
                    We did mange to find adverts in these other location across the UK
                    <ul class="fourlocationlist">
                    {% for fourLocationsDetail in fourLocationsDetails %}
                        <li><a href="{{fourLocationsDetail['locationUrl']}}">{{fourLocationsDetail['name']}} ({{fourLocationsDetail['cnt']}})</a></li>
                    {% endfor %}
                    </ul>
                    </div>
                {% endif %}

                {% if getXMiles > 0 %}
                <div class="listing">
                    Or you can view matching adverts within {{getXMiles}} miles of {{ app.request.get('location') | replace({'-':' '}) | title }}
                    <div class="text-center mt20"><a href="{{ container.get('fa_ad.manager.ad_routing').getListingUrl(searchParams|merge({'item__distance': getXMiles })) }}" class="secondary-btn-1 button mb0"  style="color:#fff">View matching adverts</a></div>
                </div>
                {% endif %}
            {% endif %}

            {% if (adCounter > 3) %}
                {% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_SR_BELOW_RESULTS') %}
                {{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId}) }}

                {% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_SR_MOBILE_BELOW_RESULTS') %}
                {{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId}) }}
                <div id='dsk-box-ad-e'></div>
                <div id='mob-box-ad-d'></div>
            {% endif %}

            {% set locationUK = constant('Fa\\Bundle\\EntityBundle\\Repository\\LocationRepository::COUNTY_ID') %}

            {#<div class="pagination-centered">
                {{ include('FaFrontendBundle:Default:googlePager.html.twig', {'pagination': pagination, 'addToEndPage': 1, 'seoPager': true}) }}
            </div>#}

            {% if (pagination.haveToPaginate()) %}
                {% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_SR_BELOW_PAGINATION_DESKTOP') %}
                {{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId}) }}
                
                {% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_SR_BELOW_PAGINATION_TABLET') %}
                {{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId}) }}
                
                {% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_SR_BELOW_PAGINATION_MOBILE') %}
                {{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId}) }}
                <div id='dsk-box-ad-f' class="clearfix"></div>
            {% endif %}

            {% if searchParams is defined and (searchParams.expired_ads is not defined or (searchParams.expired_ads is defined and searchParams.expired_ads is null)) %}
                
                    {{ render(controller('FaAdBundle:AdList:showListingSeoBlocks', {'searchParams': searchAgentData, 'customized_url': customized_url, 'location': app.request.get('location'), 'seoPageRule': seoPageRule, 'orgRequest': app.request})) }}
               
            {% endif %}
        </div>
    	{% if successPaymentModalbox is defined and successPaymentModalbox %}
            {#  Upgrade Success Modal Box   #}
             {{ include('FaAdBundle:Ad:upgradeSuccessModalBox.html.twig') }}
    	{% endif %}
    <div class="right-banner">
        {% set zoneId = constant('Fa\\Bundle\\ContentBundle\\Repository\\BannerZoneRepository::ZONE_MARGIN_RIGHT') %}
        {{ include('FaContentBundle:Banner:show.html.twig', {'zone_id': zoneId, 'otherParams':{'class':'hide-for-small-only'}}) }}
    </div>
</div>

{% endblock %}

{% set dimension4 = '' %}
{% if searchParams is defined and searchParams.item__category_id is defined and searchParams.item__category_id is not null %}
{% set categoryPath = fetch_repository('FaEntityBundle:Category').getCategoryPathArrayById(searchParams.item__category_id, false, fetch_container_instance()) %}
{% if categoryPath|length %}
   {% set dimension4 = categoryPath|join(':') %}
{% endif %}
{% endif %}

{% block dimension2 %}
<script language="javascript" type="text/javascript">
//<![CDATA[
   {% if app.user.getId() is not defined or app.user.getId() is null %}
        ga('set', 'dimension9', 'not logged in');
    {% else %}
        ga('set', 'dimension9', 'logged in');
    {% endif %}
    
    ga('send', 'pageview', {'dimension1': defLocationText, 'dimension2':  'Search_Results', 'dimension4': '{{ dimension4 }}' {% if app.request.get('ti_url') %} ,'dimension8': '{{ app.request.get('ti_url') }}' {% endif %} });
    
//]]>
</script>
{% endblock %}

{% block scriptbottom %}
    {% if (profileExposureUserAds is defined and profileUserId is defined and profileUserDetail is defined and profileUserDetail|length) or (businessExposureUsersDetails is defined and businessExposureUsersDetails|length) %}        
        <script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/owl.carousel.min.js"></script>
    {% endif %}
    {{ include('FaAdBundle:AdList:leftSearchJs.html.twig') }}
    {{ include('FaAdBundle:AdList:listJs.html.twig') }}
    {{ include('FaAdBundle:Ad:upgradeJs.html.twig', {'paymentTransactionJs' : paymentTransactionJs }) }}

    {% set catSrchText = null %}
    {% if get_variables('SrchCatDetails') is not null and get_variables('SrchCatDetails').catSrchString is defined %}
        {% set catSrchText = get_variables('SrchCatDetails').catSrchString %}
    {% endif %}

    {% set dimension6 = '' %}
    {% set catArr =  {} %}
    {% if searchParams is defined and searchParams.item__category_id is defined and searchParams.item__category_id is not null %}
        {% set categoryPath = fetch_repository('FaEntityBundle:Category').getCategoryPathArrayById(searchParams.item__category_id, false, fetch_container_instance()) %}
        {% if categoryPath|length %}
            {% set dimension6 = categoryPath|join(':') %}
            {% set catArr = dimension6|split(':')  %}
        {% endif %}
    {% endif %}

    <script language="javascript" type="text/javascript">
        //<![CDATA[

        $(document).on("click", '.unsaved-item', function(event) {
            ga('send', 'event', 'Top Widget', 'Like');
        });

        $(document).on("click", '.saved-item', function(event) {
            ga('send', 'event', 'Top Widget', 'Unlike');
        });



        {% if userLiveBasicAd is defined and userLiveBasicAd and userLiveBasicAd|length %}
        ga('send', 'event', 'Search Results', 'Upgrade', 'View', { nonInteraction: true });
        {% endif %}

        {% if successPaymentModalbox is defined and successPaymentModalbox %}
        $('#upgradeSuccessPaymentModal').foundation('reveal', 'open');
        {% endif %}

        $(window).scroll(function () {
            if ($("#banner_placeholder_2_4").length) {
                var rightBannerOffset = $(".right-banner").offset().top;
                var rightBannerPos = rightBannerOffset - $(window).scrollTop();

                if (rightBannerPos < 0) {
                    $("#banner_placeholder_2_4").addClass("fixed-banner");
                } else if (rightBannerPos > 0) {
                    $("#banner_placeholder_2_4").removeClass("fixed-banner");
                }

                var footerOffset = $("#footer_tag").offset().top;
                var footerPos = footerOffset - $(window).scrollTop();

                if (parseInt(footerPos) <= 630) {
                    $("#banner_placeholder_2_4").removeClass("fixed-banner");
                }
            }
            if (($('.search-filters').offset().top + $('.search-filters').height() - $(window).scrollTop() < -100) && ($('footer').offset().top - $(window).scrollTop() - $('#dsk-box-ad-b').height() > 0)) {
                $('#dsk-box-ad-b').addClass('fixed-banner');
                $('#dsk-box-ad-b').css('left', $('#listingDiv').offset().left - $('#dsk-box-ad-b').width());
            } else {
                $('#dsk-box-ad-b').removeClass('fixed-banner');
            }
        });

        function visitUserProfileOrAd(eventCategory, eventAction, eventLabel) {
            window.dataLayer = window.dataLayer || []
            dataLayer.push({
                'event' : 'Position',
                'eventCategory':  eventCategory,
                'eventAction': eventAction,
                'eventLabel': eventLabel
            });
          ga('send', 'event', eventCategory, eventAction, eventLabel);
        }

        function gaSendForRecommendedSlotSearch(url, domain, title,slotindex,creativeOrd) {
            ga('send', 'event', 'Search List Page', 'Recommended external ads', 'Slot'+slotindex + "-Creative"+ creativeOrd +"-{{ catSrchText|trim('-') }}-" + domain + "-" + title);
            window.open(url, '_blank');
        }

    <!-- Google TAG Manager Start -->
    {# Location @Jigar Lad #}
    {% if cookieLocationDetails.town_id is defined and cookieLocationDetails.town_id is not null %}
        {# Location and Group @Jigar Lad #}
        {% set locationRepository = fetch_repository('FaEntityBundle:Location') %}
        {% set town = locationRepository.find(cookieLocationDetails.town_id)%}
        {% set county = locationRepository.getCountyByTownId(cookieLocationDetails.town_id)%}
        {% set locationGroupRepository = fetch_repository('FaEntityBundle:LocationGroup') %}
        {% set locationGroup = locationGroupRepository.getLocationGroupByLocation(cookieLocationDetails.town_id)%}
        {% set lvl = cookieLocationDetails.lvl %}
    {% else %}
        {% set town = ''%}
        {% set county = 'UK' %}
        {% set locationGroup = '' %}
        {% set lvl = 1 %}
    {% endif %}


        if (performance.navigation.type == 1) {
            var searchResultMethod = 'Refresh';
        } else {
            {% if (app.request.headers.get('referer') is null) or (app.request.headers.get('referer') == '') %}
                var searchResultMethod = 'Landed';
            {% else %}
                {% set urlEnd = app.request.headers.get('referer')|split('/')|slice(0,-1)|last|split('-') %}
                {% if ('page' not in urlEnd) and (urlEnd|length > 2) %}
                    var searchResultMethod = 'Ad Details';
                {% elseif app.request.get('keywords') is defined and app.request.get('keywords') is not null %}
                    var searchResultMethod = 'Site Search';
                {% elseif app.request.get('cat_full_slug') is defined %}
                    var searchResultMethod = 'Category Click';
                {% else %}
                    var searchResultMethod = 'Other';
                {% endif %}
            {% endif %}
        }

        {% set _logged_in = 'true' %}
        {% if app.user.getId() is not defined or app.user.getId() is null %}
        {% set _logged_in = 'false' %}
        {% endif %}

        {% if searchParams.item__category_id is defined and searchParams.item__category_id is not null %}
            {% set rootCategoryId = categoryRepository.getRootCategoryId(searchParams.item__category_id, container) %}
        {% endif %}

        {% set user_type = 'Others' %}
        {% if searchParams.item__is_trade_ad is defined and searchParams.item__is_trade_ad==1 %}
            {% if rootCategoryId is defined and rootCategoryId in {0: constant('Fa\\Bundle\\EntityBundle\\Repository\\CategoryRepository::FOR_SALE_ID')} %}
                {% set user_type = 'Shop' %}
            {% else %}
                {% set user_type = 'Dealer' %}
            {% endif %}
        {% elseif searchParams.item__is_trade_ad is defined and searchParams.item__is_trade_ad==0 %}
            {% set user_type = 'Private' %}
        {% endif %}

        googletag.cmd.push(function() {
            googletag.pubads().setTargeting('page_type', 'Search Results');
            googletag.pubads().setTargeting('user_type', {{ user_type }});

            {% if catArr is defined %}
            {% if catArr[0] is defined %}
                googletag.pubads().setTargeting('category', '{{ catArr[0] }}');
            {% endif %}
                {% if catArr[1] is defined %}
                googletag.pubads().setTargeting('class', '{{ catArr[1] }}');
                {% endif %}
                {% if catArr[2] is defined %}
                googletag.pubads().setTargeting('sub_class', '{{ catArr[2] }}');
                {% endif %}
                {% if catArr[3] is defined %}
                googletag.pubads().setTargeting('sub_sub_class', '{{ catArr[3] }}');
                {% endif %}
            {% endif %}

            googletag.pubads().setTargeting('town', '{{ town }}');
            {% if lvl==4 and town is defined %}
            googletag.pubads().setTargeting('london_areas', '{{ town }}');
            {% endif %}
            googletag.pubads().setTargeting('county', '{{ county }}');

            googletag.pubads().setTargeting('country', 'UK');
            googletag.pubads().setTargeting('edition_area', "{{ (locationGroup is defined and locationGroup.name is defined)?'Print - '~locationGroup.name:'Non Print' }}");

            {% if searchParams.keywords is defined %}
                googletag.pubads().setTargeting('search_keyword', '{{ searchParams.keywords }}');
            {% endif %}
            googletag.pubads().setTargeting('adBlocker', false);
            googletag.pubads().setTargeting('user_logged', {{ _logged_in }});

        });

        window.dataLayer = window.dataLayer || [];
        dataLayer.push({
            "searchResults":{
                "county": '{{ county }}',
                "town": "{{ (cookieLocationDetails.town  is defined ? cookieLocationDetails.town : '')|raw }}",
                "locationGroup": "{{ (locationGroup.name is defined ? locationGroup.name : locationGroup)|raw }}",
                "searchKeyword": '{{ app.request.get('keywords')|raw }}',
                "searchResultMethod": searchResultMethod, //described below
                "noOfResults": {{resultCount}},
                "radius": '{{ searchParams.item__distance is defined ? searchParams.item__distance : 'default' }}',
                "popularSearch": {{ seoFields.popular_search is defined ? 'true' : 'false' }}
            }
        });
        //]]>
    </script>
    <!-- Google TAG Manager End -->
{% endblock %}

{% block pushNotification %}
{% if paymentTransactionJs['ga_transaction'] is defined and paymentTransactionJs['ga_transaction'].PAYMENT_ID is defined %}
        OneSignal.push(["sendTags", {'PAA_process': 'ad_placed'}]);
    {% endif %}
{% endblock %}
