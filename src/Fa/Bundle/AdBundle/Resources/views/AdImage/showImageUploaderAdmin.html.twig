{% block imageUploadStylesheets %}
    {% set imageUploadStylesheetsVariables = get_variables('imageUploadStylesheets') %}
    {% if imageUploadStylesheetsVariables.loaded is not defined %}
        {{ set_variables('imageUploadStylesheets', {'loaded':'true'}) }}
        <link href="{{ asset_url('facore/css/jquery.guillotine.css') }}" rel="stylesheet">
    {% endif %}
{% endblock %}

{% block imageUploadHtml %}
{{ set_variables('AdImageUpload', {'adId':adId, 'vertical': vertical, 'formName': formName, 'maxValue': maxValue}) }}
<div id="upload_image_div">
    <div>
        <div id="filelist"></div>
        <input type="hidden" name="maxfileremain" id="maxfileremain" value="{{imageLimitRemaining}}" />
    </div>
    <div id="uploaded_images_div">
        {{ include('FaAdBundle:AdImage:renderUploadedImageAdmin.html.twig', {'adId': adId, 'vertical': vertical }) }}
    </div>
</div>
<div id="crop_big_image_div"></div>
{% endblock %}

{% block imageUploadJavascriptBottom %}
    {% set container = fetch_container_instance() %}
    {% set isAdminLoggedIn = staticCall('Fa\\Bundle\\CoreBundle\\Manager\\CommonManager', 'isAdminLoggedIn', [fetch_container_instance()]) %}
    {% set imageUploadJavascriptBottomVariables = get_variables('imageUploadJavascriptBottom') %}
    {% set mobileDetectManager = container.get('fa.mobile.detect.manager') %}
    {% if imageUploadJavascriptBottomVariables.loaded is defined and imageUploadJavascriptBottomVariables.loaded == 'true' %}
        {% set variables = get_variables('AdImageUpload') %}
        {% set adId = variables.adId %}
        {% set vertical = variables.vertical %}
        {% set formName = (variables.formName is defined ? variables.formName : null) %}
        {% set maxValue = (variables.maxValue is defined ? variables.maxValue : null) %}
        {% javascripts filter='uglifyjs2' output='bundles/js/compiled/showImageUploaderAdmin.js'
            'bundles/facore/js/jquery.guillotine.min.js'
            'bundles/facore/js/plupload.full.min.js'
            'bundles/faadmin/js/vendor/jquery-ui.min.js'
            'bundles/facore/js/jquery.ui.touch-punch.min.js'
        %}
        <script src="{{ static_asset_url(asset_url) }}"></script>
        {% endjavascripts %}
        <script language="javascript" type="text/javascript">
        //<![CDATA[
        $(document).ready(function(){
            initImageUpload(true);
            plupload.addI18n({
                'File size error.' : "{{'The size of image should not be greater than %max_file_size%.'|trans({'%max_file_size%' : (container.getParameter("fa.image.allow_size_in_mb"))~' mb'})}}",
                'File extension error.' : "{{'Image type must be one of the jpg, jpeg, png, gif.'|trans}}",
                'Init error.' : "{{'Your browser does not have Flash, Silverlight or HTML5 support.'|trans}}"
            });

            makeImagesSortable();
        });

        function initImageUpload(removeFileList)
        {
            if ($('.pickfiles').length > 0) {
                $('.pickfiles').each(function(e) {
                    var mainUploader = setUpUploader($(this).attr('id'), removeFileList);
                    mainUploader.init();
                });
            } else {
                $('#filelist').html('');
            }
        }
        function setUpUploader(id, removeFileList)
        {
            var errorFlag = false;
            var adId = '{{adId}}';
            var vertical='{{vertical}}';
            var maxValue='{{maxValue}}';
            var fa_paa_image =new Array();
            var isMultiSelect = true;
            var isMobile = '{{ mobileDetectManager.isMobile() }}'
            var isTablet = '{{ mobileDetectManager.isTablet() }}'
            if (isMobile || isTablet)
                isMultiSelect = false;
            var uploader = new plupload.Uploader({
                runtimes : 'html5,flash,silverlight,html4',
                unique_names :true,
                multi_selection : isMultiSelect,
                multipart : true,
                browse_button : id, // you can pass in id...
                url : {% if isAdminLoggedIn and isAdminLoggedIn.id %} '{{ path("ajax_ad_image_save_admin") }}' {% else %} '{{ path("ajax_ad_image_save") }}' {% endif %},
                multipart_params : {'fa_paa_image[ad_id]' :adId, 'fa_paa_image[vertical]' : vertical, 'is_admin': 1, 'fa_paa_image[maxValue]' : maxValue},
                file_data_name : 'fa_paa_image[fileData]',
                flash_swf_url : '/facore/js/Moxie.swf',
                silverlight_xap_url : '/facore/js/Moxie.xap',

                filters : {
                    max_file_size : '{{container.getParameter("fa.image.allow_size_in_mb")}}mb',
                    mime_types:
                    [
                        {title : '{{"Image files"|trans}}', extensions : "jpg,jpeg,png,gif,JPG,JPEG,PNG,GIF"},
                    ]
                },

                init: {
                    PostInit: function() {
                        if (removeFileList)
                            $('#filelist').html('');
                    },
                    FilesAdded: function(up, files, response) {
                        errorFlag = false;
                        if(up.files.length > parseInt($("#maxfileremain").val()))
                        {
                            uploader.splice();
                            $('#filelist').html('');
                            $('#filelist').html('<div class="alert-box alert radius" id="notice">{{"The maximum image upload limit remain is "}}'+$("#maxfileremain").val()+'.</div>');
                            return false;
                        }
                        else
                        {
                            uploader.start();
                            $('#filelist').html("<div class='row'><img src=\"{{ asset_url('facore/images/ajax_loader.gif') }}\"> {{'Uploading image please wait...'|trans}}</div>");
                            $('.save_data').attr('disabled', true);
                         }
                    },
                    FileUploaded: function(up, file, response) {
                        var obj = $.parseJSON(response.response);
                        if (obj.error.length) {
                            errorFlag = true;
                            $('#filelist').html('<div class="alert-box alert radius">'+obj.error+'</div>');
                        }
                        $('#maxfileremain').val(obj.imageLimitRemaining);
                        {% if (formName is defined and formName is not null) %} 
                            $('#{{formName}}_photo_error').val(obj.adImgCount);
                        {% endif %}
                    },
                    UploadComplete: function(up, file) {
                        if (!errorFlag) {
                            $('#filelist').html('<div class="alert-box success radius" id="notice">'+up.files.length+' {{"Photo(s) uploaded successfully."|trans}}</div>');
                        }
                        uploader.splice();
                        getImages();
                        $('.save_data').attr('disabled', false);
                    },
                    Error: function(up, err) {
                       msg = err.message;
                       if (msg == 'Init error.') {
                           msg = "{{'Your browser does not have Flash, Silverlight or HTML5 support.'|trans}}";
                       }
                       $('#filelist').html('<div class="alert-box alert radius">'+msg+'</div>');
                    }
                }
            });
            return uploader;
        }

        function getImages(cache)
        {
        	if (typeof cache == 'undefined') {
                cache = false;
            }

            $.ajax({
                type: "POST",
                url : {% if isAdminLoggedIn and isAdminLoggedIn.id %} '{{ path("ajax_get_ad_images_admin") }}' {% else %} '{{ path("ajax_get_ad_images") }}' {% endif %},
                data: { adId: '{{adId}}', vertical: '{{vertical}}', 'is_admin': 1, 'cache': cache}
            })
            .done(function(response) {
                $('#uploaded_images_div').html(response.images);
                makeImagesSortable();
                initImageUpload(false);
                updateImageUploadTips();
            });
        }

        function updateImageUploadTips()
        {
        	{% if vertical == 'jobs' %}
            if ($("#adImageList > li").length > 1)
                $('#paa_image_upload_tips').html('{{"Your profile image will be used as the main photo of your ad. You can edit it or change it and add more images if you want to."|trans({}, "frontend-paa")}}');
            else
                $('#paa_image_upload_tips').html('{{"Upload an image with the logo of your company. This will be used as the main image of your ad. You can add other images if you want to."|trans({}, "frontend-paa") }}');
            {% endif %}
        }

        function deleteImage(url)
        {
            if (confirm('{{"Are you sure you want to delete this image?"}}'))
               {
                $.ajax({
                    type: "POST",
                    url: url,
                    data: { maxValue: '{{maxValue}}'}
                })
                .done(function(response) {
                    if (response.error.length) {
                        $('#filelist').html('<div class="alert-box alert radius">'+response.error+'</div>');
                    }
                    if (response.successMsg.length) {
                        $('#filelist').html('<div class="alert-box success radius">'+response.successMsg+'</div>');
                        $('#uploaded_images_div').html(response.images);
                        $('#maxfileremain').val(response.imageLimitRemaining);
                        {% if (formName is defined and formName is not null) %} 
                            $('#{{formName}}_photo_error').val(response.adImgCount);
                        {% endif %}
                        makeImagesSortable();
                        initImageUpload(false);
                        updateImageUploadTips();
                    }
                });
            }
        }

        function getOriginalImage(url)
        {
            $.ajax({
                type: "POST",
                url: url,
                async: false,
                cache: false,
            })
            .done(function(response) {
                if (response.error.length) {
                    $('#filelist').html('<div class="alert-box alert radius">'+response.error+'</div>');
                }
                if (response.image.length) {
                    $('#crop_big_image_div').html(response.image);
                    $('#upload_image_div').hide();
                    $( "#crop_big_image" ).load(function() {
                        $('#crop_image').show();
                        var picture = $('#crop_big_image');
                        picture.guillotine({
                          width: 800,
                          height: 600,
                          zoomStep: 0.2,
                          onChange: function(data, action){
                            data.scale = parseFloat(data.scale.toFixed(4));
                            for(var k in data) { $('#'+k).val(data[k]); }
                          }
                        });

                        // Initialize plugin (with custom event)
                        picture.guillotine({eventOnChange: 'guillotinechange'});
                        picture.guillotine('fit');

                        // Display inital data
                        var data = picture.guillotine('getData');
                        for(var k in data) { $('#'+k).val(data[k]); }
                        $('#rotate').click(function(){ picture.guillotine('rotateRight'); });
                        $('#fit').click(function(){ picture.guillotine('fit'); });
                        $('#zoom_in').click(function(){ picture.guillotine('zoomIn'); });
                        $('#zoom_out').click(function(){ picture.guillotine('zoomOut'); });
                    });
                    // Bind button actions
                    $('#crop_close').click(function(){
                        $('#crop_big_image_div').html('');
                        $('#upload_image_div').show();
                        getImages(true);
                    });
                    $('#remove_img').click(function(){
                        $('#crop_big_image_div').html('');
                        $('#upload_image_div').show();
                    });
                    $('#make_main_photo').click(function(){
                        $('#crop_big_image_div').html('');
                        $('#upload_image_div').show();
                    });
                }
            });
        }

        function cropImage(url)
        {
            var imgParams = '';
            $('.cropImg').each(function(e){
                imgParams += $(this).attr('name')+ '=' +$(this).val() + '&'
            });
            imgParams = imgParams.slice(0,-1);

            $.ajax({
                type: "POST",
                url: url,
                data: imgParams
            })
            .done(function(response) {
                if (response.error.length) {
                    $('#filelist').html('<div class="alert-box alert radius">'+response.error+'</div>');
                    initImageUpload(false);
                }
                if (response.successMsg.length) {
                    $('#filelist').html('<div class="alert-box success radius">'+response.successMsg+'</div>');
                    $('#crop_big_image_div').html('');
                    $('#upload_image_div').show();
                    getImages();
                }
            });
        }

        function makeImagesSortable()
        {
            $('#adImageList').sortable({
                containment: 'parent',
                items: "li:not(.ui-sortable-disabled)" ,
                tolerance:"pointer"
            });
            $('#adImageList').disableSelection();
            $('#adImageList').on("sortupdate", function(event, ui) {
                var order = {};
                var count = 0;

                $('#adImageList li').each( function(e) {
                    order[$(this).attr('id')] = $(this).index() + 1;
                    count = count + 1;
                });

                if (count > 0) {
                    $.ajax({
                        url : {% if isAdminLoggedIn and isAdminLoggedIn.id %} '{{ path("ajax_change_ad_image_order_admin", {"adId": adId}) }}' {% else %} '{{ path("ajax_change_ad_image_order", {"adId": adId}) }}' {% endif %},
                        type: 'POST',
                        data:  {'orders': JSON.stringify(order)},
                        cache: false,
                        success: function(response) {
                            if (response.error.length) {
                                $('#filelist').html('<div class="alert-box alert radius">'+response.error+'</div>');
                                getImages();
                            }
                            if (response.successMsg.length) {
                                $('#filelist').html('<div class="alert-box success radius">'+response.successMsg+'</div>');
                            }
                        }
                    });
                } else {
                    getImages();
                }
            });
        }

        function makeMainPhoto(imageId, imageOrd)
        {
            if (imageOrd > 1)
            {
                var imageNewOrd = 1;
                $.ajax({
                    url : {% if isAdminLoggedIn and isAdminLoggedIn.id %} '{{ path("ajax_make_main_image_admin", {"adId": adId}) }}' {% else %} '{{ path("ajax_make_main_image", {"adId": adId}) }}' {% endif %},
                    type: 'POST',
                    data:  {'imageId': imageId, 'imageOrd': imageOrd, 'imageNewOrd' : imageNewOrd},
                    cache: false,
                    success: function(response) {
                        if (response.error.length) {
                            $('#filelist').html('<div class="alert-box alert radius">'+response.error+'</div>');
                            getImages();
                        }
                        if (response.successMsg.length) {
                            $('#filelist').html('<div class="alert-box success radius">'+response.successMsg+'</div>');
                            getImages();
                        }
                    }
                });
            }
        }

        function resetImage(url)
        {
            $.ajax({
                type: "POST",
                url: url,
            })
            .done(function(response) {
                if (response.orgImgUrl.length) {
                    getOriginalImage(response.orgImgUrl);
                    $('#reset_image_success_msg').html(decorateMessage('{{'Original image reset successfully.'|trans}}', 'success'));
                }
            });
        }
        //]]>
        </script>
    {% endif %}
{% endblock %}