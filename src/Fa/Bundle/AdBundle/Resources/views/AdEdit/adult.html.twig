{% extends 'FaFrontendBundle::layout.html.twig' %}
{% form_theme form 'FaFrontendBundle:Form:fields.html.twig' %}

{% block title %}
    {{'Edit ad'|trans({}, 'frontend-ad-edit')}}
{% endblock %}

{% set container = fetch_container_instance() %}
{% set categoryId = ad.category.id %}
{% set categoryName = 'Adult' %}
{% set categoryPathArray = fetch_repository('FaEntityBundle:Category').getCategoryPathArrayById(categoryId, false, fetch_container_instance()) %}
{% set categorykeys = categoryPathArray|keys %}

{% use "FaAdBundle:AdImage:showImageUploader.html.twig" %}
{% block stylesheets %}
    {{ parent() }}
    {{ block('imageUploadStylesheets') }}
{% endblock %}

{% block stylesheet %}
    <link rel="stylesheet" href="{{ asset('build/css/dashboard.css') }}"/>
    <link rel="stylesheet" href="{{ asset('build/css/paa.css') }}"/>
{% endblock %}


{% use "FaCoreBundle:GoogleMap:renderLocationUsingCircle.html.twig" %}

{% block body -%}
    <div class="dash-block">
        <div class="posting-bg">
            <div class="container">
                {{ include('FaUserBundle:Default:leftCanvasMenuLink.html.twig') }}
                <div class="row d-board-main">
                    <div class="off-canvas-wrap" data-offcanvas>
                        <div class="inner-wrap">
                            {{ include('FaUserBundle:Default:userLeftMenu.html.twig') }}
                            <div id="db-middle-part" class="col-md-19 d-right-col">
                                <div id="middle-column">
                                    <a href="{{ path('manage_my_ads_active') }}" class="backto-my-items" title="{{ 'Back to Manage my ads'|trans({}, 'frontend-ad-edit') }}">{{ 'Back to Manage my ads'|trans({}, 'frontend-ad-edit') }}</a>
                                    <h1 class="text-center paa-title">{{ 'Edit your ad'|trans({}, 'frontend-ad-edit') }} </h1>
                                    <div class="big-wrapper">
                                        <div class="change-category clearfix">
                                            {#<div class="cat-name-wrap">
                                                <span>{{ 'Category'|trans({}, 'frontend-ad-edit') }}:</span> {{ fetch_repository('FaEntityBundle:Category').getCategoryPathArrayById(categoryId, false, fetch_container_instance())|last('<span class="seperator"></span>')|raw }}
                                            </div>#}
                                            <div class=" left cat-name-wrap media-object" style="display: inline-flex;">
                                                <div class="media-object-section">
                                                    <span class="cat-caption">{{ 'Category'|trans({}, 'frontend-ad-edit') }}:</span>
                                                </div>
                                                <div class="media-object-section">
                                                    {{ fetch_repository('FaEntityBundle:Category').getCategoryPathArrayById(categoryId, false, fetch_container_instance())|last('<span class="seperator"></span>')|raw }}
                                                </div>
                                            </div>
                                        </div>
                                        {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}
                                            {{ form_errors(form) }}
                                            {% set orderedFields = form.paa_ordered_fields.vars.value|split(',') %}
                                            {% if orderedFields|length  > 0 %}
                                                {{ include('FaAdBundle:AdEdit:adultFields.html.twig') }}
                                            {% endif %}
                                            <div class="small-wrapper">
                                                {{ form_widget(form.save, {'attr': {'class':'primary-btn-1 expand mt30'}}) }}
                                            </div>
                                        {{ form_end(form) }}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block scriptbottom %}
{{ include('FaAdBundle:AdEdit:adEditCommonJs.html.twig') }}
<script language="javascript" type="text/javascript">
//<![CDATA[
    $(document).ready(function(){
        updateCharCounter('fa_paa_edit_adult_title');
        updateCharCounter('fa_paa_edit_adult_personalized_title');
        bindElementToggleEvent('fa_paa_edit_adult');
        bindLocationEvents('fa_paa_edit_adult');
        bindCapsuleButtonEvent('fa_paa_edit_adult', 'position_preference_id', 'radio');
        bindCapsuleButtonEvent('fa_paa_edit_adult', 'experience_id', 'radio');
        showPaypalSection(true);
        showRateSection();

        $('#fa_paa_edit_adult_paypal_email, #fa_paa_edit_adult_paypal_first_name, #fa_paa_edit_adult_paypal_last_name').focus(function(e){
            $(this).removeClass('error');
            $("#paypal_text_id").prev('small').remove();
            $('#paypal_email_verify_status').hide();
        });   

        $('#verify_paypal_email_button').on( "click", function() {
            showPaypalSection(true);
        });

        $('#fa_paa_edit_adult_travel_arrangements_id').on( "change", function() {
            showRateSection();           
       	});

        $('.custom-checkbox, .custom-radio ').click(function(e){
     	   $('#'+$(this).attr('id')).trigger('change');
            $(this).nextAll('small.error').first().remove();
            $(this).parent().nextAll('small.error').first().remove();
            $('#'+$(this).attr('id')+'-button').removeClass('error-bdr');
        });

        $('.rates_text_in_call').keyup(function(e){ 
            	var fieldName = $(this).attr('name').split('[');
            	var errorField = fieldName[1].replace(']', '');
        		if($.isNumeric($(this).val()) || $(this).val() == '') {
        			$('#in-calls-subblock .'+errorField).remove();
        		}
        });

        $('.rates_text_out_call').keyup(function(e){  
            	var fieldName = $(this).attr('name').split('[');
           	var errorField = fieldName[1].replace(']', '');
       		if($.isNumeric($(this).val()) || $(this).val() == '') {
       			$('#out-calls-subblock .'+errorField).remove();
       		}
        });

        $("input[name='fa_paa_edit_adult[payment_method_id]']").click(function(e) {
        	var checkSelected = $(this).parents('.active').length;
            $('#payment_method_choice_div .capsule-bg').removeClass('active');
            if(checkSelected == '0') {
                $(this).parent().addClass('active');
                showPaypalSection(false, $(this).val());               
            } else {
         	   $("input[name='fa_paa_edit_adult[payment_method_id]']").attr('checked', false);
         	   $('#paypal_section_id').hide();
                $("#paypal_text_id").prev('small').remove();
                $('#paypal_email_verify_status').hide();
                $('#fa_paa_edit_adult_paypal_email, #fa_paa_edit_adult_paypal_first_name, #fa_paa_edit_adult_paypal_last_name').removeClass('error');
            }
        }); 
    });

    function showRateSection(travelArrangementTxt) {
 	   var travelArrangementTxt = $("#fa_paa_edit_adult_travel_arrangements_id option:selected").text();
 	   var tarvalArrVal = travelArrangementTxt.split(" ");
 		
        if(tarvalArrVal.indexOf('In-call') > -1) { 
 			$("#element_rates_id").show();
 			$("#in-calls-subblock").show();
 			$("#out-calls-subblock").hide();
        } else if((tarvalArrVal.indexOf('Out-call') > -1)) {
     	   $("#element_rates_id").show();
 			$("#in-calls-subblock").hide();
 			$("#out-calls-subblock").show();
        } else if((tarvalArrVal.indexOf('Either') > -1)) {
     	    $("#element_rates_id").show();
 			$("#in-calls-subblock").show();
 			$("#out-calls-subblock").show();
        } else { 
     	    $("#element_rates_id").hide();
    			$("#in-calls-subblock").hide();
    			$("#out-calls-subblock").hide();
        }
 	}

    function showPaypalSection(showMessage, paymentMethodId)
    {
       if (!paymentMethodId) {
           paymentMethodId = $("input[name='fa_paa_edit_adult[payment_method_id]']:checked").val();
       }

       if ($.inArray(paymentMethodId, ['{{constant('Fa\\Bundle\\PaymentBundle\\Repository\\PaymentRepository::PAYMENT_METHOD_PAYPAL_ID')}}', '{{constant('Fa\\Bundle\\PaymentBundle\\Repository\\PaymentRepository::PAYMENT_METHOD_PAYPAL_OR_CASH_ID')}}']) != '-1') {
           blockElement('#adult_paypal_block');
           $.ajax({
               type: "POST",
               url : '{{ path('ajax_get_paypal_commission') }}',
               data: {town_id: $('#fa_paa_edit_adult_location').val(), 'paypal_email': $('#fa_paa_edit_adult_paypal_email').val(), 'paypal_first_name': $('#fa_paa_edit_adult_paypal_first_name').val(), 'paypal_last_name': $('#fa_paa_edit_adult_paypal_last_name').val()},
               cache: false,
           })
           .always(function(response) {
               unblockElement('#adult_paypal_block');
           })
           .done(function(data) {
               $('#paypal_text_id').html('{{'Friday-Ad will take a commission of %paypal_commission% of the final value if the item is sold through Paypal.'|trans({}, 'frontend-ad-edit')}}');
               if (showMessage) {
                   $("#paypal_text_id").prev('small').remove();
               }
               paypalCommission      = data.paypalCommission;
               isPaypalVerifiedEmail = data.isPaypalVerifiedEmail;
               if (paypalCommission > 0) {
                   $('#paypal_text_id').show();
               } else {
                   $('#paypal_text_id').hide();
               }
               if ($("input[name='fa_paa_edit_adult[payment_method_id]']").is(':checked')) {
                   $('#paypal_email_verify_status').removeClass('error-icon success-icon');
                   if ($.inArray(paymentMethodId, ['{{constant('Fa\\Bundle\\PaymentBundle\\Repository\\PaymentRepository::PAYMENT_METHOD_PAYPAL_ID')}}', '{{constant('Fa\\Bundle\\PaymentBundle\\Repository\\PaymentRepository::PAYMENT_METHOD_PAYPAL_OR_CASH_ID')}}']) != '-1') {
                      $('#paypal_section_id').show();
                      $('#paypal_text_id').html($('#paypal_text_id').html().replace('%paypal_commission%', paypalCommission+'%'));
                      
                      if (isPaypalVerifiedEmail) {
                          $('#paypal_email_verify_status').addClass('success-icon');
                          $('#paypal_email_verify_status').show('inline-block');
                          $('#fa_paa_edit_adult_paypal_email, #fa_paa_edit_adult_paypal_first_name, #fa_paa_edit_adult_paypal_last_name').removeClass('error');
                      } else {
                          $('#paypal_email_verify_status').addClass('error-icon');
                          if ($('#fa_paa_edit_adult_paypal_email').is(':visible') && $('#fa_paa_edit_adult_paypal_email').val().length) {
                              if (showMessage) {
                                  $('#fa_paa_edit_adult_paypal_email, #fa_paa_edit_adult_paypal_first_name, #fa_paa_edit_adult_paypal_last_name').addClass('error');
                                  $("<small class='error'>{{'Paypal account is not verified.'|trans({}, 'frontend-ad-edit')}}</small>").insertBefore('#paypal_text_id');
                                  $('#paypal_email_verify_status').show('inline-block');
                              }
                          } else {
                              if (showMessage) {
                                  $('#fa_paa_edit_adult_paypal_email, #fa_paa_edit_adult_paypal_first_name, #fa_paa_edit_adult_paypal_last_name').addClass('error');
                                  $("<small class='error'>{{'Paypal account is not verified.'|trans({}, 'frontend-ad-edit')}}</small>").insertBefore('#paypal_text_id');
                                  $('#paypal_email_verify_status').show('inline-block');
                              }
                          }
                      }
                   } else {
                       $('#paypal_section_id').hide();
                       $("#paypal_text_id").prev('small').remove();
                       $('#paypal_email_verify_status').hide();
                       $('#fa_paa_edit_adult_paypal_email, #fa_paa_edit_adult_paypal_first_name, #fa_paa_edit_adult_paypal_last_name').removeClass('error');
                   }
               } else {
                   $('#paypal_section_id').hide();
               }
           });
       } else {
           $('#paypal_section_id').hide();
           $("#paypal_text_id").prev('small').remove();
           $('#paypal_email_verify_status').hide();
           $('#fa_paa_edit_adult_paypal_email, #fa_paa_edit_adult_paypal_first_name, #fa_paa_edit_adult_paypal_last_name').removeClass('error');
       }
    }
//]]>
</script>
{% if (form.location_autocomplete) is defined %}
    {{ include('FaCoreBundle::jqueryAutoSuggestFieldJs.html.twig', {'field' : '#fa_paa_edit_adult_location', 'placeHolder': ((attribute(form, 'location_autocomplete').vars.attr.placeholder is defined and attribute(form, 'location_autocomplete').vars.attr.placeholder is not null) ? attribute(form, 'location_autocomplete').vars.attr.placeholder : 'Type postal code or town'|trans({}, 'frontend-ad-edit')), 'route' : 'town_ajax_find_town_by_term', 'dropdownCssClass': 'white-choices' }) }}
    {{ include('FaCoreBundle::jqueryAutoSuggestFieldJs.html.twig', {'field' : '#fa_paa_edit_adult_area', 'placeHolder': ((attribute(form, 'area_autocomplete').vars.attr.placeholder is defined and attribute(form, 'area_autocomplete').vars.attr.placeholder is not null) ? attribute(form, 'area_autocomplete').vars.attr.placeholder : 'ex: SE2'|trans), 'route' : 'area_ajax_find_town_by_term', 'dropdownCssClass': 'white-choices', 'townIdForArea': constant('Fa\\Bundle\\EntityBundle\\Repository\\LocationRepository::LONDON_TOWN_ID') }) }}
{% endif %}

{{ include('FaCoreBundle:Default:blockJs.html.twig') }}
{{ include('FaContentBundle:Default:tinyMceJs.html.twig', {'plugins' : 'autoresize', 'autoresizeOptions': 'autoresize_bottom_margin: 0, autoresize_min_height: 100, autoresize_max_height: 500,', 'toolbar1' : 'bold italic underline, bullist numlist', 'toolbar2' : 'false', 'menubar' : 'false', 'statusbar': 'true', 'charCounter' : 'true' }) }}
{{ set_variables('imageUploadJavascriptBottom', {'loaded':'true'}) }}
{{ block('imageUploadJavascriptBottom') }}
{{ block('googlemap_location_js') }}
{% endblock %}