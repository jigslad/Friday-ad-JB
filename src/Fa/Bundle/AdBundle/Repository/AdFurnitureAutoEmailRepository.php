<?php

/**
 * This file is part of the fa bundle.
 *
 * @copyright Copyright (c) 2014, FMG
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Fa\Bundle\AdBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Fa\Bundle\AdBundle\Entity\AdFurnitureAutoEmail;
use Fa\Bundle\UserBundle\Repository\UserRepository;
use Fa\Bundle\CoreBundle\Manager\CommonManager;
use Fa\Bundle\EntityBundle\Repository\CategoryRepository;
use Fa\Bundle\UserBundle\Repository\RoleRepository;
use Fa\Bundle\EntityBundle\Repository\EntityRepository as BaseEntityRepository;
use Fa\Bundle\AdBundle\Solr\AdSolrFieldMapping;
use Fa\Bundle\PaymentBundle\Entity\DeliveryMethodOption;
use Fa\Bundle\PaymentBundle\Repository\DeliveryMethodOptionRepository;
use Fa\Bundle\PromotionBundle\Repository\UpsellRepository;
use Fa\Bundle\AdBundle\Solr\AdForSaleSolrFieldMapping;
use Fa\Bundle\CoreBundle\Manager\SolrSearchManager;
use Fa\Bundle\PaymentBundle\Repository\TransactionDetailRepository;
use Fa\Bundle\EntityBundle\Repository\LocationRepository;
use Fa\Bundle\AdBundle\Entity\Ad;
use Fa\Bundle\UserBundle\Entity\User;
use Fa\Bundle\DotMailerBundle\Repository\DotmailerRepository;
use Fa\Bundle\EntityBundle\Repository\LocalityRepository;
use Entity;
use Fa\Bundle\UserBundle\Repository\UserUpsellRepository;
use Fa\Bundle\PromotionBundle\Repository\PackageRepository;
use Entity\Category;
use Fa\Bundle\PaymentBundle\Repository\TransactionRepository;
use Fa\Bundle\AdBundle\Repository\AdLocationRepository;
use Fa\Bundle\AdBundle\Entity\AdLocation;

/**
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @author Konda Reddy <konda.reddy@firdaymediagroup.com>
 * @copyright 2014 Friday Media Group Ltd
 * @version v1.0
 */
class AdFurnitureAutoEmailRepository extends EntityRepository
{
    const EMAIL_ONCE_IN = '3';

    public function adFurnitureAutoEmail($userId, $email_sent_date){
        $objEntity = new AdFurnitureAutoEmail();

        $objEntity->setUser($userId);
        $objEntity->setEmailSentDate($email_sent_date);
        $this->getEntityManager()->persist($objEntity);
        $this->getEntityManager()->flush($objEntity);
    }

    public function isCheckEmailSent($userId, $email_sent_date){

        $query = "SELECT email_sent_date FROM fridayad_prod_restore.furniture_auto as fa WHERE fa.userid =".$userId;
        $stmt = $this->em->getConnection()->prepare($query);
        $stmt->execute();
        $emailSentDate = $stmt->fetch();

        if($emailSentDate){
            $query = "UPDATE email_sent_date FROM fridayad_prod_restore.furniture_auto as fa WHERE fa.userid =".$userId;
            $stmt = $this->em->getConnection()->prepare($query);
            $stmt->execute();
            $emailSentDate = $stmt->fetch();
            return true;
        }else{
            $emailEntity = adFurnitureAutoEmail($userId, $email_sent_date);
            return false;
        }
    }
}