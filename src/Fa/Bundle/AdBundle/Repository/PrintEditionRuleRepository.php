<?php

/**
 * This file is part of the fa bundle.
 *
 * @copyright Copyright (c) 2014, FMG
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */


namespace Fa\Bundle\AdBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Fa\Bundle\AdBundle\Repository\PrintEditionRepository;
use Fa\Bundle\EntityBundle\Repository\LocationGroupRepository;

/**
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @author Samir Amrutya <samiram@aspl.in>
 * @copyright 2014 Friday Media Group Ltd
 * @version 1.0
 */
class PrintEditionRuleRepository extends EntityRepository
{
    use \Fa\Bundle\CoreBundle\Search\Search;

    const ALIAS = 'per';

    /**
     * Prepare query builder.
     *
     * @param array $data Array of data.
     *
     * @return Doctrine\ORM\QueryBuilder The query builder.
     */
    public function getBaseQueryBuilder()
    {
        return $this->createQueryBuilder(self::ALIAS);
    }

    /**
     * Prepare query builder.
     *
     * @param array $data Array of data.
     *
     * @return Doctrine\ORM\QueryBuilder The query builder.
     */
    public function getLocationGroupsByPrintEditionId($id = null)
    {
        $locationGroups = array();

        if ($id) {
            if (!is_array($id)) {
                $id = array($id);
            }

            $id = array_filter($id);

            if (count($id)) {
                $queryBuilder = $this->getBaseQueryBuilder();
                $queryBuilder->select(PrintEditionRepository::ALIAS.'.id', LocationGroupRepository::ALIAS.'.name')
                             ->leftJoin(self::ALIAS.'.print_edition', PrintEditionRepository::ALIAS)
                             ->leftJoin(self::ALIAS.'.location_group', LocationGroupRepository::ALIAS)
                             ->andWhere(self::ALIAS.'.print_edition IN (' . implode(', ', $id) . ')');

                $rules = $queryBuilder->getQuery()->getArrayResult();
                foreach ($rules as $rule) {
                    $locationGroups[$rule['id']][] = $rule['name'];
                }
            }
        }

        return $locationGroups;
    }
    
    public function getPrintEditionByLocationGroup($locationGroupId)
    {
        $queryBuilder = $this->getBaseQueryBuilder();
        $queryBuilder->leftJoin(self::ALIAS.'.print_edition', PrintEditionRepository::ALIAS)
        ->leftJoin(self::ALIAS.'.location_group', LocationGroupRepository::ALIAS)
        ->andWhere(self::ALIAS.'.location_group IN (:locationGroupId)')
        ->andWhere(PrintEditionRepository::ALIAS.'.status = 1')
        ->setParameter('locationGroupId', $locationGroupId);
        
        return $queryBuilder->getQuery()->getResult();
    }
}
