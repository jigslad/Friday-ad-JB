<?php

/**
 * This file is part of the fa bundle.
 *
 * @copyright Copyright (c) 2014, FMG
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Fa\Bundle\MessageBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Fa\Bundle\CoreBundle\Manager\CommonManager;

/**
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @author Samir Amrutya <samiram@aspl.in>
 * @copyright 2014 Friday Media Group Ltd
 * @version v1.0
 */
class NotificationMessageRepository extends EntityRepository
{
    use \Fa\Bundle\CoreBundle\Search\Search;

    const ALIAS = 'nm';

    /**
     * Prepare query builder.
     *
     * @param array $data Array of data.
     *
     * @return Doctrine\ORM\QueryBuilder The query builder
     */
    public function getBaseQueryBuilder()
    {
        return $this->createQueryBuilder(self::ALIAS);
    }

    /**
     * Get variables used in notification messages.
     *
     * @return array
     */
    public static function getNotificationMessageVariablesArray()
    {
        $indexableDimensionArray = array();

        $oClass = new \ReflectionClass('\Fa\Bundle\MessageBundle\Interfaces\NotificationMessageVariablesInterface');
        $constantArray = $oClass->getConstants();

        foreach ($constantArray as $constKey => $constValue) {
            $indexableDimensionArray[$constValue] = '{'.strtolower($constKey).'}';
        }
        asort($indexableDimensionArray);

        $indexableDimensionArray[] = '{site_url}';

        return $indexableDimensionArray;
    }

    /**
     * Add static page name filter to existing query object.
     *
     * @param string $name Package title.
     */
    protected function addNameFilter($name = null)
    {
        $this->queryBuilder->andWhere(sprintf('%s.name LIKE \'%%%s%%\'', $this->getRepositoryAlias(), $name));
    }

    /**
     * Add package status filter to existing query object.
     *
     * @param integer $status Status.
     */
    protected function addStatusFilter($status = null)
    {
        $this->queryBuilder->andWhere($this->getRepositoryAlias().'.status = '.$status);
    }
}
