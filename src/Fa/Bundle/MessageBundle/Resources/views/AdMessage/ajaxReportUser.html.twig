{% form_theme form 'FaFrontendBundle:Form:fields.html.twig' %}
{% set container = fetch_container_instance() %}
<div class="modal-dialog"><div class="modal-content">
		<div class="modal-header">
			<h5 class="modal-title save-search-title">{{'Report user'|trans({}, 'frontend-contact-seller')}}</h5>
		    <button class="close-modal" class="close" data-dismiss="modal">Ã—</button>
		</div>
        
{{ form_start(form, {'attr': {'novalidate': '', 'id': 'report_user_form_id'}}) }}
<div class="modal-body">
    <h5 class="tell-us-title">Tell us why:</h5>
    {{ form_widget(form.reason) }}
    {{ form_errors(form.reason) }}
    {{ form_widget(form.comment, {'attr': {'style':'display:none'}}) }}
    {{ form_errors(form.comment) }}
    {{ form_widget(form.save, {'attr': {'class':'secondary-btn-1 button expand'}}) }}
</div>
{{ form_end(form) }}
</div></div>
<script language="javascript" type="text/javascript">
//<![CDATA[
    $(document).ready(function() {
        bindFormErrorEvents();
        bindCustomRadioEvent();
        bindCustomCheckboxEvent();
        hideShowOtherOption();
    });
    $("#report_user_form_id").submit(function(event) {
        hideAlertMessage();
        blockElement('#reportUserModal');
        // Stop form from submitting normally
        event.preventDefault();
        var route = Routing.generate('ajax_report_user', { 'replyId': '{{app.request.get('replyId')}}' });
        $.ajax({
            type: "POST",
            url: route,
            data: new FormData(this),
            contentType: false,
            processData:false,
        })
        .always(function(response) {
            unblockElement('#reportUserModal');
        })
        .done(function(response) {
            if (response.htmlContent.length) {
                $('#reportUserModal').html(response.htmlContent);
            } else if (response.error.length) {
                $('#reportUserModal').modal('hide');
                $(decorateMessage(response.error, 'alert')).insertBefore('#message_box');
                scrollToElement('#message_box', '1000', -150);
            } else {
                $('#reportUserModal').modal('hide');
                $(decorateMessage('{{'User reported successfully.'|trans({}, 'frontend-contact-seller')}}', 'success')).insertBefore('#message_box');
                scrollToElement('#message_box', '1000', -150);
                $('#report_user_btn').hide();
            }
        });
    });
    
    $('input[name="fa_message_spammer_report_user[reason]"]').change(function() {
        hideShowOtherOption();
    });
    
    function hideShowOtherOption()
    {
        var reasonId = $('input[name="fa_message_spammer_report_user[reason]"]:checked', '#report_user_form_id').val();
        if (reasonId == '{{ constant('Fa\\Bundle\\MessageBundle\\Repository\\MessageRepository::REPORT_USER_REASON_OTHER') }}') {
            $('#fa_message_spammer_report_user_comment').show();
        } else {
            $('#fa_message_spammer_report_user_comment').val('');
            $('#fa_message_spammer_report_user_comment').removeClass('error');
            $('#fa_message_spammer_report_user_comment').hide();
            $('small').remove('.error');
        }
    }
//]]>
</script>