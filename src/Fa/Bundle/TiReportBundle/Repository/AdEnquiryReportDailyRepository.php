<?php

/**
 * This file is part of the fa bundle.
 *
 * @copyright Copyright (c) 2014, FMG
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Fa\Bundle\TiReportBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Fa\Bundle\CoreBundle\Manager\CommonManager;
use Fa\Bundle\UserBundle\Repository\RoleRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * AdEnquiryReportRepository repository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @author Mohit Chauhan <mohitc@aspl.in>
 * @copyright 2014 Friday Media Group Ltd
 * @version 1.0
 */
class AdEnquiryReportDailyRepository extends EntityRepository
{
    use \Fa\Bundle\CoreBundle\Search\Search;

    const ALIAS = 'aerd';

    /**
     * Prepare query builder.
     *
     * @param array $data Array of data.
     *
     * @return Doctrine\ORM\QueryBuilder The query builder
     */
    public function getBaseQueryBuilder()
    {
        return $this->createQueryBuilder(self::ALIAS);
    }

    /**
     * Get ad report fields
     */
    public static function getReportFields()
    {
        $adReportFields = array();
        $adReportFields['view'] = 'View';
        $adReportFields['contact_seller_click'] = 'Contact seller click';
        $adReportFields['call_click'] = 'Call click';
        $adReportFields['email_send_link'] = 'Email send link';
        $adReportFields['social_share'] = 'Social share';
        $adReportFields['web_link_click'] = 'Website click';
        $adReportFields['package_name'] = 'Profile package name';
        //$adReportFields['user_site_view_counter'] = 'Profile views';

        asort($adReportFields);

        return $adReportFields;
    }

    /**
     * Get user report sort fields
     */
    public static function getReportSortFields()
    {
        $adEnquiryReportDailySortFields   = array();
        $adEnquiryReportDailySortFields[] = 'view';
        $adEnquiryReportDailySortFields[] = 'contact_seller_click';
        $adEnquiryReportDailySortFields[] = 'call_click';
        $adEnquiryReportDailySortFields[] = 'email_send_link';
        $adEnquiryReportDailySortFields[] = 'social_share';
        $adEnquiryReportDailySortFields[] = 'web_link_click';

        return $adEnquiryReportDailySortFields;
    }

    /**
     * Get total ad call clicks for ad id.
     *
     * @param array   $adId Ad id array.
     * @param integer $time integer
     *
     * @return array
     */
    public function getAdTotalCallClicksByAdId($adId = array(), $time = false)
    {
        $qb = $this->getBaseQueryBuilder()
                   ->select('SUM('.self::ALIAS.'.call_click) As total_call_click', self::ALIAS.'.ad_id')
                   ->groupBy(self::ALIAS.'.ad_id');

        if (!is_array($adId)) {
            $adId = array($adId);
        }

        if (count($adId)) {
            $qb->andWhere(self::ALIAS.'.ad_id IN (:adId)')->setParameter('adId', $adId);
        }

        if ($time) {
            $qb->andWhere(self::ALIAS.'.created_at >= :created_at')->setParameter('created_at', $time);
        }

        $adTotalCallClicksArray = array();
        $adCallClicks           = $qb->getQuery()->getArrayResult();
        if (count($adCallClicks)) {
            foreach ($adCallClicks as $adCallClick) {
                $adTotalCallClicksArray[$adCallClick['ad_id']] = $adCallClick['total_call_click'];
            }
        }

        return $adTotalCallClicksArray;
    }
}
