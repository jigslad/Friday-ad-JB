<?php

/**
 * This file is part of the fa bundle.
 *
 * @copyright Copyright (c) 2014, FMG
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Fa\Bundle\EntityBundle\Repository;

use Fa\Bundle\EntityBundle\Entity\LocationPostal;
use Fa\Bundle\CoreBundle\Manager\CommonManager;

/**
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @author Samir Amrutya <samiram@aspl.in>
 * @copyright 2014 Friday Media Group Ltd
 * @version v1.0
 */
class LocationPostalRepository extends EntityRepository
{
    

    const ALIAS = 'lpa';

    /**
     * Prepare query builder.
     *
     * @param array $data array of data
     *
     * @return Doctrine\ORM\QueryBuilder The query builder
     */
    public function getBaseQueryBuilder()
    {
        return $this->createQueryBuilder(self::ALIAS);
    }

    /**
     * Get town areas key value array by term.
     *
     * @param string  $term Search term.
     *
     * @return array
     */
    public function getTownAreasArrayByPostCode($postCode = null)
    {	
    	$areas = $this->getAreasByPostCodeQuery($postCode);
    	
    	$areaArray = array();
    	if(!empty($areas)) {
    		foreach ($areas as $area) { 
    			$areaArray[] = array('id'=> $area->getParent()->getId(), 'text' => $area->getName().', '.$area->getParent()->getName(), 'area_id'=> $area->getId(), 'locationBy' => 'area', 'latlong' => $area->getLatitude().', '.$area->getLongitude());
    		}
    	}
    	return $areaArray;
    }
    
    /**
     * Get areas key value array by term.
     *
     * @param string  $term Search term.
     *
     * @return array
     */
    public function getAreasByPostCode($postCode = null)
    {
    	$areas = $this->getAreasByPostCodeQuery($postCode);
    	
    	$areaArray = array();
    	if(!empty($areas)) {
    		foreach ($areas as $area) {
    			$areaArray[] = array('id'=> $area->getId(), 'latitude' => $area->getLatitude(), 'longitude'=> $area->getLongitude(), 'latlong' => $area->getLatitude().', '.$area->getLongitude());
    		}
    	}
    	return $areaArray;
    }
    
    private function getAreasByPostCodeQuery($postCode='') {
    	return $this->getBaseQueryBuilder(self::ALIAS)
	    	->select(LocationRepository::ALIAS)
	    	->innerJoin('Fa\Bundle\EntityBundle\Entity\Location', LocationRepository::ALIAS, 'WITH', self::ALIAS.'.location_id = '.LocationRepository::ALIAS.'.id')
	    	->andWhere(self::ALIAS.'.postal_code LIKE :postal_code')
	    	->setParameter('postal_code', trim($postCode).'%')
	    	->orderBy(self::ALIAS.'.id', 'asc')
	    	->getQuery()->getResult();    	
    }
}
