<?php

/**
 * This file is part of the fa bundle.
 *
 * @copyright Copyright (c) 2014, FMG
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Fa\Bundle\DotMailerBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Fa\Bundle\CoreBundle\Manager\CommonManager;
use Fa\Bundle\DotMailerBundle\Entity\DotmailerResponse;

/**
 * Dotmailer repository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @author Samir Amrutya<amitl@aspl.in>
 * @copyright 2014 Friday Media Group Ltd
 * @version 1.0
 */
class DotmailerResponseRepository extends EntityRepository
{
    use \Fa\Bundle\CoreBundle\Search\Search;

    const DOTMAILER_RESPONSE_BULK_IMPORT = 1;

    const DOTMAILER_RESPONSE_EXPORT_FILETER = 2;

    const SUCCESS_STATUS = 1;

    const FAILURE_STATUS = 1;

    const ALIAS = 'dr';

    /**
     * Prepare query builder.
     *
     * @param array $data Array of data.
     *
     * @return Doctrine\ORM\QueryBuilder The query builder
     */
    public function getBaseQueryBuilder()
    {
        return $this->createQueryBuilder(self::ALIAS);
    }

    /**
     * Get table name.
     *
     * @return Ambigous <string, multitype:>
     */
    private function getTableName()
    {
        return $this->_em->getClassMetadata('FaDotMailerBundle:DotmailerResponse')->getTableName();
    }

    /**
     * Update response.
     *
     * @param integer $httpcode
     * @param string  $response
     * @param integer $type
     * @param object  $dotmailerResponse
     */
    public function updateResponse($httpcode, $response, $type, $dotmailerResponse = null)
    {
        if ($dotmailerResponse == null) {
            $dotmailerResponse = new DotmailerResponse();
        }

        $dotmailerResponse->setHttpcode($httpcode);
        $dotmailerResponse->setValue($response);
        $dotmailerResponse->setDotmailerType($type);
        $this->_em->persist($dotmailerResponse);
        $this->_em->flush($dotmailerResponse);
    }
}
