<?php

/**
 * This file is part of the fa bundle.
 *
 * @copyright Copyright (c) 2014, FMG
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Fa\Bundle\ContentBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Fa\Bundle\CoreBundle\Manager\CommonManager;
use Fa\Bundle\EntityBundle\Repository\CategoryRepository;
use Fa\Bundle\EntityBundle\Repository\EntityRepository as BaseEntityRepository;
use Gedmo\Sluggable\Util\Urlizer as Urlizer;

/**
 * Landing page info repository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @author Amit Limbadia <amitl@aspl.in>
 * @copyright 2014 Friday Media Group Ltd
 * @version 1.0
 */
class LandingPageInfoRepository extends EntityRepository
{
    use \Fa\Bundle\CoreBundle\Search\Search;

    const ALIAS = 'lpi';

    const FOR_SALE_EXPLORE_ID    = 1;
    const FOR_SALE_OTHER_WAYS_ID = 2;

    const PROPERTY_DISCOVER_ID = 3;

    const MOTOR_OTHER_VEHICLES_ID = 4;
    const MOTOR_MORE_IN_MOTOR_ID  = 5;

    const ANIMAL_HORSES_AND_EUESTION = 6;
    const ANIMAL_LIVESTOCK           = 7;

    /**
     * Prepare query builder.
     *
     * @param array $data Array of data.
     *
     * @return Doctrine\ORM\QueryBuilder The query builder
     */
    public function getBaseQueryBuilder()
    {
        return $this->createQueryBuilder(self::ALIAS);
    }

    /**
     * Get table name.
     *
     * @return Ambigous <string, multitype:>
     */
    private function getTableName()
    {
        return $this->_em->getClassMetadata('FaContentBundle:LandingPageInfo')->getTableName();
    }

    /**
     * Get landing page image array.
     *
     * @return array
     */
    public function getLandingPageImageArray($container)
    {
        $categoryRepositoryName = 'FaEntityBundle:Category';
        $entityRepositoryName   = 'FaEntityBundle:Entity';
        $entityCacheManager     = $container->get('fa.entity.cache.manager');
        $landingPageImageArray  = array();

        //forsale explore section.
        $landingPageImageArray[CategoryRepository::FOR_SALE_ID][self::FOR_SALE_EXPLORE_ID][] = array('id' => CategoryRepository::BABY_AND_KIDS_ID, 'field_name' => 'for-sale-baby-kids', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::BABY_AND_KIDS_ID), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::FOR_SALE_ID][self::FOR_SALE_EXPLORE_ID][] = array('id' => CategoryRepository::FOR_SALE_FASHION, 'field_name' => 'for-sale-fashion', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::FOR_SALE_FASHION), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::FOR_SALE_ID][self::FOR_SALE_EXPLORE_ID][] = array('id' => CategoryRepository::FOR_SALE_HOME_AND_GARDEN, 'field_name' => 'for-sale-home-garden', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::FOR_SALE_HOME_AND_GARDEN), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::FOR_SALE_ID][self::FOR_SALE_EXPLORE_ID][] = array('id' => CategoryRepository::FOR_SALE_LEISURE, 'field_name' => 'for-sale-leisure', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::FOR_SALE_LEISURE), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::FOR_SALE_ID][self::FOR_SALE_EXPLORE_ID][] = array('id' => CategoryRepository::FOR_SALE_ANTIQUES_AND_COLLECTABLES, 'field_name' => 'for-sale-antiques-collectables', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::FOR_SALE_ANTIQUES_AND_COLLECTABLES), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::FOR_SALE_ID][self::FOR_SALE_EXPLORE_ID][] = array('id' => CategoryRepository::FOR_SALE_ELECTRONICS, 'field_name' => 'for-sale-electronics', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::FOR_SALE_ELECTRONICS), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::FOR_SALE_ID][self::FOR_SALE_EXPLORE_ID][] = array('id' => CategoryRepository::FOR_SALE_BUSINESS_AND_OFFICE, 'field_name' => 'for-sale-business-office', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::FOR_SALE_BUSINESS_AND_OFFICE), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::FOR_SALE_ID][self::FOR_SALE_EXPLORE_ID][] = array('id' => CategoryRepository::FOR_SALE_AGRICULTURAL, 'field_name' => 'for-sale-agricultural', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::FOR_SALE_AGRICULTURAL), 'overlay' => true, 'type' => 'category');

        //forsale Other ways to shop section.
        $landingPageImageArray[CategoryRepository::FOR_SALE_ID][self::FOR_SALE_OTHER_WAYS_ID][] = array('id' => BaseEntityRepository::AD_TYPE_FREETOCOLLECTOR_ID, 'field_name' => 'for-sale-free-to-collector', 'name' => $entityCacheManager->getEntityNameById($entityRepositoryName, BaseEntityRepository::AD_TYPE_FREETOCOLLECTOR_ID), 'overlay' => false, 'type' => 'adtype');
        $landingPageImageArray[CategoryRepository::FOR_SALE_ID][self::FOR_SALE_OTHER_WAYS_ID][] = array('id' => BaseEntityRepository::AD_TYPE_SWAPPING_ID, 'field_name' => 'for-sale-swapping', 'name' => $entityCacheManager->getEntityNameById($entityRepositoryName, BaseEntityRepository::AD_TYPE_SWAPPING_ID), 'overlay' => false, 'type' => 'adtype');
        $landingPageImageArray[CategoryRepository::FOR_SALE_ID][self::FOR_SALE_OTHER_WAYS_ID][] = array('id' => CategoryRepository::FOR_SALE_BIZARRE_BAZAAR, 'field_name' => 'for-sale-bizarre-bazaar', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::FOR_SALE_BIZARRE_BAZAAR), 'overlay' => false, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::FOR_SALE_ID][self::FOR_SALE_OTHER_WAYS_ID][] = array('id' => BaseEntityRepository::AD_TYPE_WANTED_ID, 'field_name' => 'for-sale-wanted', 'name' => $entityCacheManager->getEntityNameById($entityRepositoryName, BaseEntityRepository::AD_TYPE_WANTED_ID), 'overlay' => false, 'type' => 'adtype');

        // property discover section.
        $landingPageImageArray[CategoryRepository::PROPERTY_ID][self::PROPERTY_DISCOVER_ID][] = array('id' => CategoryRepository::PROPERTY_FOR_SALE_ID, 'field_name' => 'property-for-sale', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::PROPERTY_FOR_SALE_ID), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::PROPERTY_ID][self::PROPERTY_DISCOVER_ID][] = array('id' => CategoryRepository::PROPERTY_FOR_RENT_ID, 'field_name' => 'property-for-rent', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::PROPERTY_FOR_RENT_ID), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::PROPERTY_ID][self::PROPERTY_DISCOVER_ID][] = array('id' => CategoryRepository::PROPERTY_SHARE_ID, 'field_name' => 'property-share', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::PROPERTY_SHARE_ID), 'overlay' => true, 'type' => 'category');

        // motor Other vehicles section.
        $landingPageImageArray[CategoryRepository::MOTORS_ID][self::MOTOR_OTHER_VEHICLES_ID][] = array('id' => CategoryRepository::COMMERCIALVEHICLES_ID, 'field_name' => 'motor-commercial-vehicles', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::COMMERCIALVEHICLES_ID), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::MOTORS_ID][self::MOTOR_OTHER_VEHICLES_ID][] = array('id' => CategoryRepository::MOTORBIKES_ID, 'field_name' => 'motor-motorbikes', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::MOTORBIKES_ID), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::MOTORS_ID][self::MOTOR_OTHER_VEHICLES_ID][] = array('id' => CategoryRepository::MOTORHOMES_AND_CARAVANS_ID, 'field_name' => 'motor-motorhomes-caravans', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::MOTORHOMES_AND_CARAVANS_ID), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::MOTORS_ID][self::MOTOR_OTHER_VEHICLES_ID][] = array('id' => CategoryRepository::BOATS_ID, 'field_name' => 'motor-boats', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::BOATS_ID), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::MOTORS_ID][self::MOTOR_OTHER_VEHICLES_ID][] = array('id' => CategoryRepository::FARM_ID, 'field_name' => 'motor-farms', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::FARM_ID), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::MOTORS_ID][self::MOTOR_OTHER_VEHICLES_ID][] = array('id' => CategoryRepository::HORSEBOXES_AND_TRAILERS_ID, 'field_name' => 'motor-horseboxes-trailers', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::HORSEBOXES_AND_TRAILERS_ID), 'overlay' => true, 'type' => 'category');

        // motor More in motors section.
        $landingPageImageArray[CategoryRepository::MOTORS_ID][self::MOTOR_MORE_IN_MOTOR_ID][] = array('id' => CategoryRepository::MOTORS_SERVICES_ID, 'field_name' => 'motor-motors-services', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::MOTORS_SERVICES_ID), 'overlay' => false, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::MOTORS_ID][self::MOTOR_MORE_IN_MOTOR_ID][] = array('id' => CategoryRepository::PARTS_AND_ACCESSORIES_ID, 'field_name' => 'motor-parts-accessories', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::PARTS_AND_ACCESSORIES_ID), 'overlay' => false, 'type' => 'category');

        // animals Horses & euestion section.
        $landingPageImageArray[CategoryRepository::ANIMALS_ID][self::ANIMAL_HORSES_AND_EUESTION][] = array('id' => CategoryRepository::HORSES, 'field_name' => 'animal-horses', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::HORSES), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::ANIMALS_ID][self::ANIMAL_HORSES_AND_EUESTION][] = array('id' => CategoryRepository::HORSE_SUPPLIES_AND_ACCESSORIES, 'field_name' => 'animal-horse-supplies-accessories', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::HORSE_SUPPLIES_AND_ACCESSORIES), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::ANIMALS_ID][self::ANIMAL_HORSES_AND_EUESTION][] = array('id' => CategoryRepository::HORSE_LIVERY_AND_STABLES, 'field_name' => 'animal-horse-livery-stables', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::HORSE_LIVERY_AND_STABLES), 'overlay' => true, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::ANIMALS_ID][self::ANIMAL_HORSES_AND_EUESTION][] = array('id' => CategoryRepository::HORSE_SCHOOLS, 'field_name' => 'animal-horse-schools', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::HORSE_SCHOOLS), 'overlay' => true, 'type' => 'category');

        // animals Livestock section.
        $landingPageImageArray[CategoryRepository::ANIMALS_ID][self::ANIMAL_LIVESTOCK][] = array('id' => CategoryRepository::LIVESTOCK, 'field_name' => 'animal-livestock', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::LIVESTOCK), 'overlay' => false, 'type' => 'category');
        $landingPageImageArray[CategoryRepository::ANIMALS_ID][self::ANIMAL_LIVESTOCK][] = array('id' => CategoryRepository::LIVESTOCK_SUPPLIES, 'field_name' => 'animal-livestock-supplies', 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, CategoryRepository::LIVESTOCK_SUPPLIES), 'overlay' => false, 'type' => 'category');

        // adult category
        $adultCategories = $this->_em->getRepository('FaEntityBundle:Category')->getChildrenKeyValueArrayByParentId(CategoryRepository::ADULT_ID, $container);

        foreach ($adultCategories as $adultCategoryId => $adultCategoryName) {
            $landingPageImageArray[CategoryRepository::ADULT_ID][$adultCategoryId][] = array('id' => $adultCategoryId, 'field_name' => Urlizer::urlize($adultCategoryName), 'name' => $entityCacheManager->getEntityNameById($categoryRepositoryName, $adultCategoryId), 'overlay' => true, 'type' => 'category');
        }

        return $landingPageImageArray;
    }

    /**
     * Get landing page section name.
     *
     * @param integer $sectionId Section id.
     *
     * @return Ambigous <NULL, string>
     */
    public function getLandigPageSectionNameById($sectionId)
    {
        $sectionArray = array();
        $sectionArray[self::FOR_SALE_EXPLORE_ID]        = 'Explore';
        $sectionArray[self::FOR_SALE_OTHER_WAYS_ID]     = 'Other ways to shop';
        $sectionArray[self::PROPERTY_DISCOVER_ID]       = 'Discover';
        $sectionArray[self::MOTOR_OTHER_VEHICLES_ID]    = 'Other vehicles';
        $sectionArray[self::MOTOR_MORE_IN_MOTOR_ID]     = 'More in motors';
        $sectionArray[self::ANIMAL_HORSES_AND_EUESTION] = 'Horses and euestion';
        $sectionArray[self::ANIMAL_LIVESTOCK]           = 'Livestock';

        return isset($sectionArray[$sectionId]) ? $sectionArray[$sectionId] : null;
    }

    /**
     * Get landing page images.
     *
     * @param integer $landingPageId Landing page id.
     *
     * @return array
     */
    public function getLandingPageImages($landingPageId)
    {
        $imagesArray       = array();
        $landingPageImages = $this->findBy(array('landing_page' => $landingPageId));

        foreach ($landingPageImages as $landingPageImage) {
            $type = null;
            if ($landingPageImage->getCategoryId()) {
                $type   = 'category';
                $typeId = $landingPageImage->getCategoryId();
            } elseif ($landingPageImage->getAdTypeId()) {
                $type = 'adtype';
                $typeId = $landingPageImage->getAdTypeId();
            }

            $imagesArray[$landingPageImage->getSectionType()][$type][$typeId] = array('file_name' => $landingPageImage->getPath().'/'.$landingPageImage->getFileName(), 'overlay_file_name' => $landingPageImage->getPath().'/'.$landingPageImage->getOverLayFileName());
        }

        return $imagesArray;
    }

    /**
     * Get landing page images by section.
     *
     * @param integer $landingPageId Landing page id.
     * @param object  $container     Container identifier.
     *
     * @return array
     */
    public function getLandingPageImagesBySecton($landingPageId, $container = null)
    {
        if ($container) {
            $tableName   = $this->getTableName();
            $cacheKey    = $tableName.'|'.__FUNCTION__.'|'.$landingPageId;
            $cachedValue = CommonManager::getCacheVersion($container, $cacheKey);

            if ($cachedValue !== false) {
                return $cachedValue;
            }
        }

        $imagesArray       = array();
        $landingPageImages = $this->findBy(array('landing_page' => $landingPageId));

        foreach ($landingPageImages as $landingPageImage) {
            if ($landingPageImage->getCategoryId()) {
                $imagesArray[$landingPageImage->getSectionType()][$landingPageImage->getId()]['category_id'] = $landingPageImage->getCategoryId();
            }

            if ($landingPageImage->getAdTypeId()) {
                $imagesArray[$landingPageImage->getSectionType()][$landingPageImage->getId()]['ad_type_id'] = $landingPageImage->getAdTypeId();
            }

            if ($landingPageImage->getFileName()) {
                $imagesArray[$landingPageImage->getSectionType()][$landingPageImage->getId()]['file_name'] = $landingPageImage->getPath().'/'.$landingPageImage->getFileName();
            }

            if ($landingPageImage->getOverLayFileName()) {
                $imagesArray[$landingPageImage->getSectionType()][$landingPageImage->getId()]['overlay_file_name'] = $landingPageImage->getPath().'/'.$landingPageImage->getOverLayFileName();
            }
        }

        if ($container) {
            CommonManager::setCacheVersion($container, $cacheKey, $imagesArray);
        }

        return $imagesArray;
    }
}
