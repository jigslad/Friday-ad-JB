<?php

/**
 * This file is part of the fa bundle.
 *
 * @copyright Copyright (c) 2014, FMG
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Fa\Bundle\ContentBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Fa\Bundle\CoreBundle\Manager\CommonManager;
use Fa\Bundle\AdBundle\Solr\AdSolrFieldMapping;
use Fa\Bundle\EntityBundle\Repository\LocationRepository;

/**
 * Seo tool top links repository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @author Amit Limbadia <amitl@aspl.in>
 * @copyright 2014 Friday Media Group Ltd
 * @version 1.0
 */
class SeoToolTopLinkRepository extends EntityRepository
{
    use \Fa\Bundle\CoreBundle\Search\Search;

    const ALIAS = 'sttl';

    /**
     * Prepare query builder.
     *
     * @param array $data Array of data.
     *
     * @return Doctrine\ORM\QueryBuilder The query builder
     */
    public function getBaseQueryBuilder()
    {
        return $this->createQueryBuilder(self::ALIAS);
    }

    /**
     * Remove seo tool top links based on seo tool id.
     *
     * @param integer $seoToolId
     */
    public function removeRecordsBySeoToolId($seoToolId)
    {
        $this->createQueryBuilder(self::ALIAS)
        ->delete()
        ->andWhere(sprintf('%s.seo_tool = %d', self::ALIAS, $seoToolId))
        ->getQuery()
        ->execute();
    }

    /**
     * Get seo tool top links table name.
     */
    private function getSeoToolTopLinkTableName()
    {
        return $this->_em->getClassMetadata('FaContentBundle:SeoToolTopLink')->getTableName();
    }

    /**
     * Get top link array for seo tool id.
     *
     * @param integer $seoToolId Seo tool id.
     * @param object  $container Container object.
     *
     * @return array
     */
    public function getTopLinkArrayBySeoToolId($seoToolId, $container)
    {
        if ($container) {
            $culture     = CommonManager::getCurrentCulture($container);
            $tableName   = $this->getSeoToolTopLinkTableName();
            $cacheKey    = $tableName.'|'.__FUNCTION__.'|'.$seoToolId.'_'.$culture;
            $cachedValue = CommonManager::getCacheVersion($container, $cacheKey);

            if ($cachedValue !== false) {
                return $cachedValue;
            }
        }
        $topLinkArray = array();
        $topLinkSearches = $this->createQueryBuilder(self::ALIAS)
        ->andWhere(sprintf('%s.seo_tool = %d', self::ALIAS, $seoToolId))
        ->getQuery()
        ->execute();

        foreach ($topLinkSearches as $topLink) {
            $topLinkArray[] = array('title' => $topLink->getTitle(), 'url' => $topLink->getUrl());
        }

        if ($container && count($topLinkArray)) {
            CommonManager::setCacheVersion($container, $cacheKey, $topLinkArray);
        }

        return $topLinkArray;
    }

    /**
     * Add top link search title filter.
     *
     * @param string $title title.
     */
    protected function addTitleFilter($title = null)
    {
        $this->queryBuilder->andWhere(sprintf('%s.title LIKE \'%%%s%%\'', $this->getRepositoryAlias(), $title));
    }
}
