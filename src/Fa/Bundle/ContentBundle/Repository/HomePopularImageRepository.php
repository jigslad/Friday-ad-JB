<?php

/**
 * This file is part of the fa bundle.
 *
 * @copyright Copyright (c) 2014, FMG
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Fa\Bundle\ContentBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Fa\Bundle\CoreBundle\Manager\CommonManager;

/**
 * Home popular image repository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @author Amit Limbadia <amitl@aspl.in>
 * @copyright 2014 Friday Media Group Ltd
 * @version 1.0
 */
class HomePopularImageRepository extends EntityRepository
{
    use \Fa\Bundle\CoreBundle\Search\Search;

    const ALIAS = 'hpi';

    /**
     * Prepare query builder.
     *
     * @param array $data Array of data.
     *
     * @return Doctrine\ORM\QueryBuilder The query builder
     */
    public function getBaseQueryBuilder()
    {
        return $this->createQueryBuilder(self::ALIAS);
    }

    /**
     * Add status filter.
     *
     * @param integer Status entity type.
     */
    protected function addStatusFilter($status = null)
    {
        $this->queryBuilder->andWhere($this->getRepositoryAlias().'.status = '.$status);
    }

    /**
     * Get home popular image table name.
     *
     * @return Ambigous <string, multitype:>
     */
    private function getHomePopularImageTableName()
    {
        return $this->_em->getClassMetadata('FaContentBundle:HomePopularImage')->getTableName();
    }

    /**
     * Get home popular image array.
     *
     * @param object $container Container identifier.
     *
     * @return array
     */
    public function getHomePopularImageArray($container = null)
    {
        if ($container) {
            $culture     = CommonManager::getCurrentCulture($container);
            $tableName   = $this->getHomePopularImageTableName();
            $cacheKey    = $tableName.'|'.__FUNCTION__.'|'.$culture;
            $cachedValue = CommonManager::getCacheVersion($container, $cacheKey);

            if ($cachedValue !== false) {
                return $cachedValue;
            }
        }

        $query = $this->getBaseQueryBuilder()
        ->select(self::ALIAS.'.path', self::ALIAS.'.file_name', self::ALIAS.'.overlay_file_name', self::ALIAS.'.url')
        ->andWhere(self::ALIAS.'.status = 1')
        ->addOrderBy(self::ALIAS.'.created_at', 'DESC')
        ->setMaxResults(4);

        $homePopularImages       = $query->getQuery()->getArrayResult();
        $homePopularImagesArray = array();

        if (count($homePopularImages)) {
            foreach ($homePopularImages as $homePopularImage) {
                $homePopularBgImagePath      = $container->get('kernel')->getRootDir().'/../web/'.$homePopularImage['path'].'/'.$homePopularImage['file_name'];
                $homePopularOverlayImagePath = $container->get('kernel')->getRootDir().'/../web/'.$homePopularImage['path'].'/'.$homePopularImage['overlay_file_name'];
                if (is_file($homePopularBgImagePath) && is_file($homePopularOverlayImagePath)) {
                    $imageSize = getimagesize($homePopularBgImagePath);
                    $homePopularImagesArray[] = array(
                        'bg_image' => CommonManager::getSharedImageUrl($container, $homePopularImage['path'], $homePopularImage['file_name']),
                        'overlay_image' => CommonManager::getSharedImageUrl($container, $homePopularImage['path'], $homePopularImage['overlay_file_name']),
                        'url' => $homePopularImage['url'],
                        'width' => $imageSize[0],
                        'height' => $imageSize[1],
                    );
                }
            }
        }

        if ($container) {
            CommonManager::setCacheVersion($container, $cacheKey, $homePopularImagesArray);
        }

        return $homePopularImagesArray;
    }
}
