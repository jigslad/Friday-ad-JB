{% block adsNearYou_html %}
<link href="https://cdn.mapfit.com/v2-4/assets/css/mapfit.css" rel='stylesheet' />
<div class="homepage-row {{ bgColour }}">
    <div class="row">
        <div class="columns">
            <div class="homepage-title">{{ 'Ads near you'|trans({}, 'frontend-landing-page') }}</div>
            <div class="{{ mapBgColour }}">
                <div class="clearfix">
                    <div class="near-location">
                        {{ form_start(adsNearYouForm, {'attr': {'novalidate': 'novalidate', 'id': 'fa_landing_page_ads_near_you_search'}}) }}
                        {{ form_errors(adsNearYouForm) }}
                        <span class="search-pin"></span>
                        <span id="landingpage_search_editable_location_span">United Kingdom</span>
                        <a href="javascript:void(0)" id="landingpage_search_editable_location_a"> ({{ 'change location'|trans({}, 'frontend-landing-page') }})</a>
                        <div id="landingpage_search_location" class="white-autocomplete">
                            {{ form_widget(adsNearYouForm.item__location_autocomplete) }}
                            <a href="javascript:void(0);" id="fa_landing_page_ads_near_you_search_item__location_close" class="ui-autocomplete-close select2-search-choice-close">Close</a>
                            <div class="clearfix">
                                <button class="button xs-btn-1 expand left" type="button" id="landingpage_search_location_ok">{{ 'Ok'|trans({}, 'frontend-landing-page') }}</button>
                                <button class="button xs-btn-1 expand right" type="cancel" id="landingpage_search_location_cancel">{{ 'Cancel'|trans({}, 'frontend-landing-page') }}</button>
                            </div>
                        </div>
                        {{ form_end(adsNearYouForm) }}
                    </div>
                    <div class="near-items-found"><b>{{ '%adCount% items found'|trans({'%adCount%':(adsNearYou|length)}, 'frontend-landing-page')}}</b> ({{ 'within 1 mile'|trans({}, 'frontend-landing-page') }})</div>
                </div>
                <div class="map-wrapper">
                    {# <div id="googlemaps" style="width:100%;height:498px;"></div> #}
                    <div id="mapfit" style="width:100%;height:498px;"></div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block adsNearYou_script %}
    {# {% javascripts filter='uglifyjs2' output='bundles/js/compiled/adsNearYou.js'
        'bundles/facore/js/googleMapOms.js'
        'bundles/facore/js/googleMapInfobox.js'
    %}
    <script src="{{ static_asset_url(asset_url) }}"></script>  
    {% endjavascripts %} 
    {% set container = fetch_container_instance() %}
   <script language="javascript" type="text/javascript">
        //<![CDATA[
        $(document).ready(function(){
            changeLandingPageLocation();

            var gm = google.maps;
            var map = new gm.Map(document.getElementById('googlemaps'), {
                zoom:10,
                zoomControl: false,
                panControl:false,
                streetViewControl: false,
                mapTypeControl: false,
                mapTypeId:google.maps.MapTypeId.ROADMAP
            });

            var iw = new InfoBox({
                alignBottom: true,
                pixelOffset: new google.maps.Size(-232, -23),
                boxStyle: { 
                    width: "467px"
                },
                closeBoxMargin: "infobox-close",
                closeBoxURL: "{{ asset_url('fafrontend/images/cross.svg') }}",
                infoBoxClearance: new google.maps.Size(20, 20),
                isHidden: false,
                pane: "floatPane",
                enableEventPropagation: false,
                disableAutoPan: true
            });
            var oms = new OverlappingMarkerSpiderfier(map,
              {markersWontMove: true, markersWontHide: true});

            var getMapIcon = function() {
              return new google.maps.MarkerImage("{{ asset_url('fafrontend/images/map-marker.png') }}", null, null, null, new google.maps.Size(15, 15));
            }
            oms.addListener('click', function(marker) {
                iw.setContent('');
                updateContent(marker, iw);
                map.setCenter(marker.getPosition());
                map.panBy(2, -50);
                iw.open(map, marker);
              });
            oms.addListener('spiderfy', function(markers) {
              for(var i = 0; i < markers.length; i ++) {
                markers[i].setIcon(getMapIcon());
              } 
              iw.close();
            });
            oms.addListener('unspiderfy', function(markers) {
              for(var i = 0; i < markers.length; i ++) {
                markers[i].setIcon(getMapIcon());
              }
            });
            var bounds = new gm.LatLngBounds();
            {% set adWithLatLng = false %}
            {% if adsNearYou|length %}
                {% set adFavoriteRepository   = fetch_repository('FaAdBundle:AdFavorite') %}
                {% if app.user %}
                    {% set userId = app.user.getId() %}
                {% else %}
                    {% set userId = app.session.getId() %}
                {% endif %}
                {% set container = fetch_container_instance() %}
                {% set adFavoriteAdIds = adFavoriteRepository.getFavoriteAdByUserId(userId, container) %}
                {% for ad in adsNearYou %}
                    {% if attribute(ad, constant('Fa\\Bundle\\AdBundle\\Solr\\AdSolrFieldMapping::LATITUDE')) is defined and attribute(ad, constant('Fa\\Bundle\\AdBundle\\Solr\\AdSolrFieldMapping::LONGITUDE')) is defined %}
                        {% set adWithLatLng = true %}
                        point =  new google.maps.LatLng(parseFloat({{attribute(ad, constant('Fa\\Bundle\\AdBundle\\Solr\\AdSolrFieldMapping::LATITUDE')).0}}), parseFloat({{attribute(ad, constant('Fa\\Bundle\\AdBundle\\Solr\\AdSolrFieldMapping::LONGITUDE')).0}}));
                        bounds.extend(point);
                        {% if attribute(ad, constant('Fa\\Bundle\\AdBundle\\Solr\\AdSolrFieldMapping::TITLE')) is defined %}
                            title = '{{ attribute(ad, constant('Fa\\Bundle\\AdBundle\\Solr\\AdSolrFieldMapping::TITLE')) }}'
                        {% else %}
                            title = '{{ad.id}}'
                        {% endif %}
                         
                        var marker = new gm.Marker({
                            position: point,
                            title: title,
                            map: map,
                            icon: getMapIcon(),
                          });
                        marker.id = {{ad.id}};
                        oms.addMarker(marker);
                    {% endif %}
                {% endfor %}
            {% endif %}
            {% if adWithLatLng %}
                map.fitBounds(bounds);
            {% else %}
                map.setCenter(new google.maps.LatLng(51.50, -0.12));
            {% endif %}
        });
    //]]>
</script> #}
<script src="https://cdn.mapfit.com/v2-4/assets/js/tetragon.js"></script>
<script src="https://cdn.mapfit.com/v2-4/assets/js/mapfit.js"></script>
<script language="javascript" type="text/javascript">   
//<![CDATA[
	$(document).ready(function(){
		changeLandingPageLocation();
		{% if adsNearYou|length %}
    		{% set adFavoriteRepository   = fetch_repository('FaAdBundle:AdFavorite') %}
            {% if app.user %}
                {% set userId = app.user.getId() %}
            {% else %}
                {% set userId = app.session.getId() %}
            {% endif %}

            {% set container = fetch_container_instance() %}
            {% set adFavoriteAdIds = adFavoriteRepository.getFavoriteAdByUserId(userId, container) %}
            let map = mapfit.MapView('mapfit', {theme: 'day'});
           	var museums = mapfit.Layer();
           	let myIcon = mapfit.divIcon({className:"", iconUrl: "{{ asset_url('fafrontend/images/map-marker.png') }}", html: '<img class="markerImg" src="{{ asset_url('fafrontend/images/map-marker.png') }}" />'})
           	 var title = '';
           	 
            {% for ad in adsNearYou %}
                {% if attribute(ad, constant('Fa\\Bundle\\AdBundle\\Solr\\AdSolrFieldMapping::LATITUDE')) is defined and attribute(ad, constant('Fa\\Bundle\\AdBundle\\Solr\\AdSolrFieldMapping::LONGITUDE')) is defined %}
                    {% if attribute(ad, constant('Fa\\Bundle\\AdBundle\\Solr\\AdSolrFieldMapping::TITLE')) is defined %}
                        title = '{{ attribute(ad, constant('Fa\\Bundle\\AdBundle\\Solr\\AdSolrFieldMapping::TITLE')) }}'
                    {% else %}
                        title = '{{ad.id}}'
                    {% endif %}

                    var placeInfo = mapfit.PlaceInfo();
                    var moma = mapfit.Marker([parseFloat({{attribute(ad, constant('Fa\\Bundle\\AdBundle\\Solr\\AdSolrFieldMapping::LATITUDE')).0}}), parseFloat({{attribute(ad, constant('Fa\\Bundle\\AdBundle\\Solr\\AdSolrFieldMapping::LONGITUDE')).0}})]);
                    placeInfo.setTitle('');
                    placeInfo.setDescription('');
                    moma.setPlaceInfo(placeInfo);

                    moma.on('click', function () {
              	    	updateContent('{{ad.id}}');
              	     })
                    
                    moma.setIcon(myIcon);
                    museums.add(moma);
            	    map.addMarker(moma);
					
                {% endif %}
            {% endfor %}
                    map.addLayer(museums);
             		map.setCenterWithLayer(museums, 90, 90); 
		{% endif %}
	});
        function addToFavorite(id)
        {
            var route = Routing.generate('ad_add_to_favorite', { 'adId': id });
            route = route.replace(':https','');
            $.ajax({
                type: "POST",
                url : route,
                data : {'redirectUrl': '{{app.request.getUri()}}', type: 'list'},
            })
            .done(function(response) {
                hideAlertMessage();
                if (response.anchorHtml.length) {
                    $('#fav_'+id).html(response.anchorHtml);
                }
                if (response.error.length) {
                    $(decorateMessage(response.error, 'alert')).insertBefore('#listing_'+id);
                }
                if (response.redirectToUrl.length) {
                    window.location.href = response.redirectToUrl;
                }
            });
        }
    
        function removeFromFavorite(id)
        {
            var route = Routing.generate('ad_remove_from_favorite', { 'adId': id });
            route = route.replace(':https','');
            $.ajax({
                type: "POST",
                url : route,
                data : {type: 'list'},
            })
            .done(function(response) {
                hideAlertMessage();
                if (response.anchorHtml.length) {
                    $('#fav_'+id).html(response.anchorHtml);
                }
                if (response.error.length) {
                    $(decorateMessage(response.error, 'alert')).insertBefore('#listing_'+id);
                }
            });
        }
        
        function changeLandingPageLocation() {
            $('#landingpage_search_editable_location_a').click(function(e) {
                $('#landingpage_search_editable_location_a').hide();
                $('#landingpage_search_editable_location_span').hide();
                $('#landingpage_search_location').show();
                if ($.trim($('#fa_landing_page_ads_near_you_search_item__location_autocomplete').val())) {
                    $('#fa_landing_page_ads_near_you_search_item__location_close').show();
                    $('#fa_landing_page_ads_near_you_search_item__location_autocomplete').select();
                }
            });
    
            $('#landingpage_search_location_cancel').click(function(e) {
                $('#landingpage_search_location').hide();
                if (!$.trim($('#fa_landing_page_ads_near_you_search_item__location_autocomplete').val())) {
                    $('#landingpage_search_editable_location_span').html('United Kingdom');
                }
                $('#landingpage_search_editable_location_a').show();
                $('#landingpage_search_editable_location_span').show();
                return false;
            });
            
            $('#landingpage_search_location_ok').click(function(e) {
                return landingpageSearchLocationOk();
            });
        }
    
        function landingpageSearchLocationOk() {
            if ($.trim($('#fa_landing_page_ads_near_you_search_item__location').val())) {
                var searchLocation = $.trim($('#fa_landing_page_ads_near_you_search_item__location').val());
            } else {
                var searchLocation = $.trim($('#fa_landing_page_ads_near_you_search_item__location_autocomplete').val());
            }
            if (searchLocation) {
                $.ajax({
                     type: "post",
                     dataType: "json",
                     url: "{{ path('fa_frontend_ajax_user_location') }}",
                     data: {'location': searchLocation},
                     success: function(data) {
                         if (!$.isEmptyObject(data)) {
                             $('#landingpage_search_editable_location_span').html(data.text);
                             var route = '';
                             if (data.slug && data.slug != 'uk') {
                                route = Routing.generate('landing_page_category_location', { 'category_string': '{{ category}}', 'location': data.slug }, true);
                             } else {
                                route = Routing.generate('landing_page_category', { 'category_string': '{{ category}}' }, true);
                             }
                             if (route) {
                            	route = route.replace(':https','');
                                window.location.href = route;
                             }
                         } else {
                             $('#header_search_editable_location_reveal_modal').foundation('reveal', 'open');
                         }
                         $('#landingpage_search_location').hide();
                         $('#landingpage_search_editable_location_a').show();
                         $('#landingpage_search_editable_location_span').show();
                     }
                 });
            } else {
                document.cookie="location=;expires=Wed; 01 Jan 1970; path=/";
                $('#landingpage_search_editable_location_span').html('United Kingdom');
                $('#landingpage_search_location').hide();
                $('#landingpage_search_editable_location_a').show();
                $('#landingpage_search_editable_location_span').show();

                var rurl = Routing.generate('landing_page_category', { 'category_string': '{{ category}}' }, true );
                rurl = rurl.replace(':https','');
                window.location.href = rurl;
            }
            return false;
        }
        
        function updateContent(adId) {	
            var route = Routing.generate('ad_show_ad_for_infobox', { 'adId': adId });
            route = route.replace(':https','');
            $.ajax({
                type: "GET",
                url : route,
            })
            .done(function(response) {
                if (response.length) {
               	 	var desc = response;
               		$(".mapfit-popup-description").html(desc);
                }
            });
        }
      //]]>
    </script>
    {{ include('FaCoreBundle::jqueryAutoSuggestFieldJs.html.twig', {'field' : '#fa_landing_page_ads_near_you_search_item__location', 'placeHolder': 'Type postal code or town'|trans, 'route' : 'town_ajax_find_town_by_term', 'displayOnlyTown' : 'true'}) }}
{% endblock %}
