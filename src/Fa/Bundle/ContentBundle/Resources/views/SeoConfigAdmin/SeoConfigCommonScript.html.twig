<script type="text/javascript" src="/bundles/faadmin/js/bootstrap.min.js?v=3"> </script>
<script type="text/javascript" src="/bundles/fafrontend/js/vendor/jquery-ui.min.js?v=3"></script>
<link rel="stylesheet" type="text/css" href="/bundles/facontent/css/datatables.min.css"/>
<link rel="stylesheet" type="text/css" href="/bundles/facontent/css/buttons.dataTables.min.css"/>
<script type="text/javascript" src="/bundles/facontent/js/datatables.min.js"></script>
<script type="text/javascript" src="/bundles/facontent/js/buttons.html5.min.js"></script>
<script type="text/javascript" src="/bundles/facontent/js/dataTables.buttons.min.js"></script>
<script>
    $(document).ready(function() {
        {% if app.request.get('tab') %}
            $('a[data-tab=#{{ app.request.get('tab') }}]').click();
        {% endif %}
        $("#ForSaleExclusions").select2({placeholder: "Add Categories"});
        $("#MaxDimRules").select2({placeholder: "Add Max Dim Rules", formatSelection: maxDimTemplate});
        $("#entity-list").select2({placeholder: "Add Entities"});
        $('.bulk-upload-button').click(function () {
            var parent = $(this).parent();
            var inputType = $(this).data('toggle-handle');
            $('#upload-type').val(inputType);
            $('#model-info').html($(this).data('tab'));
            $('#bulk-upload').foundation('reveal', 'open');
        });
        $('#mapping_file').change(function () {
            read_url(this);
        });
        $('#upload').click(function () {
            var uploadType = $('#upload-type').val();
            var url = '';
            if (uploadType == 'redirects') {
                url = "{{path('seo_config_redirects')}}";
            } else if (uploadType == 'unnecessary_odata_params') {
                url = "{{path('seo_config_unnecessary_odata_params')}}";
            } else if (uploadType == 'unnecessary_query_params') {
                url = "{{path('seo_config_unnecessary_params')}}";
            } else if (uploadType == 'region_alias') {
                url = "{{path('seo_config_region_alias')}}";
            } else if (uploadType == 'location_alias') {
                url = "{{path('seo_config_location_alias')}}";
            } else if (uploadType == 'category_alias') {
                url = "{{path('seo_config_category_alias')}}";
            } else if (uploadType == 'all_category_alias') {
                url = "{{path('seo_config_all_category_alias')}}";
            } else if (uploadType == 'meta_robots') {
                url = "{{path('seo_config_meta_robots')}}";
            } else if (uploadType == 'filter_alias') {
                url = "{{path('seo_config_filter_alias')}}";
            } else if (uploadType == 'url_right_trim') {
                url = "{{path('seo_config_url_rght_trim')}}";
            }
            if (url != '') {
                bulkUpload(url);
            }
        });
    });
    $(document).on('click', '.datatable-action-list .fa.edit', function () {
        editRow($(this).parents('tr').first())
    });
    $(document).on('click', '.datatable-action-list .fa.undo', function () {
        revertRow($(this).parents('tr').first())
    });
    $(document).on('click', '.datatable-action-list .fa.delete', function () {
        deleteRow($(this).parents('tr').first())
    });
    $(document).on('click', '.datatable-action-list .fa.save', function () {
        saveRow($(this).parents('tr').first())
    });
    function sortingHelper (e, tr) {
        var originals = tr.children();
        var helper = tr.clone();
        helper.children().each(function(index) {
            $(this).width(originals.eq(index).width())
        });

        return helper;
    }
    function renumber_table(table_id) {
        $(table_id + " tr").each(function() {
            var count = $(this).parent().children().index($(this)) + 1;
            $(this).find('.priority').html(count);
            $(this).attr('order', count);
        });
    }
    window.setTimeout(function () {
        addNewItemEvent('ForSaleExclusions');
        addNewItemEvent('MaxDimRules');
        addNewItemEvent('entity-list');

        $("select[data-keep-order]").each(function(){
            if($(this).attr('data-reorder')){
                $(this).on('select2:select', function(e){
                    var elm = e.params.data.element;
                    $elm = $(elm);
                    $t = $(this);
                    $t.append($elm);
                    $t.trigger('change.select2');
                });
            }
            //$this.select2();
        });

    }, 500);
    $('ul.tab-menu>li').click(function (event) {
        toggleTab(this)
    });
    $('#unnecessary_odata_params').DataTable( {
        ajax: '{{ path('admin_seo_config_datatable', {'config': 'unnecessary_odata_params'}) }}',
        columns: [
            { data: 'param' },
            { data: 'action' },
        ],
        "deferRender": true,
        // "processing": true,
        // "serverSide": true,
        dom: 'Bfrtip',
        buttons: [
            'excelHtml5',
            'csvHtml5',
            'pdfHtml5',
            'pageLength',
        ]
    } );
    $('#unnecessary_query_params').DataTable( {
        ajax: '{{ path('admin_seo_config_datatable', {'config': 'unnecessary_query_params'}) }}',
        columns: [
            { data: 'param' },
            { data: 'action' },
        ],
        "deferRender": true,
        // "processing": true,
        // "serverSide": true,
        dom: 'Bfrtip',
        buttons: [
            'excelHtml5',
            'csvHtml5',
            'pdfHtml5',
            'pageLength',
        ]
    } );
    $('#region_alias').DataTable( {
        ajax: '{{ path('admin_seo_config_datatable', {'config': 'region_alias'}) }}',
        columns: [
            { data: 'legacy' },
            { data: 'new' },
            { data: 'action' },
        ],
        "deferRender": true,
        // "processing": true,
        // "serverSide": true,
        dom: 'Bfrtip',
        buttons: [
            'excelHtml5',
            'csvHtml5',
            'pdfHtml5',
            'pageLength',
        ]
    } );
    $('#location_alias').DataTable( {
        ajax: '{{ path('admin_seo_config_datatable', {'config': 'location_alias'}) }}',
        columns: [
            { data: 'legacy' },
            { data: 'new' },
            { data: 'action' },
        ],
        "deferRender": true,
        // "processing": true,
        // "serverSide": true,
        dom: 'Bfrtip',
        buttons: [
            'excelHtml5',
            'csvHtml5',
            'pdfHtml5',
            'pageLength',
        ]
    } );
    $('#filter_alias').DataTable( {
        ajax: '{{ path('admin_seo_config_datatable', {'config': 'filter_alias'}) }}',
        columns: [
            { data: 'legacy' },
            { data: 'new' },
            { data: 'action' },
        ],
        "deferRender": true,
        // "processing": true,
        // "serverSide": true,
        dom: 'Bfrtip',
        buttons: [
            'excelHtml5',
            'csvHtml5',
            'pdfHtml5',
            'pageLength',
        ]
    } );
    $('#category_alias').DataTable( {
        ajax: '{{ path('admin_seo_config_datatable', {'config': 'category_alias'}) }}',
        columns: [
            { data: 'legacy' },
            { data: 'new' },
            { data: 'action' },
        ],
        "deferRender": true,
        // "processing": true,
        // "serverSide": true,
        dom: 'Bfrtip',
        buttons: [
            'excelHtml5',
            'csvHtml5',
            'pdfHtml5',
            'pageLength',
        ]
    } );
    $('#all_category_alias').DataTable( {
        ajax: '{{ path('admin_seo_config_datatable', {'config': 'all_category_alias'}) }}',
        columns: [
            { data: 'legacy' },
            { data: 'new' },
            { data: 'action' },
        ],
        "deferRender": true,
        // "processing": true,
        // "serverSide": true,
        dom: 'Bfrtip',
        buttons: [
            'excelHtml5',
            'csvHtml5',
            'pdfHtml5',
            'pageLength',
        ]
    } );
    $('#meta_robots').DataTable( {
        ajax: '{{ path('admin_seo_config_datatable', {'config': 'meta_robots'}) }}',
        columns: [
            { data: 'meta' },
            { data: 'url' },
            { data: 'action' },
        ],
        "deferRender": true,
        // "processing": true,
        // "serverSide": true,
        dom: 'Bfrtip',
        buttons: [
            'excelHtml5',
            'csvHtml5',
            'pdfHtml5',
            'pageLength',
        ]
    } );
    $('#url_right_trim').DataTable( {
        ajax: '{{ path('admin_seo_config_datatable', {'config': 'url_right_trim'}) }}',
        columns: [
            { data: 'param' },
            { data: 'action' },
        ],
        "deferRender": true,
        // "processing": true,
        // "serverSide": true,
        dom: 'Bfrtip',
        buttons: [
            'excelHtml5',
            'csvHtml5',
            'pdfHtml5',
            'pageLength',
        ]
    } );
    enableToggler();
    loadTogglers();
    function revertRow(row) {
        $.each($(row).find('td'), function (key, td) {
            var settings = $(td).find('span.datatable-action-list');
            if (settings.length) {
                $(settings).find('.save').addClass('hidden');
                $(settings).find('.undo').addClass('hidden');
                $(settings).find('.edit').removeClass('hidden');
            } else {
                var text = $(td).find('input').data('value');
                $(td).html(text)
            }
        });
    }
    function deleteRow(row) {
        $(row).addClass('deleted');
        var rule = $(row).find('.datatable-action-list .data').first().html();
        var table = $(row).parents('table').first();
        var config = $(table).data('rule');

        blockPage('Removing rule');

        $.ajax({
            type: "POST",
            url: "{{path('admin_seo_config_datatable_delete')}}",
            data: {
                config: config,
                rule: rule
            }
        })
            .done(function(response) {
                unblockPage();

                if (response.changed) {
                    $(row).remove();
                    $(table).DataTable().ajax.reload()
                } else {
                    alert('Rule not deleted')
                }

            });

    }
    function saveRow(row) {
        var ruleFrom = $(row).find('.datatable-action-list .data').first().html();
        var table = $(row).parents('table').first();
        var config = $(table).data('rule');

        var ruleTo = [];
        $.each($(row).find('input:not(.hidden)'), function (key, input) {
            ruleTo.push($(input).val());
        });

        ruleTo = ruleTo.join(':');

        console.log(ruleFrom, ruleTo);
        blockPage('Saving rule');

        $.ajax({
            type: "POST",
            url: "{{path('admin_seo_config_datatable_edit')}}",
            data: {
                config: config,
                rule_from: ruleFrom,
                rule_to: ruleTo
            }
        })
            .done(function(response) {
                unblockPage();

                if (response.changed) {
                    $(table).DataTable().ajax.reload()
                } else {
                    alert('Rule not Saved')
                }

            });

    }

    function read_url(input) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#mapping_file').data('src', e.target.result);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
    function bulkUpload(url) {

        blockPage();
        var dataInfo = getBulkData();
        var uploadType = $('#upload-type').val();

        $.ajax({
            type: "POST",
            url: url,
            data: {
                data: dataInfo.data,
                format: dataInfo.format,
                type: 'bulk'
            }
        })
            .done(function(response) {
                unblockPage();

                if(response.status) {
                    var tabId = $('[data-toggle-handle='+ uploadType +']').parents('.tab').attr('id');
                    window.location = window.location.origin + window.location.pathname + '?tab=' + tabId;
                }
            });
    }
    function getBulkData() {
        var fileData = $('#mapping_file').data('src');
        var bulkText = $('#bulk-text').val();

        if (fileData) {
            return {data: fileData, format: 'file'}
        }

        if (bulkText) {
            return {data: bulkText.split('\n'), format: 'text'}
        }

        return {data: [], format: ''}
    }
    function loadTogglers() {
        {% for type,config in configs %}
        toggleTogglerHtml($(".status-toggle [data-toggle-handle='{{ type }}']"), {{ config['status'] ? 1 : 0 }});
        {% endfor %}
    }
    function enableToggler() {
        $('[data-toggle-handle]').click(function () {
            toggleTogglerHtml(this, !$(this).hasClass('on'));
            updateTogglerStatus(this);
        });
    }
    function updateTogglerStatus(elt) {
        blockPage();

        $.ajax({
            type: "POST",
            url: "{{path('seo_config_status_toggle')}}",
            data: {
                'type': $(elt).data('toggle-handle'),
                'status': $(elt).hasClass('on') ? 1 : 0
            }
        })
            .done(function(response) {
                unblockPage();
                toggleTogglerHtml(elt, response.status);
            });
    }
    function toggleTogglerHtml(elt, status) {
        if (status) {
            $(elt).removeClass('off').addClass('on').html($(elt).data('on'));
        } else {
            $(elt).removeClass('on').addClass('off').html($(elt).data('off'));
        }
    }
    /**
     * Loads the given select2 with the data.
     * If clear flag is set, it will clear the existing options.
     * */
    function loadSelect2Data(selector, data, clear) {

        var select = $("" + selector);
        var selected_options = [];

        if (clear) {
            $(select).html('');
        }

        $.each(data, function (index, dataObject) {

            var jsonObject = {};
            if (typeof dataObject.id == 'undefined') {
                jsonObject = {id: dataObject, text: dataObject};
            } else {
                jsonObject = dataObject;
            }

            var option = $('<option>').attr({'value': jsonObject.id}).html(jsonObject.text);
            $(select).append(option);

            selected_options.push({id: jsonObject.id, text: jsonObject.text});
        });

        $(select).select2();
        $(select).select2('data', selected_options);
    }
    function toggleTab(elt) {
        var href = $(elt).find('a[data-tab]').attr('data-tab');
        $('.tabs-content>.tab').removeClass('active');
        $(''+href).addClass('active');

        $('.tab-menu>li').removeClass('active');
        $(elt).addClass('active');
    }
    function addNewItemEvent(id) {

        var select = $('#'+id);
        var prediction = $(select).data('prediction');
        var separator = $(select).data('separator');
        var conditions = $(select).data('conditions');

        $(select).parent().find('.select2-search-field input').unbind('keyup');
        $(select).parent().find('.select2-search-field input').keyup(function (event) {

            var new_item_value = $(this).val();

            if (!new_item_value) {
                return;
            }

            $(select).find('.new-item').remove();

            var option = $('<option>').attr({'value': new_item_value}).html(new_item_value).addClass('new-item');
            $(select).append(option);

            if (prediction != 'off') {

                if (separator != '' && new_item_value.indexOf(separator) > 0) {
                    var words = new_item_value.split(separator);
                    var keyword = (words[1]).trim();
                    if (keyword != '') {
                        suggest($(select).data('type'), keyword, id, words[0], conditions)
                    }
                }

                if (separator == '' && new_item_value != '') {
                    suggest($(select).data('type'), new_item_value, id, '', conditions)
                }
            }

            if (event.keyCode == 13) {
                addNewElement(id, new_item_value);
                $(select).parent().find('.select2-container').removeClass('saved').addClass('unsaved')
            }
        });

        $(select).parent().find('.select2-container').addClass('change-notify saved');
        $(select).change(function () {
            $(select).parent().find('.select2-container').removeClass('saved').addClass('unsaved')
        });
    }
    function suggest(type, keyword, id, alias, conditions) {

        var is_more_filter = conditions == 'id-slug-pair';

        $.ajax({
            type: "POST",
            url: "{{path('seo_config_suggest')}}",
            data: {
                'type': type,
                'keyword': keyword,
                'conditions': conditions
            }
        })
            .done(function(suggestions) {
                unblockPage();

                var select = $('#'+id);
                var separator = $(select).data('separator');

                $(select).find('.suggestion-item').remove();

                $.each(suggestions, function (index, item) {
                    var option;
                    if (is_more_filter) {
                        option = $('<option>').attr({'value': index}).html(alias + separator + item).addClass('suggestion-item');
                    } else  {
                        option = $('<option>').attr({'value': alias + separator + item}).html(alias + separator + item).addClass('suggestion-item');
                    }

                    $(select).append(option);
                });
            });
    }
    function addNewElement(id, item) {
        var select = $('#'+id);
        var current_data = $(select).select2('data');
        current_data.push({id: item, text: item});
        $(select).select2('data', current_data);
    }
    function update_UnnecessaryQueryParams() {

        var select = $('#UnnecessaryQueryParams');
        blockPage();

        $.ajax({
            type: "POST",
            url: "{{path('seo_config_unnecessary_params')}}",
            data: {
                "data": getData($(select).select2('data'))
            }
        })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
    }
    function update_UnnecessaryODataParams() {

        var select = $('#UnnecessaryODataParams');
        blockPage();

        $.ajax({
            type: "POST",
            url: "{{path('seo_config_unnecessary_odata_params')}}",
            data: {
                "data": getData($(select).select2('data'))
            }
        })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
    }
    function update_CategoryAlias() {

        var select = $('#CategoryAlias');
        blockPage();

        $.ajax({
            type: "POST",
            url: "{{path('seo_config_category_alias')}}",
            data: {
                "data": getData($(select).select2('data'))
            }
        })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
    }
    function update_FilterAlias() {

        var select = $('#FilterAlias');
        blockPage();

        $.ajax({
            type: "POST",
            url: "{{path('seo_config_filter_alias')}}",
            data: {
                "data": getData($(select).select2('data'))
            }
        })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
    }
    function update_RegionAlias() {

        var select = $('#RegionAlias');
        blockPage();

        $.ajax({
            type: "POST",
            url: "{{path('seo_config_region_alias')}}",
            data: {
                "data": getData($(select).select2('data'))
            }
        })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
    }
    function update_LocationAlias() {

        var select = $('#LocationAlias');
        blockPage();

        $.ajax({
            type: "POST",
            url: "{{path('seo_config_location_alias')}}",
            data: {
                "data": getData($(select).select2('data'))
            }
        })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
    }
    function update_AllCategoryAlias() {

        var select = $('#SubCategoryAlias');
        blockPage();

        $.ajax({
            type: "POST",
            url: "{{path('seo_config_all_category_alias')}}",
            data: {
                "data": getData($(select).select2('data'))
            }
        })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
    }
    function update_ForSaleExclusions() {
        var select = $('#ForSaleExclusions');
        blockPage();
        $.ajax({
            type: "POST",
            url: "{{path('seo_config_for_sale_exclusions')}}",
            data: {
                "data": getData($(select).select2('data'))
            }
        })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
    }
    function update_MetaTags() {
        var select = $('#MetaTags');
        blockPage();
        $.ajax({
            type: "POST",
            url: "{{path('seo_config_meta_robots')}}",
            data: {
                "data": getData($(select).select2('data'))
            }
        })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
    }
    function update_MaxDimRules() {
        var select = $('#MaxDimRules');
        blockPage();
        $.ajax({
            type: "POST",
            url: "{{path('seo_config_max_dim_rules')}}",
            data: {
                "data": getData($(select).select2('data'))
            }
        })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
    }
    function sitemapStat() {
        blockPage();
        $.ajax({
            type: "POST",
            url: "{{path('seo_tool_sitemap_stat')}}",
            data: {}
        })
            .done(function(response) {
                unblockPage();
                var html = '';
                $.each(response.stat, function (key, item) {
                    html += key + ' : ' + item + '<br>'
                });
                $('#sitemap-status').html(html);
                $('#sitemap-files').html(response.files)

            });
    }
    function sitemapAction(type) {

        blockPage();

        $.ajax({
            type: "POST",
            url: "{{path('seo_tool_sitemap_update')}}",
            data: {
                'type': type
            }
        })
            .done(function(response) {
                unblockPage();
                sitemapStat();
            });
    }
    function getData(data) {
        var items = [];

        $.each(data, function (index, dataObject) {
            items.push(dataObject.text);
        });

        return items;
    }
    function categoryAliasTemplate(data) {
        var split = (data.text).split(':');
        return split.join(' <span style="color: green;">>></span> ');
    }
    function maxDimTemplate(data) {
        var split = (data.text).split('+');
        var out = [];

        $.each(split, function (key, value) {
            var detail = value.split(':');
            out.push(detail[0] + ' ' + detail[1]);
        });

        return out.join(' <span style="color: green;">+</span> ');
    }

</script>