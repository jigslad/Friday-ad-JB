{% extends 'FaAdminBundle::layout.html.twig' %}
{% set queryParams = app.request.query.all %}

{% block content %}
<div class="seo_config_div">
    {{ include('FaAdminBundle:Default:listSearchHeading.html.twig') }}

    {% set fullData = (shortList is defined and shortList) ? false : true %}

    <div class="row">
        <div class="columns">
            <div class="outline">

                {# Tab Control #}
                <ul class="tab-menu clearfix">
                    <li class="active">
                        <a href="javascript:" data-tab="#general">General</a>
                    </li>                    
                    <li>
                        <a href="javascript:" data-tab="#MetaTagsTab">Meta Tags</a>
                    </li>
                    <li>
                        <a href="javascript:" data-tab="#MaxDimRuleTab">Max Dims</a>
                    </li>
                    <li>
                        <a href="javascript:" data-tab="#RedirectTab">Redirects</a>
                    </li>
                    <li>
                        <a href="javascript:" data-tab="#CrawlTab">Crawl Settings</a>
                    </li>
                    
                    <li>
                        <a href="javascript:" data-tab="#LHSFilterTab">LHS Filters</a>
                    </li>
                </ul>
                {#<ul class="tab-menu clearfix">
                    <li>
                        <a href="javascript:" data-tab="#SitemapTab">Sitemap</a>
                    </li>
                    <li>
                        <a href="javascript:" data-tab="#ExclusionsTab">Exclusions</a>
                    </li>
                    <li>
                        <a href="javascript:" data-tab="#FiltersTab">Filters</a>
                    </li>
                    <li>
                        <a href="javascript:" data-tab="#LegacyLocationRegionTab">Location & Regions</a>
                    </li>
                    <li>
                        <a href="javascript:" data-tab="#LegacyCategoryTab">Categories</a>
                    </li>
                </ul>#}

                {# Tab Content #}
                <div class="tabs-content">

                    <div id="general" class="tab active">

                        <div id="UnnecessaryQueryParamsDiv">
                            <b>Add Unnecessary Query Params:</b>
                            <br>
                            <i>Eg URL: /P/all-adverts-for-sale/something?q=name&search=time </i>
                            <br>
                            <p style="padding-left: 10px">
                                OData: 'P', 'all-adverts-for-sale', 'something'
                                <br>
                                Query Param: 'q', 'search'
                            </p>
                            <div>
                                <div class="status-toggle">
                                    <button type="button" data-on="Enabled" data-off="Disabled" class="">-</button>
                                </div>
                                <div class="select" style="margin-top: 52px;">
                                    <b>Query Params</b>
                                    <br>
                                    <table id="unnecessary_query_params" style="width: 100%" data-rule="unnecessary_query_params" class="dataTable display">
                                        <thead>
                                        <tr>
                                            <th>Parameter</th>
                                            <th class="action">Action</th>
                                        </tr>
                                        </thead>
                                    </table>
                                </div>

                                <button class="bulk-upload-button" data-toggle-handle="unnecessary_query_params" data-tab="Unnecessary Query Params">Bulk Upload</button>
                            </div>

                            <div>
                                <div class="select" style="margin-top: 52px;">
                                    <b>OData Params</b>
                                    <br>
                                    <table id="unnecessary_odata_params" style="width: 100%" data-rule="unnecessary_odata_params" class="dataTable display">
                                        <thead>
                                        <tr>
                                            <th>Parameter</th>
                                            <th class="action">Action</th>
                                        </tr>
                                        </thead>
                                    </table>
                                </div>

                                <button class="bulk-upload-button" data-toggle-handle="unnecessary_odata_params" data-tab="Unnecessary OData Params">Bulk Upload</button>
                            </div>

                        </div>
                    </div>

                    {#<div id="FiltersTab" class="tab">

                        <div id="FilterAliasDiv" style="margin: 65px 5px">
                            <b>Add Filter Aliases</b>
                            <i class="fi-info" title="For added values, URL with Legacy_Filter are redirected to its corresponding New_Filter URL"></i>
                            <br>
                            <span>Data Format: <i>&lt;Legacy_Filter&gt;:&lt;New_Filter&gt;</i></span>
                            <br>
                            <i>Note: Do not add Main or Sub Category as Filter</i>
                            <div class="status-toggle">
                                <button type="button" data-on="Enabled" data-off="Disabled" data-toggle-handle="filter_alias" class="">-</button>
                            </div>
                            <div class="select">
                                <table id="filter_alias" style="width: 100%" data-rule="filter_alias" class="dataTable display">
                                    <thead>
                                    <tr>
                                        <th>Legacy</th>
                                        <th>New</th>
                                        <th class="action">Action</th>
                                    </tr>
                                    </thead>
                                </table>
                            </div>

                            <button class="bulk-upload-button" data-toggle-handle="filter_alias" data-tab="Filter Aliases">Bulk Upload</button>
                        </div>

                    </div>

                    <div id="LegacyLocationRegionTab" class="tab">

                        <div id="RegionAliasDiv" style="margin: 65px 5px">
                            <b>Add Region Aliases</b>
                            <i class="fi-info" title="For added values, URL with Legacy_Region are redirected to its corresponding New_Region URL"></i>
                            <br>
                            <span>Data Format: <i>&lt;Legacy_Region&gt;:&lt;New_Region&gt;</i></span>
                            <div class="status-toggle">
                                <button type="button" data-on="Enabled" data-off="Disabled" class="">-</button>
                            </div>
                            <div class="select">
                                <table id="region_alias" style="width: 100%" data-rule="region_alias" class="dataTable display">
                                    <thead>
                                    <tr>
                                        <th>Legacy</th>
                                        <th>New</th>
                                        <th class="action">Action</th>
                                    </tr>
                                    </thead>
                                </table>
                            </div>

                            <button class="bulk-upload-button" data-toggle-handle="region_alias" data-tab="Regions">Bulk Upload</button>
                        </div>

                        <div id="LocationAliasDiv" style="margin: 65px 5px">
                            <b>Add Location Aliases</b>
                            <i class="fi-info" title="For added values, URL with Legacy_Location are redirected to its corresponding New_Location URL"></i>
                            <br>
                            <span>Data Format: <i>&lt;Legacy_Location&gt;:&lt;New_Location&gt;</i></span>
                            <div class="status-toggle">
                                <button type="button" data-on="Enabled" data-off="Disabled" data-toggle-handle="location_alias" class="">-</button>
                            </div>
                            <div class="select">
                                <table id="location_alias" style="width: 100%" data-rule="location_alias" class="dataTable display">
                                    <thead>
                                    <tr>
                                        <th>Legacy</th>
                                        <th>New</th>
                                        <th class="action">Action</th>
                                    </tr>
                                    </thead>
                                </table>
                            </div>

                            <button class="bulk-upload-button" data-toggle-handle="location_alias" data-tab="Locations">Bulk Upload</button>
                        </div>

                    </div>

                    <div id="LegacyCategoryTab" class="tab">

                        <div id="MainCategoryAliasDiv" style="margin: 65px 5px">
                            <b>Add Main Category Aliases</b>
                            <i class="fi-info" title="For added values, URL with Legacy_Category are redirected to its corresponding New_Category URL"></i>
                            <br>
                            <span>Data Format: <i>&lt;Legacy_Category&gt;:&lt;New_Category&gt;</i></span>
                            <div class="status-toggle">
                                <button type="button" data-on="Enabled" data-off="Disabled" data-toggle-handle="category_alias" class="">-</button>
                            </div>
                            <div class="select">
                                <table id="category_alias" style="width: 100%" data-rule="category_alias" class="dataTable display">
                                    <thead>
                                    <tr>
                                        <th>Legacy</th>
                                        <th>New</th>
                                        <th class="action">Action</th>
                                    </tr>
                                    </thead>
                                </table>
                            </div>

                            <button class="bulk-upload-button" data-toggle-handle="category_alias" data-tab="Categories">Bulk Upload</button>
                        </div>

                        <div id="CategoryAliasDiv" style="margin: 65px 5px">
                            <b>Add Sub Category Aliases</b>
                            <i class="fi-info" title="For added values, URL with Legacy_Category are redirected to its corresponding New_Category URL"></i>
                            <br>
                            <i>Note: Add Categories Other than Main categories</i>
                            <br>
                            <span>Data Format: <i>&lt;Legacy_Category&gt;:&lt;New_Category&gt;</i></span>
                            <div class="status-toggle">
                                <button type="button" data-on="Enabled" data-off="Disabled" data-toggle-handle="all_category_alias" class="">-</button>
                            </div>
                            <div class="select">
                                <table id="all_category_alias" style="width: 100%" data-rule="all_category_alias" class="dataTable display">
                                    <thead>
                                    <tr>
                                        <th>Legacy</th>
                                        <th>New</th>
                                        <th class="action">Action</th>
                                    </tr>
                                    </thead>
                                </table>
                            </div>

                            <button class="bulk-upload-button" data-toggle-handle="all_category_alias" data-tab="Sub Categories">Bulk Upload</button>

                        </div>

                    </div>

                    <div id="ExclusionsTab" class="tab">

                        <div id="ExclusionsDiv" style="margin: 65px 5px">
                            <b>Add Categories for 'for-sale' exclusions</b>
                            <i class="fi-info" title="For added Categories, the URL will not be generated with postfix - 'for-sale'"></i>
                            <br>
                            <i>Note: Add only Top Level categories</i>
                            <br>
                            <div class="status-toggle">
                                <button type="button" data-on="Enabled" data-off="Disabled" data-toggle-handle="for_sale_exclusion" class="">-</button>
                            </div>
                            <div class="select">
                                <select id="ForSaleExclusions" multiple class="multi-select" data-type="category" data-separator="" data-conditions="lvl=1">
                                </select>
                            </div>

                            <button type="button" onclick="update_ForSaleExclusions();" style="float: right; width: 300px;">Update For Sale Exclusions</button>
                        </div>

                    </div>#}

                    <div id="MetaTagsTab" class="tab">

                        <div id="MetaTagsDiv" style="margin: 65px 5px">
                            <b>Add Meta Robots Tags Info</b>
                            <i class="fi-info" title="For url matching added 'url-part', will have given 'options'"></i>
                            <br>
                            <br>
                            <i>
                                Syntax:
                                    &lt;option-1&gt;[,&lt;option-2&gt;]:&lt;url-part&gt;
                                <br>
                                <br>
                                Eg:
                                <br>
                                noindex,follow:list-all-adverts
                                <br>
                                index,follow:list-all-adverts/cats
                            </i>
                            <br>

                            <div class="status-toggle">
                                <button type="button" data-on="Enabled" data-off="Disabled" data-toggle-handle="meta_robots" class="">-</button>
                            </div>
                            <div class="select">
                                <table id="meta_robots" style="width: 100%" data-rule="meta_robots" class="dataTable display">
                                    <thead>
                                    <tr>
                                        <th>Meta Tags</th>
                                        <th>Url Segment</th>
                                        <th class="action">Action</th>
                                    </tr>
                                    </thead>
                                </table>
                            </div>

                            <button class="bulk-upload-button" data-toggle-handle="meta_robots" data-tab="Meta Tags">Bulk Upload</button>
                        </div>

                    </div>

                    <div id="MaxDimRuleTab" class="tab">

                        <div id="MaxDimRuleDiv" style="margin: 65px 5px">
                            <b>Add Max Dim Rules</b>
                            <br>
                            <i>For Internal Urls exceeding the below 'conditions' will not have href tags.</i>
                            <br>
                            <div>
                                Available Keywords: location, category, filter
                                <br><br>Please add all variables at all times. Ex: 1:location+0:filter+2:category
                            </div>
                            <i>Ex: 1:location+1:filter+1:category</i>
                            <br>
                            <i>Understanding a URL:&nbsp;&nbsp; "/uk/kittens-for-sale/british-shorthairs/male/"  - Has 1 Location, 2 Categories & 1 filter</i>
                            <div class="status-toggle">
                                <button type="button" data-on="Enabled" data-off="Disabled" data-toggle-handle="max_dim_rules" class="">-</button>
                            </div>
                            <br> <br>
                            <div class="select">
                                <select id="MaxDimRules" multiple class="multi-select" data-prediction="off">
                                </select>
                            </div>

                            <button type="button" onclick="update_MaxDimRules();" style="float: right; width: 300px;">Update Max Dim Rules</button>
                        </div>

                    </div>

                    <div id="RedirectTab" class="tab">

                        <div id="RedirectDiv">
                            <b>Add Redirects</b>
                            <i class="fi-info" title="Added URLs will be redirects to corresponding URL"></i>
                            <br>
                            <i>Eg: &lt;from_url_segment&gt;:&lt;to_url_segment&gt;[:&lt;replace_type&gt;]</i>
                            <br>
                            <i>&lt;replace_type&gt; can be 'full' or 'partial'. Default value will be 'partial'</i>
                            <div style="font-size: 15px; font-style: oblique; margin-top: 10px;">
                                <div>article:list-all-adverts >> will convert &lt;domain&gt;/article_types?param=1 to &lt;domain&gt;/list-all-adverts_types?param=1</div>
                                <div>article:list-all-adverts:full >> will convert &lt;domain&gt;/article_types?param=1 to &lt;domain&gt;/list-all-adverts</div>
                            </div>
                            <div>
                                Click <a href="{{ path('admin_validate_redirects_view') }}" target="_blank">here</a> to upload & check the redirect status.
                            </div>
                            <div class="status-toggle">
                                <button type="button" data-on="Enabled" data-off="Disabled" data-toggle-handle="redirects" class="">-</button>
                            </div>
                            <div class="select">
                                <table id="redirects" style="width: 100%" data-rule="redirects" class="dataTable display">
                                    <thead>
                                        <tr>
                                            <th>From</th>
                                            <th>To</th>
                                            <th>Type</th>
                                            <th class="action">Action</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>

                            <button class="bulk-upload-button" data-toggle-handle="redirects" data-tab="Redirects">Bulk Upload</button>

                            <div class="select">
                                <table id="url_right_trim" style="width: 100%" data-rule="url_right_trim" class="dataTable display">
                                    <thead>
                                    <tr>
                                        <th>Url Segment</th>
                                        <th class="action">Action</th>
                                    </tr>
                                    </thead>
                                </table>
                            </div>

                            <button class="bulk-upload-button" data-toggle-handle="url_right_trim">Bulk Upload</button>
                        </div>
                    </div>

                    {#<div id="SitemapTab" class="tab">

                        <div id="SitemapDiv">
                            <b>Sitemap</b>
                            <i class="fi-info" title="Gives sitemap info"></i>
                            <br>
                            <a href="{{ path('sitemap_path', {'file': 'sitemap_index'}) }}" style="float: right;">Current Files</a>
                            <br>
                            <label for="sitemap-status">Current Status</label>
                            <br>
                            <code id="sitemap-status" style="font-size: 12px">Not Running</code>
                            <br><br>
                            <code id="sitemap-files" style="font-size: 12px">No Files</code>

                            <br><br><br><br>
                            <button type="button" onclick="sitemapStat();" style="float: right; width: 155px;">Refresh Stat</button>
                            <button type="button" onclick="sitemapAction('restart');" style="float: right; width: 155px; margin-right: 5px">Restart</button>
                            <button type="button" onclick="sitemapAction('resume');" style="float: right; width: 155px; margin-right: 5px">Resume</button>
                        </div>
                    </div>#}

                    <div id="CrawlTab" class="tab">

                        <div id="CrawlDiv">
                            <b>Sitemap</b>
                            <i class="fi-info" title="Configure the combination of category/subcategory & dimensions for which the url should not be crawlable."></i>
                            <br>
                            <i>Configure the combination of category/subcategory & dimensions for which the url should not be crawlable.</i>
                            <br><br>

                            <ol class="crawl-settings-wrapper">

                                <li class="crawl-settings-clone">
                                    <div class="category-dimension-types">
                                        <select name="main-sub-category">
                                            <option value="">Select Category/Sub Category</option>
                                            {% for categoryGroup in categories %}
                                                {% if categoryGroup['children'] is defined %}
                                                    <optgroup label="{{ categoryGroup['parent']['name'] }}">
                                                        {% for children in categoryGroup['children'] %}
                                                            <option value="{{ children['id'] }}">{{ children['name'] }}</option>
                                                        {% endfor %}
                                                    </optgroup>
                                                {% else %}
                                                    <optgroup label="{{ categoryGroup['parent']['name'] }}">
                                                        <option value="{{ categoryGroup['parent']['id'] }}">{{ categoryGroup['parent']['name'] }}</option>
                                                    </optgroup>
                                                {% endif %}
                                            {% endfor %}
                                        </select>
                                        <select name="dimensions" multiple style="margin-left: 70px">
                                            <option value="">Select Dimension</option>
                                            {% for dimension in dimensions %}
                                                <option value="{{ dimension['id'] }}">{{ dimension['name'] }}</option>
                                            {% endfor %}
                                        </select>
                                    </div>
                                    <div class="region-types">
                                        <input type="checkbox" name="region" id="region-select">
                                        <label for="region-select">Region</label>

                                        <input type="checkbox" name="county" id="county-select">
                                        <label for="county-select">County</label>

                                        <input type="checkbox" name="town" id="town-select">
                                        <label for="town-select">Town</label>

                                        <section>
                                            <span><i class="fa fi-trash remove" style="color: red"></i></span>
                                            <span><i class="fa fi-plus add-more" style="color: green"></i></span>
                                        </section>
                                    </div>
                                </li>

                                {% if configs['crawl_config']['data'] is defined and configs['crawl_config']['data'] %}
                                    {% for crawlSetting in configs['crawl_config']['data'] %}
                                        <li class="crawl-settings">
                                            <div class="category-dimension-types">
                                                <select name="main-sub-category">
                                                    <option value="">Select Category/Sub Category</option>
                                                    {% for categoryGroup in categories %}
                                                        {% if categoryGroup['children'] is defined %}
                                                            <optgroup label="{{ categoryGroup['parent']['name'] }}">

                                                                {% set selected = categoryGroup['parent']['id'] == crawlSetting['category'] ? 'selected' : '' %}
                                                                <option value="{{ categoryGroup['parent']['id'] }}" {{ selected }}>{{ categoryGroup['parent']['name'] }}</option>
                                                                {% for children in categoryGroup['children'] %}
                                                                    {% set selected = children['id'] == crawlSetting['category'] ? 'selected' : '' %}
                                                                    <option value="{{ children['id'] }}" {{ selected }}>{{ children['name'] }}</option>
                                                                {% endfor %}
                                                            </optgroup>
                                                        {% else %}
                                                            {% set selected = categoryGroup['parent']['id'] == crawlSetting['category'] ? 'selected' : '' %}
                                                            <optgroup label="{{ categoryGroup['parent']['name'] }}">
                                                                <option value="{{ categoryGroup['parent']['id'] }}" {{ selected }}>{{ categoryGroup['parent']['name'] }}</option>
                                                            </optgroup>
                                                        {% endif %}
                                                    {% endfor %}
                                                </select>
                                                <select name="dimensions" multiple style="margin-left: 70px">
                                                    <option value="">Select Dimension</option>
                                                    {% for dimension in dimensions %}
                                                        {% set selected = dimension['id'] in crawlSetting['dimension'] ? 'selected' : '' %}
                                                        <option value="{{ dimension['id'] }}" {{ selected }}>{{ dimension['name'] }}</option>
                                                    {% endfor %}
                                                </select>
                                            </div>
                                            <div class="region-types">
                                                {% set checked = crawlSetting['region'] ? 'checked' : '' %}
                                                <input type="checkbox" name="region" id="region-select" {{ checked }}>
                                                <label for="region-select">Region</label>

                                                {% set checked = crawlSetting['county'] ? 'checked' : '' %}
                                                <input type="checkbox" name="county" id="county-select" {{ checked }}>
                                                <label for="county-select">County</label>

                                                {% set checked = crawlSetting['town'] ? 'checked' : '' %}
                                                <input type="checkbox" name="town" id="town-select" {{ checked }}>
                                                <label for="town-select">Town</label>

                                                <section>
                                                    <span><i class="fa fi-trash remove" style="color: red"></i></span>
                                                    <span><i class="fa fi-plus add-more" style="color: green"></i></span>
                                                </section>
                                            </div>
                                        </li>
                                    {% endfor %}
                                {% else %}
                                    <li class="crawl-settings">
                                        <div class="category-dimension-types">
                                            <select name="main-sub-category">
                                                <option value="">Select Category/Sub Category</option>
                                                {% for categoryGroup in categories %}
                                                    {% if categoryGroup['children'] is defined %}
                                                        <optgroup label="{{ categoryGroup['parent']['name'] }}">
                                                            <option value="{{ categoryGroup['parent']['id'] }}">{{ categoryGroup['parent']['name'] }}</option>
                                                            {% for children in categoryGroup['children'] %}
                                                                <option value="{{ children['id'] }}">{{ children['name'] }}</option>
                                                            {% endfor %}
                                                        </optgroup>
                                                    {% else %}
                                                        <optgroup label="{{ categoryGroup['parent']['name'] }}">
                                                            <option value="{{ categoryGroup['parent']['id'] }}">{{ categoryGroup['parent']['name'] }}</option>
                                                        </optgroup>
                                                    {% endif %}
                                                {% endfor %}
                                            </select>
                                            <select name="dimensions" multiple style="margin-left: 70px">
                                                <option value="">Select Dimension</option>
                                                {% for dimension in dimensions %}
                                                    <option value="{{ dimension['id'] }}">{{ dimension['name'] }}</option>
                                                {% endfor %}
                                            </select>
                                        </div>
                                        <div class="region-types">
                                            <input type="checkbox" name="region" id="region-select">
                                            <label for="region-select">Region</label>

                                            <input type="checkbox" name="county" id="county-select">
                                            <label for="county-select">County</label>

                                            <input type="checkbox" name="town" id="town-select">
                                            <label for="town-select">Town</label>

                                            <section>
                                                <span><i class="fa fi-trash remove" style="color: red"></i></span>
                                                <span><i class="fa fi-plus add-more" style="color: green"></i></span>
                                            </section>
                                        </div>
                                    </li>
                                {% endif %}


                            </ol>

                            <div class="status-toggle">
                                <button type="button" data-on="Enabled" data-off="Disabled" data-toggle-handle="crawl" class="">-</button>
                            </div>
                            <br><br><br><br>
                            <button type="button" onclick="update_crawl_settings();" style="float: right; margin-right: 5px">Update Crawl Settings</button>
                        </div>
                    </div>

                    <div id="LHSFilterTab" class="tab">

                        <div id="LHSFilterDiv" style="margin-bottom: 50px">
                            <b>LHS Filter Ordering</b>
                            <br>

                            <div style="margin-top: 25px">

                                <div style="width: 100%" class="filter-order-category">
                                    <label for="filter-category">Category</label>
                                    <select id="filter-category">
                                        {% for categoryGroup in categories %}
                                            {% if categoryGroup['children'] is defined %}
                                                <optgroup label="{{ categoryGroup['parent']['name'] }}">
                                                    <option value="{{ categoryGroup['parent']['id'] }}">Main Category | {{ categoryGroup['parent']['name'] }}</option>
                                                    {% for children in categoryGroup['children'] %}
                                                        <option value="{{ children['id'] }}">{{ children['name'] }}</option>
                                                    {% endfor %}
                                                </optgroup>
                                            {% else %}
                                                <optgroup label="{{ categoryGroup['parent']['name'] }}">
                                                    <option value="{{ categoryGroup['parent']['id'] }}">Main Category | {{ categoryGroup['parent']['name'] }}</option>
                                                </optgroup>
                                            {% endif %}
                                        {% endfor %}
                                    </select>
                                </div>

                                <label for="dimension-list"><h4>Filter Order</h4></label>
                                <div class="table-wrapper" style="position: relative;">
                                    <div class="table-scroll" style="height: 550px; width: 100%; overflow: auto;">
                                        <table class="table" id="dimension-list" style="margin-top: 25px">
                                            <thead>
                                            <tr>
                                                <th>Order</th>
                                                <th>Filter</th>
                                                <th>Enabled/Disabled</th>
                                            </tr>
                                            </thead>
                                            <tbody>
                                            {% for order,dimension in dimensions %}
                                                <tr data-dimension-id="{{ dimension.id }}">
                                                    <td class='priority'>{{ order + 1 }}</td>
                                                    <td class="name">{{ dimension.name }}</td>
                                                    <td class="action"><a class='btn'>Disabled</a></td>
                                                </tr>
                                            {% endfor %}

                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                            </div>

                            <button type="button" onclick="update_filter_order();" style="float: right; width: 350px; margin-top: 25px">Update Filter Order</button>
                        </div>

                        <hr>

                        <div id="LHSMoreFilter">

                            <div style="margin-top: 25px">
                                <label for="dimension-list"><h4>More Filters: Available Entities</h4></label>
                                <br>
                                <i style="font-size: 12px">Add entities in the order needed for LHS</i>
                                <br>
                                <select id="entity-list" multiple class="multi-select" data-prediction="on" data-type="entity" data-separator="" data-conditions="id-slug-pair" data-keep-order="1">
                                </select>

                            </div>

                            <button type="button" onclick="update_more_filter_order();" style="float: right; width: 350px; margin-top: 25px">Update More Filters</button>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>

    <div id="bulk-upload" class="reveal-modal large" data-reveal>
        <a class="close-reveal-modal">Back</a>
        <h5 class="modal-title">Bulk Upload: <span id="model-info"></span></h5>
        <div class="modal-content remove-modal">
            <div class="mt20">
                <div class="">
                    <div id="table-wrapper">
                        <div id="table-scroll">
                            <div>
                                <label>Upload CSV File:</label>
                                <input type="file" accept=".csv" style="width: auto !important;" id="mapping_file">
                            </div>

                            <br>
                            <div>OR</div>
                            <br>

                            <textarea placeholder="Paste the data here, separated by new-lines." rows="15" id="bulk-text"></textarea>
                            <input type="hidden" id="upload-type" value="">

                        </div>
                    </div>
                </div>

                <div class="row" style="margin-top: 25px !important;">
                    <div class="columns large-6">
                        <button type="button" class="button secondary-btn-4 thin-btn expand mb0" onclick="javascript:closeRevealModel('#bulk-upload');">Cancel</button>
                    </div>
                    <div class="columns large-6">
                        <button type="button" class="button thin-btn expand mb0" id="upload">Upload</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

{% endblock %}

{% block scriptbottom %}
    <script type="text/javascript" src="/bundles/faadmin/js/bootstrap.min.js?v=3"> </script>
    <script type="text/javascript" src="/bundles/fafrontend/js/vendor/jquery-ui.min.js?v=3"></script>
    <link rel="stylesheet" type="text/css" href="/bundles/facontent/css/datatables.min.css"/>
    <link rel="stylesheet" type="text/css" href="/bundles/facontent/css/buttons.dataTables.min.css"/>
    <script type="text/javascript" src="/bundles/facontent/js/datatables.min.js"></script>
    <script type="text/javascript" src="/bundles/facontent/js/buttons.html5.min.js"></script>
    <script type="text/javascript" src="/bundles/facontent/js/dataTables.buttons.min.js"></script>
    {{ include('FaCoreBundle:Default:blockJs.html.twig') }}
    <style type="text/css">
       .seo_config_div {
       		width:80%;
       		margin:auto;
       		text-align:center;
       }
        .tabs-content>div {
            margin: 25px 5px;
        }
        .multi-select{
            margin-right: 10px;
            margin-top: 10px;
            width: 100%
        }
        .tabs-content>.tab:not(.active) {
            display: none;
        }
        .select2-input, .select2-search-field {
            width: 90% !important;
        }
        .change-notify.saved {
            border-color: green !important;
            border: 1px solid;
        }
        .change-notify.unsaved {
            border-color: red !important;
            border: 1px solid;
        }
        .status-toggle {
            float: right;
        }
        .status-toggle button.on {
            background-color: green;
        }
        .status-toggle button.off {
            background-color: #de4b4b;
        }
        .tab-menu {
            margin-top: 5px;
        }
        .category-dimension-types .select2-container {
            width: 40%;
        }
        .crawl-settings-clone, .crawl-settings {
            border: solid 1px #eee;
            padding: 5px 7px;
            border-bottom-width: 2px;
            border-bottom-color: #9e9595;
            margin-bottom: 15px;
        }
        .crawl-settings-wrapper section {
            float: right;
        }
        .crawl-settings-wrapper section span {
            /*margin-left: 10px;*/
            padding: 8px;
            cursor: pointer;
        }
        .crawl-settings-clone {
            display: none;
        }
        .crawl-settings .fa {
            width: 25px;
            height: 25px;
            padding: 5px 5px;
        }
        .crawl-settings .fa:hover {
            background: #eee;
        }
        .ui-sortable tr {
            cursor:pointer;
        }

        .ui-sortable tr:hover {
            background: rgba(251, 229, 207, 0.45);
        }
        .btn:not(.active) {
            color: #fff;
            background-color: #5bc0de;
            border-color: #46b8da;
        }
        .btn.active {
            color: #fff;
            background-color: #5cb85c;
            border-color: #4cae4c;
        }
        .btn {
            display: inline-block;
            padding: 6px 12px;
            font-weight: 400;
            line-height: 1.42857143;
            text-align: center;
            border: 1px solid transparent;
            border-radius: 4px;
            width: 90px;
        }
        a.btn:hover {
           color: #fff;
        }
        #dimension-list th, #dimension-list td.action, #dimension-list td.priority {
            text-align: center;
        }
        #dimension-list td.name {
            padding-left: 35px;
        }
        .filter-order-category .select2-container {
            width: 350px;
        }
        .row {
            max-width: 93.5em;
        }
        .datatable-action-list .fa.hidden {
            display: none;
        }
        .datatable-action-list .fa {
            cursor: pointer;
            padding: 5px;
            margin: 5px;
        }
        .datatable-action-list .fa:hover {
            background: #eee;
            color: orange;
        }
        .datatable-action-list .fa.fi-trash:hover {
            color: red;
        }
        .datatable-action-list .fa.fi-save:hover {
            color: green;
        }
        tr.deleted td {
            text-decoration: line-through;
        }
        .dataTables_wrapper {
            width: 100%;
        }
        
        table[data-rule] th.action {
            width: 100px !important;
        }
    </style>

    <script type="text/javascript">

        $(document).on('click', '.datatable-action-list .fa.edit', function () {
            editRow($(this).parents('tr').first())
        });
        $(document).on('click', '.datatable-action-list .fa.undo', function () {
            revertRow($(this).parents('tr').first())
        });
        $(document).on('click', '.datatable-action-list .fa.delete', function () {
            deleteRow($(this).parents('tr').first())
        });
        $(document).on('click', '.datatable-action-list .fa.save', function () {
            saveRow($(this).parents('tr').first())
        });
        $(document).on('click', '.datatable-action-list .fa.redirectdelete', function () {
        	redirectdeleteRow($(this).parents('tr').first())
        });
        $(document).on('click', '.datatable-action-list .fa.redirectsave', function () {
        	redirectsaveRow($(this).parents('tr').first())
        });

        $(document).ready(function() {
            $("#ForSaleExclusions").select2({placeholder: "Add Categories"});
            $("#MaxDimRules").select2({placeholder: "Add Max Dim Rules", formatSelection: maxDimTemplate});
            $("#filter-category").select2({placeholder: "Select Category"});
            $("#entity-list").select2({placeholder: "Add Entities"});

            initSorting();

            $('#filter-category').change(function () {
                get_category_filter_order();
            }).change();

            $('.bulk-upload-button').click(function () {

                var parent = $(this).parent();
                var inputType = $(this).data('toggle-handle');
                $('#upload-type').val(inputType);

                $('#model-info').html($(this).data('tab'));
                $('#bulk-upload').foundation('reveal', 'open');

            });

            $('#mapping_file').change(function () {
                read_url(this);
            });

            $('#upload').click(function () {

                var uploadType = $('#upload-type').val();
                var url = '';

                if (uploadType == 'redirects') {
                    url = "{{path('seo_config_redirects')}}";
                } else if (uploadType == 'unnecessary_odata_params') {
                    url = "{{path('seo_config_unnecessary_odata_params')}}";
                } else if (uploadType == 'unnecessary_query_params') {
                    url = "{{path('seo_config_unnecessary_params')}}";
                } else if (uploadType == 'region_alias') {
                    url = "{{path('seo_config_region_alias')}}";
                } else if (uploadType == 'location_alias') {
                    url = "{{path('seo_config_location_alias')}}";
                } else if (uploadType == 'category_alias') {
                    url = "{{path('seo_config_category_alias')}}";
                } else if (uploadType == 'all_category_alias') {
                    url = "{{path('seo_config_all_category_alias')}}";
                } else if (uploadType == 'meta_robots') {
                    url = "{{path('seo_config_meta_robots')}}";
                } else if (uploadType == 'filter_alias') {
                    url = "{{path('seo_config_filter_alias')}}";
                } else if (uploadType == 'url_right_trim') {
                    url = "{{path('seo_config_url_rght_trim')}}";
                }

                if (url != '') {
                    bulkUpload(url);
                }
            });

            {% if app.request.get('tab') %}
                $('a[data-tab=#{{ app.request.get('tab') }}]').click();
            {% endif %}

            initAddRemove();
        });

        function initAddRemove() {

            $('.crawl-settings .fa.remove').first().parent().hide();

            $(".crawl-settings .category-dimension-types [name=main-sub-category]select").select2({placeholder: "Select Category/Sub Category"});
            $(".crawl-settings .category-dimension-types [name=dimensions]select").select2({placeholder: "Select Dimensions"});

            $('.crawl-settings-wrapper .add-more').unbind('click');
            $('.crawl-settings-wrapper .add-more').click(function () {
                var clone = $('.crawl-settings-clone').clone().removeClass('crawl-settings-clone').addClass('crawl-settings');
                $(clone).find('.select2-container').remove();
                $(clone).find('select').show();
                $('.crawl-settings-wrapper').append(clone);
                initAddRemove();
            });

            $('.crawl-settings-wrapper .remove').unbind('click');
            $('.crawl-settings-wrapper .remove').click(function () {
                var row = $(this).parents('li.crawl-settings');

                if ($('.crawl-settings-wrapper .crawl-settings').length > 1) {
                    $(row).remove();
                }

            });
        }

        function initSorting() {

            //Make diagnosis table sortable
            $("#dimension-list tbody").sortable({
                helper: sortingHelper,
                stop: function(event, ui) {
                    renumber_table('#dimension-list')
                }
            }).disableSelection();

            // Enable/Disable button in table rows.
            $('#dimension-list .action a.btn').click(function() {
                $(this).toggleClass('active');
                var is_active = $(this).hasClass('active');

                if (is_active) {
                    $(this).html('Enabled');
                    $(this).parents('tr').addClass('active');
                } else  {
                    $(this).html('Disabled');
                    $(this).parents('tr').removeClass('active');
                }
            });
        }

        function sortingHelper (e, tr) {
            var originals = tr.children();
            var helper = tr.clone();
            helper.children().each(function(index) {
                $(this).width(originals.eq(index).width())
            });

            return helper;
        }

        function renumber_table(table_id) {
            $(table_id + " tr").each(function() {
                var count = $(this).parent().children().index($(this)) + 1;
                $(this).find('.priority').html(count);
                $(this).attr('order', count);
            });
        }

        window.setTimeout(function () {
            addNewItemEvent('ForSaleExclusions');
            addNewItemEvent('MaxDimRules');
            addNewItemEvent('entity-list');

            $("select[data-keep-order]").each(function(){
                if($(this).attr('data-reorder')){
                    $(this).on('select2:select', function(e){
                        var elm = e.params.data.element;
                        $elm = $(elm);
                        $t = $(this);
                        $t.append($elm);
                        $t.trigger('change.select2');
                    });
                }
                //$this.select2();
            });

        }, 500);

        $('ul.tab-menu>li').click(function (event) {
            toggleTab(this)
        });

        var entityOrder = '';
        {% if  configs['lhs_filter_order'] is defined %}
        	entityOrder = {{ configs['lhs_filter_order']['_more_filter_entities_']|raw }};
        {% endif %}

        $('#redirects').DataTable( {
            ajax: '{{ path('admin_seo_config_redirects_datatable', {'config': 'redirects'}) }}',
            columns: [
                { data: 'from' },
                { data: 'to' },
                { data: 'type' },
                { data: 'action' },
            ],
            "deferRender": true,
            // "processing": true,
            // "serverSide": true,
            dom: 'Bfrtip',
            buttons: [
                'excelHtml5',
                'csvHtml5',
                'pdfHtml5',
                'pageLength',
            ]
        } );
        $('#unnecessary_odata_params').DataTable( {
            ajax: '{{ path('admin_seo_config_datatable', {'config': 'unnecessary_odata_params'}) }}',
            columns: [
                { data: 'param' },
                { data: 'action' },
            ],
            "deferRender": true,
            // "processing": true,
            // "serverSide": true,
            dom: 'Bfrtip',
            buttons: [
                'excelHtml5',
                'csvHtml5',
                'pdfHtml5',
                'pageLength',
            ]
        } );
        $('#unnecessary_query_params').DataTable( {
            ajax: '{{ path('admin_seo_config_datatable', {'config': 'unnecessary_query_params'}) }}',
            columns: [
                { data: 'param' },
                { data: 'action' },
            ],
            "deferRender": true,
            // "processing": true,
            // "serverSide": true,
            dom: 'Bfrtip',
            buttons: [
                'excelHtml5',
                'csvHtml5',
                'pdfHtml5',
                'pageLength',
            ]
        } );
        $('#region_alias').DataTable( {
            ajax: '{{ path('admin_seo_config_datatable', {'config': 'region_alias'}) }}',
            columns: [
                { data: 'legacy' },
                { data: 'new' },
                { data: 'action' },
            ],
            "deferRender": true,
            // "processing": true,
            // "serverSide": true,
            dom: 'Bfrtip',
            buttons: [
                'excelHtml5',
                'csvHtml5',
                'pdfHtml5',
                'pageLength',
            ]
        } );
        $('#location_alias').DataTable( {
            ajax: '{{ path('admin_seo_config_datatable', {'config': 'location_alias'}) }}',
            columns: [
                { data: 'legacy' },
                { data: 'new' },
                { data: 'action' },
            ],
            "deferRender": true,
            // "processing": true,
            // "serverSide": true,
            dom: 'Bfrtip',
            buttons: [
                'excelHtml5',
                'csvHtml5',
                'pdfHtml5',
                'pageLength',
            ]
        } );
        $('#filter_alias').DataTable( {
            ajax: '{{ path('admin_seo_config_datatable', {'config': 'filter_alias'}) }}',
            columns: [
                { data: 'legacy' },
                { data: 'new' },
                { data: 'action' },
            ],
            "deferRender": true,
            // "processing": true,
            // "serverSide": true,
            dom: 'Bfrtip',
            buttons: [
                'excelHtml5',
                'csvHtml5',
                'pdfHtml5',
                'pageLength',
            ]
        } );
        $('#category_alias').DataTable( {
            ajax: '{{ path('admin_seo_config_datatable', {'config': 'category_alias'}) }}',
            columns: [
                { data: 'legacy' },
                { data: 'new' },
                { data: 'action' },
            ],
            "deferRender": true,
            // "processing": true,
            // "serverSide": true,
            dom: 'Bfrtip',
            buttons: [
                'excelHtml5',
                'csvHtml5',
                'pdfHtml5',
                'pageLength',
            ]
        } );
        $('#all_category_alias').DataTable( {
            ajax: '{{ path('admin_seo_config_datatable', {'config': 'all_category_alias'}) }}',
            columns: [
                { data: 'legacy' },
                { data: 'new' },
                { data: 'action' },
            ],
            "deferRender": true,
            // "processing": true,
            // "serverSide": true,
            dom: 'Bfrtip',
            buttons: [
                'excelHtml5',
                'csvHtml5',
                'pdfHtml5',
                'pageLength',
            ]
        } );
        $('#meta_robots').DataTable( {
            ajax: '{{ path('admin_seo_config_datatable', {'config': 'meta_robots'}) }}',
            columns: [
                { data: 'meta' },
                { data: 'url' },
                { data: 'action' },
            ],
            "deferRender": true,
            // "processing": true,
            // "serverSide": true,
            dom: 'Bfrtip',
            buttons: [
                'excelHtml5',
                'csvHtml5',
                'pdfHtml5',
                'pageLength',
            ]
        } );
        $('#url_right_trim').DataTable( {
            ajax: '{{ path('admin_seo_config_datatable', {'config': 'url_right_trim'}) }}',
            columns: [
                { data: 'param' },
                { data: 'action' },
            ],
            "deferRender": true,
            // "processing": true,
            // "serverSide": true,
            dom: 'Bfrtip',
            buttons: [
                'excelHtml5',
                'csvHtml5',
                'pdfHtml5',
                'pageLength',
            ]
        } );

		if (entityOrder) {
        	loadSelect2Data('#entity-list', JSON.parse(entityOrder), 1);
		}

		var maxDimRul = '';
		{% if configs['max_dim_rules'] is defined %}
			maxDimRul = {{ configs['max_dim_rules']['data']|raw }};
			loadSelect2Data('#MaxDimRules', JSON.parse(maxDimRul), 1);
		{% endif %}               
        

        enableToggler();
        loadTogglers();

        function editRow(row) {
            $.each($(row).find('td'), function (key, td) {

                var settings = $(td).find('span.datatable-action-list');
                if (settings.length) {
                    $(settings).find('.save').removeClass('hidden');
                    $(settings).find('.redirectsave').removeClass('hidden');
                    $(settings).find('.undo').removeClass('hidden');
                    $(settings).find('.edit').addClass('hidden');
                } else {
                    var text = $(td).text();
                    var html = $(td).html();

                    var textarea = $('<input>').css({width: '95%'}).attr('data-value', text).val(text);
                    $(td).html(textarea)
                }

            });
        }

        function revertRow(row) {
            $.each($(row).find('td'), function (key, td) {
                var settings = $(td).find('span.datatable-action-list');
                if (settings.length) {
                    $(settings).find('.save').addClass('hidden');
                    $(settings).find('.undo').addClass('hidden');
                    $(settings).find('.edit').removeClass('hidden');
                } else {
                    var text = $(td).find('input').data('value');
                    $(td).html(text)
                }
            });
        }

        function deleteRow(row) {
            $(row).addClass('deleted');
            var rule = $(row).find('.datatable-action-list .data').first().html();
            var table = $(row).parents('table').first();
            var config = $(table).data('rule');

            blockPage('Removing rule');

            $.ajax({
                type: "POST",
                url: "{{path('admin_seo_config_datatable_delete')}}",
                data: {
                    config: config,
                    rule: rule
                }
            })
            .done(function(response) {
                unblockPage();

                if (response.changed) {
                    $(row).remove();
                    $(table).DataTable().ajax.reload()
                } else {
                    alert('Rule not deleted')
                }

            });

        }

        function saveRow(row) {
            var ruleFrom = $(row).find('.datatable-action-list .data').first().html();
            var table = $(row).parents('table').first();
            var config = $(table).data('rule');

            var ruleTo = [];
            $.each($(row).find('input:not(.hidden)'), function (key, input) {
                ruleTo.push($(input).val());
            });

            ruleTo = ruleTo.join(':');

            console.log(ruleFrom, ruleTo);
            blockPage('Saving rule');

            $.ajax({
                type: "POST",
                url: "{{path('admin_seo_config_datatable_edit')}}",
                data: {
                    config: config,
                    rule_from: ruleFrom,
                    rule_to: ruleTo
                }
            })
            .done(function(response) {
                unblockPage();

                if (response.changed) {
                    $(table).DataTable().ajax.reload()
                } else {
                    alert('Rule not Saved')
                }

            });

        }

        function redirectdeleteRow(row) {
            $(row).addClass('deleted');
            var rule = $(row).find('.datatable-action-list .data').first().html();
            var table = $(row).parents('table').first();
            var config = $(table).data('rule');

            blockPage('Removing rule');

            $.ajax({
                type: "POST",
                url: "{{path('admin_seo_config_datatable_redirectdelete')}}",
                data: {
                    config: config,
                    rule: rule
                }
            })
            .done(function(response) {
                unblockPage();

                if (response.changed) {
                    $(row).remove();
                    $(table).DataTable().ajax.reload()
                } else {
                    alert('Rule not deleted')
                }

            });

        }

        function redirectsaveRow(row) {
            var ruleFrom = $(row).find('.datatable-action-list .data').first().html();
            var table = $(row).parents('table').first();
            var config = $(table).data('rule');

            var ruleTo = [];
            $.each($(row).find('input:not(.hidden)'), function (key, input) {
                ruleTo.push($(input).val());
            });

            ruleTo = ruleTo.join(':');

            console.log(ruleFrom, ruleTo);
            blockPage('Saving rule');

            $.ajax({
                type: "POST",
                url: "{{path('admin_seo_config_datatable_redirectedit')}}",
                data: {
                    config: config,
                    rule_from: ruleFrom,
                    rule_to: ruleTo
                }
            })
            .done(function(response) {
                unblockPage();

                if (response.changed) {
                    $(table).DataTable().ajax.reload()
                } else {
                    alert('Rule not Saved')
                }

            });

        }
        
        function read_url(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#mapping_file').data('src', e.target.result);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

        function bulkUpload(url) {

            blockPage();
            var dataInfo = getBulkData();
            var uploadType = $('#upload-type').val();

            $.ajax({
                type: "POST",
                url: url,
                data: {
                    data: dataInfo.data,
                    format: dataInfo.format,
                    type: 'bulk'
                }
            })
            .done(function(response) {
                unblockPage();

                if(response.status) {
                    var tabId = $('[data-toggle-handle='+ uploadType +']').parents('.tab').attr('id');
                    window.location = window.location.origin + window.location.pathname + '?tab=' + tabId;
                }
            });
        }

        function getBulkData() {
            var fileData = $('#mapping_file').data('src');
            var bulkText = $('#bulk-text').val();

            if (fileData) {
                return {data: fileData, format: 'file'}
            }

            if (bulkText) {
                return {data: bulkText.split('\n'), format: 'text'}
            }

            return {data: [], format: ''}
        }

        function loadTogglers() {
            {% for type,config in configs %}
                toggleTogglerHtml($(".status-toggle [data-toggle-handle='{{ type }}']"), {{ config['status'] ? 1 : 0 }});
            {% endfor %}
        }

        function enableToggler() {
            $('[data-toggle-handle]').click(function () {
                toggleTogglerHtml(this, !$(this).hasClass('on'));
                updateTogglerStatus(this);
            });
        }

        function updateTogglerStatus(elt) {
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_config_status_toggle')}}",
                data: {
                    'type': $(elt).data('toggle-handle'),
                    'status': $(elt).hasClass('on') ? 1 : 0
                }
            })
            .done(function(response) {
                unblockPage();
                toggleTogglerHtml(elt, response.status);
            });
        }

        function toggleTogglerHtml(elt, status) {
            if (status) {
                $(elt).removeClass('off').addClass('on').html($(elt).data('on'));
            } else {
                $(elt).removeClass('on').addClass('off').html($(elt).data('off'));
            }
        }

        /**
         * Loads the given select2 with the data.
         * If clear flag is set, it will clear the existing options.
         * */
        function loadSelect2Data(selector, data, clear) {

            var select = $("" + selector);
            var selected_options = [];

            if (clear) {
                $(select).html('');
            }

            $.each(data, function (index, dataObject) {

                var jsonObject = {};
                if (typeof dataObject.id == 'undefined') {
                    jsonObject = {id: dataObject, text: dataObject};
                } else {
                    jsonObject = dataObject;
                }

                var option = $('<option>').attr({'value': jsonObject.id}).html(jsonObject.text);
                $(select).append(option);

                selected_options.push({id: jsonObject.id, text: jsonObject.text});
            });

            $(select).select2();
            $(select).select2('data', selected_options);
        }

        function toggleTab(elt) {
            var href = $(elt).find('a[data-tab]').attr('data-tab');
            $('.tabs-content>.tab').removeClass('active');
            $(''+href).addClass('active');

            $('.tab-menu>li').removeClass('active');
            $(elt).addClass('active');
        }

        function addNewItemEvent(id) {

            var select = $('#'+id);
            var prediction = $(select).data('prediction');
            var separator = $(select).data('separator');
            var conditions = $(select).data('conditions');

            $(select).parent().find('.select2-search-field input').unbind('keyup');
            $(select).parent().find('.select2-search-field input').keyup(function (event) {

                var new_item_value = $(this).val();

                if (!new_item_value) {
                    return;
                }

                $(select).find('.new-item').remove();

                var option = $('<option>').attr({'value': new_item_value}).html(new_item_value).addClass('new-item');
                $(select).append(option);

                if (prediction != 'off') {

                    if (separator != '' && new_item_value.indexOf(separator) > 0) {
                        var words = new_item_value.split(separator);
                        var keyword = (words[1]).trim();
                        if (keyword != '') {
                            suggest($(select).data('type'), keyword, id, words[0], conditions)
                        }
                    }

                    if (separator == '' && new_item_value != '') {
                        suggest($(select).data('type'), new_item_value, id, '', conditions)
                    }
                }

                if (event.keyCode == 13) {
                    addNewElement(id, new_item_value);
                    $(select).parent().find('.select2-container').removeClass('saved').addClass('unsaved')
                }
            });

            $(select).parent().find('.select2-container').addClass('change-notify saved');
            $(select).change(function () {
                $(select).parent().find('.select2-container').removeClass('saved').addClass('unsaved')
            });
        }

        function suggest(type, keyword, id, alias, conditions) {

            var is_more_filter = conditions == 'id-slug-pair';

            $.ajax({
                type: "POST",
                url: "{{path('seo_config_suggest')}}",
                data: {
                    'type': type,
                    'keyword': keyword,
                    'conditions': conditions
                }
            })
            .done(function(suggestions) {
                unblockPage();

                var select = $('#'+id);
                var separator = $(select).data('separator');

                $(select).find('.suggestion-item').remove();

                $.each(suggestions, function (index, item) {
                    var option;
                    if (is_more_filter) {
                        option = $('<option>').attr({'value': index}).html(alias + separator + item).addClass('suggestion-item');
                    } else  {
                        option = $('<option>').attr({'value': alias + separator + item}).html(alias + separator + item).addClass('suggestion-item');
                    }

                    $(select).append(option);
                });
            });
        }

        function addNewElement(id, item) {
            var select = $('#'+id);
            var current_data = $(select).select2('data');
            current_data.push({id: item, text: item});
            $(select).select2('data', current_data);
        }

        function update_UnnecessaryQueryParams() {

            var select = $('#UnnecessaryQueryParams');
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_config_unnecessary_params')}}",
                data: {
                    "data": getData($(select).select2('data'))
                }
            })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
        }

        function update_UnnecessaryODataParams() {

            var select = $('#UnnecessaryODataParams');
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_config_unnecessary_odata_params')}}",
                data: {
                    "data": getData($(select).select2('data'))
                }
            })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
        }

        function update_CategoryAlias() {

            var select = $('#CategoryAlias');
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_config_category_alias')}}",
                data: {
                    "data": getData($(select).select2('data'))
                }
            })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
        }

        function update_FilterAlias() {

            var select = $('#FilterAlias');
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_config_filter_alias')}}",
                data: {
                    "data": getData($(select).select2('data'))
                }
            })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
        }

        function update_RegionAlias() {

            var select = $('#RegionAlias');
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_config_region_alias')}}",
                data: {
                    "data": getData($(select).select2('data'))
                }
            })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
        }

        function update_LocationAlias() {

            var select = $('#LocationAlias');
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_config_location_alias')}}",
                data: {
                    "data": getData($(select).select2('data'))
                }
            })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
        }

        function update_AllCategoryAlias() {

            var select = $('#SubCategoryAlias');
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_config_all_category_alias')}}",
                data: {
                    "data": getData($(select).select2('data'))
                }
            })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
        }

        function update_ForSaleExclusions() {

            var select = $('#ForSaleExclusions');
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_config_for_sale_exclusions')}}",
                data: {
                    "data": getData($(select).select2('data'))
                }
            })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
        }

        function update_MetaTags() {

            var select = $('#MetaTags');
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_config_meta_robots')}}",
                data: {
                    "data": getData($(select).select2('data'))
                }
            })
            .done(function() {
                unblockPage();
                $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
            });
        }

        function update_MaxDimRules() {

            var select = $('#MaxDimRules');
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_config_max_dim_rules')}}",
                data: {
                    "data": getData($(select).select2('data'))
                }
            })
                .done(function() {
                    unblockPage();
                    $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
                });
        }

        function update_redirects() {

            var select = $('#Redirects');
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_config_redirects')}}",
                data: {
                    "data": getData($(select).select2('data'))
                }
            })
                .done(function() {
                    unblockPage();
                    $(select).parent().find('.select2-container').removeClass('unsaved').addClass('saved')
                });
        }

        function update_crawl_settings() {

            var data = [];
            var rows = $('.crawl-settings');
            $.each(rows, function (key, row) {

                var category = $(row).find('select[name=main-sub-category]').first().select2('data').id;
                var dimensions = $.map($(row).find('select[name=dimensions]').first().select2('data'), function (object, key) {
                    return object.id;
                });
                console.log(dimensions);
                var region = $(row).find('input[name="region"]').first().is(':checked');
                var county = $(row).find('input[name="county"]').first().is(':checked');
                var town = $(row).find('input[name="town"]').first().is(':checked');

                if (category || dimensions || region || county || town) {
                    data.push({
                        category: category,
                        dimension: dimensions,
                        region: region,
                        county: county,
                        town: town
                    });
                }

            });

            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('crawl_settings')}}",
                data: {
                    "data": data
                }
            })
            .done(function() {
                unblockPage();
            });
        }

        function update_filter_order() {

            var categoryId = $('#filter-category').select2('data').id;
            var rows = $('#dimension-list tbody tr');
            var order = [];

            $.each(rows, function (key, row) {

                var dim_id = $(row).data('dimension-id');

                if ($(row).hasClass('active')) {
                    order.push(dim_id);
                }
            });

            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('lhs_filter_category_order_save')}}",
                data: {
                    "data": order,
                    category_id: categoryId
                }
            })
            .done(function() {
                unblockPage();
                get_category_filter_order();
            });
        }

        function update_more_filter_order() {

            var select = $('#entity-list');
            var moreFilterEntities = [];
                $.each($(select).select2('data'), function (key, value) {
                moreFilterEntities.push(value.id)
            });
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('lhs_filter_category_order_save')}}",
                data: {
                    data: {'_more_filters_': moreFilterEntities }
                }
            })
            .done(function() {
                unblockPage();
                $('#entity-list').parent().find('.multi-select.change-notify').removeClass('unsaved').addClass('saved');
            });
        }

        function get_category_filter_order() {

            var categoryId = $('#filter-category').select2('data').id;
            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('lhs_filter_category_order')}}",
                data: {
                    category_id: categoryId
                }
            })
            .done(function(response) {
                unblockPage();

                var order = [];
                var indexCount = 1;

                if (response.order) {
                    $.each(response.order.split(','), function (key, dimensionId) {
                        var row = $('#dimension-list tr[data-dimension-id=' + dimensionId + ']');
                        $(row).addClass('active').find('a.btn').addClass('active').html('Enabled');
                        $(row).attr('order', indexCount).find('.priority').html(indexCount++);
                        order.push(row);

                        row.remove()
                    });
                }

                var remainingRows = $('#dimension-list tr[data-dimension-id]');

                $.each(remainingRows, function (index, row) {
                    $(row).removeClass('active').find('a.btn').removeClass('active').html('Disabled');
                    $(row).attr('order', indexCount).find('.priority').html(indexCount++);
                    order.push(row);
                });

                remainingRows.remove();

                $('#dimension-list tbody').append(order);
                initSorting()

            });
        }

        function sitemapStat() {

            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_tool_sitemap_stat')}}",
                data: {}
            })
            .done(function(response) {
                unblockPage();

                var html = '';
                $.each(response.stat, function (key, item) {
                    html += key + ' : ' + item + '<br>'
                });

                $('#sitemap-status').html(html);
                $('#sitemap-files').html(response.files)

            });
        }

        function sitemapAction(type) {

            blockPage();

            $.ajax({
                type: "POST",
                url: "{{path('seo_tool_sitemap_update')}}",
                data: {
                    'type': type
                }
            })
            .done(function(response) {
                unblockPage();
                sitemapStat();
            });
        }

        function getData(data) {
            var items = [];

            $.each(data, function (index, dataObject) {
                items.push(dataObject.text);
            });

            return items;
        }

        function categoryAliasTemplate(data) {
            var split = (data.text).split(':');
            return split.join(' <span style="color: green;">>></span> ');
        }

        function maxDimTemplate(data) {
            var split = (data.text).split('+');
            var out = [];

            $.each(split, function (key, value) {
                var detail = value.split(':');
                out.push(detail[0] + ' ' + detail[1]);
            });

            return out.join(' <span style="color: green;">+</span> ');
        }

    </script>
{% endblock %}