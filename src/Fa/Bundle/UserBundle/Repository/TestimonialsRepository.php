<?php

/**
 * This file is part of the fa bundle.
 *
 * @copyright Copyright (c) 2014, FMG
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Fa\Bundle\UserBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @author Samir Amrutya <samiram@aspl.in>
 * @copyright 2014 Friday Media Group Ltd
 * @version v1.0
 */
class TestimonialsRepository extends EntityRepository
{
    use \Fa\Bundle\CoreBundle\Search\Search;

    const ALIAS = 't';

    /**
     * Get query builder.
     *
     * @return Doctrine\ORM\QueryBuilder The query builder.
     */
    public function getBaseQueryBuilder()
    {
        return $this->createQueryBuilder(self::ALIAS);
    }

    /**
     * Add user name filter to existing query object.
     *
     * @param string $userName User name.
     */
    protected function addUserNameFilter($userName = null)
    {
        $this->queryBuilder->andWhere(sprintf('%s.user_name LIKE \'%%%s%%\'', $this->getRepositoryAlias(), $userName));
    }

    /**
     * Add user email filter to existing query object.
     *
     * @param string $userEmail User email.
     */
    protected function addUserEmailFilter($userEmail = null)
    {
        $this->queryBuilder->andWhere(sprintf('%s.user_email LIKE \'%%%s%%\'', $this->getRepositoryAlias(), $userEmail));
    }

    /**
     * Add testimonials status filter to existing query object.
     *
     * @param integer $status Status.
     */
    protected function addStatusFilter($status = null)
    {
        $this->queryBuilder->andWhere($this->getRepositoryAlias().'.status = '.$status);
    }

    /**
     * Add testimonials user filter to existing query object.
     *
     * @param integer $status Status.
     */
    protected function addUserFilter($userId = null)
    {
        $this->queryBuilder->andWhere($this->getRepositoryAlias().'.user = '.$userId);
    }

    /**
     * Update status.
     *
     * @param integer $id     Id.
     * @param integer $status Status.
     */
    public function updateStatus($id, $status)
    {
        $testimonials = $this->find($id);

        $testimonials->setStatus($status);
        $this->_em->persist($testimonials);
        $this->_em->flush($testimonials);
    }
}
