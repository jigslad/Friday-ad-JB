<?php

/**
 * This file is part of the fa bundle.
 *
 * @copyright Copyright (c) 2014, FMG
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Fa\Bundle\UserBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Fa\Bundle\UserBundle\Entity\UserSearchAgentEmailAd;
use Fa\Bundle\CoreBundle\Manager\CommonManager;
use Fa\Bundle\EntityBundle\Repository\LocationRepository;

/**
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @author Mohit Chauhan <mohitc@aspl.in>
 * @copyright 2014 Friday Media Group Ltd
 * @version v1.0
 */
class UserSearchAgentEmailAdRepository extends EntityRepository
{
    use \Fa\Bundle\CoreBundle\Search\Search;

    const ALIAS = 'usaea';

    /**
     * Prepare query builder.
     *
     * @param array $data Array of data.
     *
     * @return Doctrine\ORM\QueryBuilder The query builder
     */
    public function getBaseQueryBuilder()
    {
        return $this->createQueryBuilder(self::ALIAS);
    }

    /**
     * Get recently sent ad list.
     *
     * @param integer $userId     User id.
     * @param integer $daysBefore How many days before sent.
     *
     * @return mixed
     */
    public function getRecentlySentUserAdList($userId, $daysBefore)
    {
        $daysBeforeTimestamp = strtotime('-'.$daysBefore.' days', time());

        $query = $this->createQueryBuilder(self::ALIAS)
        ->select("group_concat(".self::ALIAS.".ad_ids, ', ') as ad_ids")
        ->andWhere(self::ALIAS.'.user = :userId')
        ->setParameter('userId', $userId)
        ->andWhere(self::ALIAS.'.created_at > :daysBeforeTimestamp')
        ->setParameter('daysBeforeTimestamp', $daysBeforeTimestamp)
        ->groupBy(self::ALIAS.'.user');

        $searchAgentEmailAdArray = $query->getQuery()->getResult();

        if ($searchAgentEmailAdArray) {
            return $searchAgentEmailAdArray[0]['ad_ids'];
        }

        return false;
    }
}
