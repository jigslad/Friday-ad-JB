<script defer type="text/javascript" src="https://leafletjs-cdn.s3.amazonaws.com/content/leaflet/master/leaflet.js"></script>
<script defer type="text/javascript" src="https://tiles.unwiredmaps.com/js/leaflet-unwired.js"></script>

{% set showAdultMapMarker = 0 %}
{% set catId = 0 %}
{% set ADULT_CATEGORY_ID = constant('Fa\\Bundle\\EntityBundle\\Repository\\CategoryRepository::ADULT_ID') %}
{% if searchParams is defined and searchParams.item__category_id is defined and searchParams.item__category_id is not null %}
		{% set catId = searchParams.item__category_id %}
{% elseif adCategoryId is defined and adCategoryId is not null %}
		{% set catId = adCategoryId %}
{% endif %}
{% if catId is defined and catId != 0 %}
	{% set categoryPath = fetch_repository('FaEntityBundle:Category').getCategoryPathArrayById(catId, false, fetch_container_instance()) %}
    {% set catCnt = 0 %}
    {% if categoryPath|length %}
        {% for categoryId, categoryName in categoryPath %}
            {% if catCnt == 0 %}
                {% if (categoryId == ADULT_CATEGORY_ID) %}
                    {% set showAdultMapMarker = 1 %}
                {% endif %}
            {% endif %}
            {% set catCnt = catCnt + 1 %}
        {% endfor %}
    {% endif %}      
{% endif %}
{% if showAdultMapMarker==1  %}
    {% set markerUrl = asset_url('fafrontend/images/adul-map-marker.svg') %}
{% else %}
	{% set markerUrl = asset_url('fafrontend/images/map-marker.png') %}
{% endif %}

<script language="javascript" type="text/javascript">
//<![CDATA[
var map, streets, myMarker, myIcon;
$(window).on('load', function() {
	apikey = "{{ key }}";
	streets = L.tileLayer.Unwired({key: apikey, scheme: "streets"});
	myIcon = L.icon({className:"", iconUrl: "{{ markerUrl }}"});
});
function showAddress(val) {
    var latitude = '';
    var longitude = '';
    if(map && myMarker) {  
        map.removeLayer(myMarker);
    }
    let settings = {
  		  "async": true,
  		  "crossDomain": true,
  		  "url": 'https://eu1.locationiq.com/v1/search.php?key={{ key|raw }}&q=="'+val+'"&format=json&countrycodes=gb&limit=1',
  		  "method": "GET"
  		}

  		$.ajax(settings).done(function (response) {
  			if(response && response.length > 0) {
  				$.each(response, function (i, address_component) {
  					if(typeof address_component.lat != 'undefined' && typeof address_component.lon != 'undefined') {
  						if(map && myMarker) {  
  					        map.removeLayer(myMarker);
  					    }
				 		latitude = address_component.lat;
  	                    longitude = address_component.lon;							
						map.setView(new L.LatLng(latitude, longitude), 10);
						myMarker = L.marker([latitude, longitude], {icon: myIcon}).addTo(map);
						map.flyTo([address_component.lat, address_component.lon]);
  					}
  				});
  			}
  		});
}

function initialize(lat, lng) { 
	map = L.map('mapfit', {
        center: [lat, lng], // Map loads with this location as center
        zoom: 10,
        scrollWheelZoom: true,
        layers: [streets], // Show 'streets' by default
    });
}

function showMapForPaa(lat, lng, field = '', pointField = '') {
	if(map && myMarker) {  
        map.removeLayer(myMarker);
    }
	if(!map) {
		// Initialize the map
	    map = L.map('mapfit', {
	        center: [lat, lng], // Map loads with this location as center
	        zoom: 10,
	        scrollWheelZoom: true,
	        layers: [streets], // Show 'streets' by default
	    });
	}
	myMarker = L.marker([lat, lng], {icon: myIcon}).addTo(map);
}

function showMarkerPaa(lat,lng) {
	if(map && myMarker) {  
        map.removeLayer(myMarker);
    }

	if(!map) {
		// Initialize the map
	    map = L.map('mapfit', {
	        center: [lat, lng], // Map loads with this location as center
	        zoom: 12,
	        scrollWheelZoom: true,
	        layers: [streets], // Show 'streets' by default
	    });
	} else {
		map.setView(new L.LatLng(lat,lng), 12);
		myMarker = L.marker([lat,lng], {icon: myIcon}).addTo(map);
		map.flyTo([lat, lng]);
	}
}

function showMarker(lat, lng) {
	if(map && myMarker) {  
        map.removeLayer(myMarker);
    }
    
	if(!map) {
		// Initialize the map
	    map = L.map('mapfit', {
	        center: [lat, lng], // Map loads with this location as center
	        zoom: 10,
	        scrollWheelZoom: true,
	        layers: [streets], // Show 'streets' by default
	    });
	}
	myMarker = L.marker([lat, lng], {icon: myIcon}).addTo(map);
}

function showCustomMarker(lat, lng, markerImage)
{
	if(map && myMarker) {  
        map.removeLayer(myMarker);
    }
    
	if(!map) {
		// Initialize the map
	    map = L.map('mapfit', {
	        center: [lat, lng], // Map loads with this location as center
	        zoom: 10,
	        scrollWheelZoom: true,
	        layers: [streets], // Show 'streets' by default
	    });
	}
	myMarker = L.marker([lat, lng], {icon: myIcon}).addTo(map);
}

//]]>
</script>