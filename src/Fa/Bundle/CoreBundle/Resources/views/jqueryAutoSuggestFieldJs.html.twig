{% set mobileDetectManager = fetch_container_instance().get('fa.mobile.detect.manager') %}
<script language="javascript" type="text/javascript">
//<![CDATA[
$(function() {
    var cache = {};
    $("{{ field }}"+'_autocomplete').autocomplete({
        minLength: 2,
        source: function( request, response ) {
            var term = request.term;
            {% if parent_field is not defined %}
                if ( term in cache ) {
                    response( cache[ term ] );
                    return;
                }
            {% else %}
                if ($("{{ parent_field }}").val() == '') {
                    return;
                }
            {% endif %}
            $.ajax({
                url: Routing.generate("{{ route }}", { term: {% if 'location' in field %} request.term.replace(/[^a-z0-9\s]/gi, '') {% else %} request.term {% endif %} }),
                dataType: 'json',
                type: 'GET',
                {% if parent_field is defined %}
                data: {page_limit: 10, {% if dimension_field is defined %} cd_id: $('{{ dimension_field }}').val() {% endif %}, 'parent_id': $("{{ parent_field }}").val()},
                {% else %}
                data: {page_limit: 10, {% if dimension_field is defined %} cd_id: $('{{ dimension_field }}').val(),  {% endif %}},
                {% endif %}
                success: function(data) {
                    var result = $.map(data['results'], function(item) {
                        return {
                            label: item.text,
                            id: item.id,
                            text2: item.text2 ? item.text2 : '',
                            index: item.index
                        };
                    });
                    cache[ term ] = result;
                    response(result);
                }
            });
        },
        select: function( event, ui ) {
          if ('{{ field }}' == '#fa_paa_category_select_category_id') {
            var eventLabel = $("{{ field }}"+'_autocomplete').val() + ' - ' + ui.item.value + ' - ' + ui.item.index;
            autoCompleteCategoryName = ui.item.value + ' - ' + ui.item.index;
            ga('send', 'event', 'PAA - Step 1', 'Select searching bar', eventLabel);
          }
            {% if 'location' in field %}
                setTimeout(function(){
                    $("{{ field }}").val(ui.item.id);
                    {% if submitFormAfterSelect is defined and submitFormAfterSelect is not null %}
                        {% if submitFormAfterSelect == 'fa_top_search' %}
                            $('#fa_top_search_leafLevelCategoryId').val($('#fa_top_search_tmpLeafLevelCategoryId').val());
                        {% endif %}
                        $('#{{ submitFormAfterSelect }}').submit();
                    {% else %}
                        bindShowMapOnChangeLocationEvent();
                    {% endif %}
                }, 500);
            {% else %}
                $("{{ field }}").val(ui.item.id);
                {% if 'category_id' in field %}
                    onSelectAutoSuggestCategory();
                {% endif %}
            {% endif %}
            $("{{ field }}"+'_close').show();
        },
        open: function( event, ui ) {
            $('.ui-autocomplete').css('width', $("{{ field }}"+'_autocomplete').outerWidth()+'px');
            
            {% if dropdownCssClass is defined %}
                $('.ui-autocomplete').addClass("{{ dropdownCssClass }}");
            {% endif %}
        },
        search: function( event, ui ) {
            $("{{ field }}").val($("{{ field }}"+'_autocomplete').val());
            if ($("{{ field }}"+'_autocomplete').val().length > 0) {
                $("{{ field }}"+'_close').show();
            }

            var ans = ($("{{ field }}"+'_autocomplete').val() in cache);
            if ('{{ field }}' == '#fa_paa_category_select_category_id' && ans == false) {
                if ($("{{ field }}"+'_autocomplete').val().length == 2) {
                  ga('send', 'event', 'PAA - Step 1', 'Start searching bar', '');
                }
            }
        },
        change: function( event, ui ) {
            {% if 'make_id' in field %}
                loadModelsByMakeId($("{{ field }}").val());
            {% endif %}
            {% if 'location' in field and submitFormAfterSelect is not defined and not mobileDetectManager.isMobile() and not mobileDetectManager.isTablet()%}
                bindShowMapOnChangeLocationEvent();
            {% endif %}
            {% if 'category_id' in field and not mobileDetectManager.isMobile() and not mobileDetectManager.isTablet() %}
                onSelectAutoSuggestCategory();
            {% endif %}
        },
        close: function( event, ui ) {
            {% if displayOnlyTown is defined %}
                $("{{ field }}"+'_autocomplete').val($("{{ field }}"+'_autocomplete').val().split(',', 1));
            {% endif %}
        },
        focus: function( event, ui ) {
            {% if 'location' in field %}
                setTimeout(function(){
                    $("{{ field }}").val(ui.item.id);
                }, 500);
            {% else %}
                $("{{ field }}").val(ui.item.id);
            {% endif %}
            $("{{ field }}"+'_close').show();
        }
    }).focus(function() {
        {% if 'event_start_time' in field or 'event_end_time' in field %}
            if ($("{{ field }}"+'_autocomplete').val().length == 0) {
                $(this).autocomplete("search", "all");
            }
        {% endif %}
    }).autocomplete('instance')._renderItem = function( ul, item ) {
         var label = item.label;
         if (item.text2) {
            label = label + '<div> in <span>'+ item.text2 +'</span> </div>';
         }

         return $("<li>").append(label).appendTo( ul );
    };
});

$(document).ready(function(){
    {% if placeHolder is defined %}
        $("{{ field }}"+'_autocomplete').attr("placeholder", "{{ placeHolder }}");
    {% endif %}
    
    $("{{ field }}"+'_close').click(function() {
        $("{{ field }}"+'_autocomplete').val('');
        $("{{ field }}").val('');
        $(this).hide();
        {% if 'make_id' in field %}
            loadModelsByMakeId();
        {% endif %}

        {% if 'location' in field %}
            bindShowMapOnChangeLocationEvent();
        {% endif %}

        {% if child_field is defined %}
            $("{{ child_field }}").val('');
            $("{{ child_field~'_autocomplete' }}").val('');
            $("{{ child_field }}"+'_close').hide();
        {% endif %}

        {% if 'category_id' in field %}
            onRemoveAutoSuggestCategory();
        {% endif %}
    });

    $("{{ field }}"+'_autocomplete').keyup(function() {
        if ($(this).val().length < 1) {
            $("{{ field }}"+'_close').hide();
            $("{{ field }}").val("");
            
            {% if child_field is defined %}
                $("{{ child_field }}").val('');
                $("{{ child_field~'_autocomplete' }}").val('');
                $("{{ child_field }}"+'_close').hide();
            {% endif %}
        }
    });

    $("{{ field }}"+'_autocomplete').focus(function() {
        $(this).select();
    });

    $("{{ field }}"+'_autocomplete').blur(function() {
        if ($("{{ field }}"+'_autocomplete').val().length == 0) {
            $("{{ field }}"+'_close').hide();
        }
    });
    
    if ($("{{ field }}"+'_autocomplete').length > 0 && $("{{ field }}"+'_autocomplete').val().length < 1) {
        $("{{ field }}"+'_close').hide();
    } else {
        $("{{ field }}"+'_close').show();
    }
});

function bindShowMapOnChangeLocationEvent()
{
   $('#find_on_map').trigger('click');
}
//]]>
</script>