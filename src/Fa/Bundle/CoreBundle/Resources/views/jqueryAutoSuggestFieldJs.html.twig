{% set mobileDetectManager = fetch_container_instance().get('fa.mobile.detect.manager') %}
<script language="javascript" type="text/javascript">
//<![CDATA[
$(function() {
    var cache = {};
    var townId = null;
    $("{{ field }}"+'_autocomplete').autocomplete({
        minLength: 2,
        source: function( request, response ) {
            var term = request.term;
            {% if townIdForArea is defined %}
            	townId = {{ townIdForArea }};
        	{% endif %}
            {% if parent_field is not defined %}
                if ( term in cache ) {
                    response( cache[ term ] );
                    return;
                }
            {% else %}
                if ($("{{ parent_field }}").val() == '') {
                    return;
                }
            {% endif %}
            $.ajax({
                url: Routing.generate("{{ route }}", { term: {% if 'location' in field %} request.term.replace(/[^a-z0-9\s]/gi, '') {% else %} request.term {% endif %} }),
                dataType: 'json',
                type: 'GET',
                {% if parent_field is defined %}
                data: {page_limit: 10, {% if dimension_field is defined %} cd_id: $('{{ dimension_field }}').val() {% endif %}, 'parent_id': $("{{ parent_field }}").val()},
                {% else %}
                data: { townId: townId, page_limit: 10, {% if dimension_field is defined %} cd_id: $('{{ dimension_field }}').val(),  {% endif %}},
                {% endif %}
                success: function(data) {
                    var result = $.map(data['results'], function(item) {
                        return {
                            label: item.text,
                            id: item.id,
                            text2: item.text2 ? item.text2 : '',
                            index: item.index,
                            area_id: item.area_id ? item.area_id : '',
                            locationBy: item.locationBy ? item.locationBy : '',
                           	latlong: item.latlong ? item.latlong : '',
                        };
                    });
                    cache[ term ] = result;
                    response(result);
                }
            });
        },
        select: function( event, ui ) { 
          if ('{{ field }}' == '#fa_paa_category_select_category_id') {
            var eventLabel = $("{{ field }}"+'_autocomplete').val() + ' - ' + ui.item.value + ' - ' + ui.item.index;
            autoCompleteCategoryName = ui.item.value + ' - ' + ui.item.index;
            ga('send', 'event', 'PAA - Step 1', 'Select searching bar', eventLabel);
          }
          
          {% if 'location' in field or 'area' in field %}  
                setTimeout(function(){
                    $("{{ field }}").val(ui.item.id);
                    if(ui.item.latlong && ui.item.latlong != '') {
                    	$("{{ field }}"+'_lat_lng').val(ui.item.latlong);
                	}
                    
                    
                    {% if submitFormAfterSelect is defined and submitFormAfterSelect is not null %}   
                        {% if submitFormAfterSelect == 'fa_top_search' %}
                            $('#fa_top_search_leafLevelCategoryId').val($('#fa_top_search_tmpLeafLevelCategoryId').val());
                        {% endif %}
						
                        var areaId = "{{ field }}".replace('_location', "_area");
                        if('{{ field }}' == '#fa_top_search_item__location' && ui.item.area_id != '') {                         	
                    		$(areaId).val(ui.item.area_id);
                        }

                        {% if submitFormAfterSelect == 'fa_top_search' %}
                                setTopSearchDistance();
                        {% else %}
                                $('#{{ submitFormAfterSelect }}').submit();
                        {% endif %}                        
                    {% else %}  
                        {% if 'area' in field %}  
                        	if(ui.item.area_id != '') { 
                        		$('{{ field }}').val(ui.item.area_id);                        		
                        	}
                        	bindShowMapOnChangeAreasEvent('{{ field }}');
                        {% else %}
                        //for Top Search
                        	if(('{{ field }}' == '#fa_top_search_item__location' || '{{ field }}' == '#fa_left_search_item__location') && ui.item.area_id != '') {
								var areaId = "{{ field }}".replace('_location', "_area");
                        		$(areaId).val(ui.item.area_id);
                           	} else { 
                            	//check the location is London
                            	$("#location_area_div").hide();
                            	var locationVal = $('{{ field }}').val();
                            	if(locationVal === '{{ constant('Fa\\Bundle\\EntityBundle\\Repository\\LocationRepository::LONDON_TOWN_ID') }}' && ui.item.area_id == '') {
    								$("#location_area_div").show();
                                } else if(ui.item.area_id == '') {
                                	var areaId = "{{ field }}".replace('_location', "_area");
                                	var areaAutotxt = "{{ field }}".replace('_location', "_area_autocomplete");
                                	$(areaAutotxt).val('');
                                	$(areaId).val('');
                                	$("#location_area_div").hide();
                                }
                           	}

                        	bindShowMapOnChangeLocationEvent();
                    	{% endif %}
                    {% endif %}
                }, 500);
            {% else %}
                $("{{ field }}").val(ui.item.id);
                {% if 'category_id' in field %}
                    onSelectAutoSuggestCategory();
                {% endif %}
            {% endif %}
            $("{{ field }}"+'_close').show();
        },
        open: function( event, ui ) {
            $('.ui-autocomplete').css('width', $("{{ field }}"+'_autocomplete').outerWidth()+'px');
            
            {% if dropdownCssClass is defined %}
                $('.ui-autocomplete').addClass("{{ dropdownCssClass }}");
            {% endif %}
        },
        search: function( event, ui ) {
            $("{{ field }}").val($("{{ field }}"+'_autocomplete').val());
            if ($("{{ field }}"+'_autocomplete').val().length > 0) {
                $("{{ field }}"+'_close').show();
            }

            {% if 'location' in field %}
            	var areaId = "{{ field }}".replace('_location', "_area");
            	var areaTxt = "{{ field }}".replace('_location', "_area_autocomplete");
            	$(areaId).val('');
            	$(areaTxt).val('');
            {% endif %}
			
            var ans = ($("{{ field }}"+'_autocomplete').val() in cache);
            if ('{{ field }}' == '#fa_paa_category_select_category_id' && ans == false) {
                if ($("{{ field }}"+'_autocomplete').val().length == 2) {
                  ga('send', 'event', 'PAA - Step 1', 'Start searching bar', '');
                }
            }
        },
        change: function( event, ui ) {
            {% if 'make_id' in field %}
                loadModelsByMakeId($("{{ field }}").val());
            {% endif %}
            {# {% if 'location' in field and submitFormAfterSelect is not defined and not mobileDetectManager.isMobile() and not mobileDetectManager.isTablet()%} #}
            {% if 'location' in field and submitFormAfterSelect is not defined %}
                bindShowMapOnChangeLocationEvent();
            {% endif %}
            {% if 'category_id' in field and not mobileDetectManager.isMobile() and not mobileDetectManager.isTablet() %}
                onSelectAutoSuggestCategory();
            {% endif %}
        },
        close: function( event, ui ) { 
            {% if displayOnlyTown is defined %}
                $("{{ field }}"+'_autocomplete').val($("{{ field }}"+'_autocomplete').val().split(',', 1));
            {% endif %}
        },
        focus: function( event, ui ) {
            {% if 'location' in field or 'area' in field %}
                setTimeout(function(){ 
                    $("{{ field }}").val(ui.item.id);
                	var areaId = "{{ field }}".replace('_location', "_area");

                	if(ui.item.area_id != '') {
                        $(areaId).val(ui.item.area_id);
                    } else {
                    	$(areaId).val('');
                    }
                }, 500);
            {% else %}
                $("{{ field }}").val(ui.item.id);
            {% endif %}
            $("{{ field }}"+'_close').show();
        }
    }).focus(function() {
        {% if 'event_start_time' in field or 'event_end_time' in field %}
            if ($("{{ field }}"+'_autocomplete').val().length == 0) {
                $(this).autocomplete("search", "all");
            }
        {% endif %}
    }).autocomplete('instance')._renderItem = function( ul, item ) {
         var label = item.label;
         var locationBy = item.locationBy;
         if (item.text2) {
            label = label + '<div> in <span>'+ item.text2 +'</span> </div>';
         }

         return $("<li data-custom-text='location_"+locationBy+"_text' >").append(label).appendTo( ul );
    };
});

$(document).ready(function(){
    {% if placeHolder is defined %}
        $("{{ field }}"+'_autocomplete').attr("placeholder", "{{ placeHolder }}");
    {% endif %}
    
    $("{{ field }}"+'_close').click(function() {
        $("{{ field }}"+'_autocomplete').val('');
        $("{{ field }}").val('');
        $("#fa_top_search_item__area").val('');
        $("#fa_left_search_item__area").val('');
        $(this).hide();
        {% if 'make_id' in field %}
            loadModelsByMakeId();
        {% endif %}

        {% if 'location' in field %}
            bindShowMapOnChangeLocationEvent();
            $("div[id*=location_area_div] input[type=text]").val("");
            $("#location_area_div").hide();
        {% endif %}

        {% if child_field is defined %}
            $("{{ child_field }}").val('');
            $("{{ child_field~'_autocomplete' }}").val('');
            $("{{ child_field }}"+'_close').hide();
        {% endif %}

        {% if 'category_id' in field %}
            onRemoveAutoSuggestCategory();
        {% endif %}
    });

    $("{{ field }}"+'_autocomplete').keyup(function() {
    	$('#fa_top_search_item__area').val('');
    	$("#fa_left_search_item__area").val('');
        {% if field == '#fa_paa_fourth_step_adult_location' %}
        	$('#'+$(this).attr('id')).trigger('change');
            $(this).nextAll('small.error').first().remove();
            $(this).parent().nextAll('small.error').first().remove();
            $('#'+$(this).attr('id')+'-button').removeClass('error-bdr');
    	{% endif %}
    	
        if ($(this).val().length < 1) {
            $("{{ field }}"+'_close').hide();
            $("{{ field }}").val("");
            
            {% if child_field is defined %}
                $("{{ child_field }}").val('');
                $("{{ child_field~'_autocomplete' }}").val('');
                $("{{ child_field }}"+'_close').hide();
            {% endif %}
        }
    });

    $("{{ field }}"+'_autocomplete').focus(function() {
        $(this).select();
    });

    $("{{ field }}"+'_autocomplete').blur(function() {
        if ($("{{ field }}"+'_autocomplete').val().length == 0) {
            $("{{ field }}"+'_close').hide();
        } else if($("{{ field }}"+'_autocomplete').val().length > 4) {
        	 {% if 'location' in field and 'paa' in field %}
				//check location is related to area;
				var locVal = $("{{ field }}"+'_autocomplete').val();
				$.ajax({
					url: "{{ path('fa_frontend_ajax_user_location_by_postcode') }}",
	                dataType: 'json',
	                type: 'post',
                    data: {post_code: locVal}
                })
                .done(function(data) { 
                	if (!$.isEmptyObject(data)) {
                    	if(data.latitude && data.latitude != '' && data.longitude && data.longitude != '') {
                        	var locationConcat = data.latitude + ', ' + data.longitude;
                    		$("{{ field }}"+'_lat_lng').val(locationConcat);
                    		showMarkerPaa(data.latitude, data.longitude);
                        } 
                     	if(locVal == '{{ constant('Fa\\Bundle\\EntityBundle\\Repository\\LocationRepository::LONDON_TXT') }}' || data.location  == '{{ constant('Fa\\Bundle\\EntityBundle\\Repository\\LocationRepository::LONDON_TOWN_ID') }}' || data.lvl  == 4 ) {
							$('#location_area_div').show();
                     	} else {
                        	$('#location_area_div').hide();
                        }
                    }
                });
        	 {% endif %}
        }
    });
    
    if ($("{{ field }}"+'_autocomplete').length > 0 && $("{{ field }}"+'_autocomplete').val().length < 1) {
        $("{{ field }}"+'_close').hide();
    } else {
        $("{{ field }}"+'_close').show();
    }
});

function bindShowMapOnChangeLocationEvent()
{
   $('#find_on_map').trigger('click');
}

function setTopSearchDistance() {
    var catId = $('#fa_top_search_item__category_id').val();
	var searchLocation = $('#fa_top_search_item__location').val();
	searchLocation = (searchLocation)?searchLocation:2;
    $.ajax({
         type: "post",
         dataType: "json",
         url: "{{ path('fa_frontend_ajax_user_location') }}",
         data: {'location': searchLocation, 'catId' : catId},
         success: function(data) {
             if (!$.isEmptyObject(data)) {
            	$('#distance_slider').val(data.default_distance);
                $('#fa_top_search_item__distance').val(data.default_distance);                 	
             } 
         }
     });       
}

function bindShowMapOnChangeAreasEvent(formName) {
	var locationVal = $(formName+'_autocomplete').val();
    if (locationVal && locationVal != '') {
    	$('#location_map_div').addClass('show-location-mapfit');
        $('#location_map_div').removeClass('hide-location-mapfit');
        showAddress(locationVal);
    } else {
    	$('#location_map_div').removeClass('show-location-mapfit');
  		$('#location_map_div').addClass('hide-location-mapfit');
    }
    return false;
}
//]]>
</script>